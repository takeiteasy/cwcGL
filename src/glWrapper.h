/*

 This file was generated by https://github.com/takeiteasy/cwcGL/blob/master/tools/gl.rb

 The MIT License (MIT)

 Copyright (c) 2022 George Watson

 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation
 files (the "Software"), to deal in the Software without restriction,
 including without limitation the rights to use, copy, modify, merge,
 publish, distribute, sublicense, and/or sell copies of the Software,
 and to permit persons to whom the Software is furnished to do so,
 subject to the following conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

#ifndef CWCGL_WRAPPER_HEADER
#define CWCGL_WRAPPER_HEADER
#ifdef __cplusplus
extern "C" {
#endif

#define __gl_glcorearb_h_ 1  /* Khronos core */
#define __gl_glext_h_ 1      /* Khronos compatibility */
#define __gl_h_ 1            /* Windows/Linux */
#define __GL_H__ 1           /* Windows */
#define __gl3_h_ 1           /* Mac */

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN 1
#endif
#include <windows.h>
#define APIENTRY __stdcall
#endif

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif
#ifndef GLAPI
#if defined(GLAD_GLAPI_EXPORT)
#if defined(_WIN32) || defined(__CYGWIN__)
#if defined(GLAD_GLAPI_EXPORT_BUILD)
#if defined(__GNUC__)
#define GLAPI __attribute__ ((dllexport)) extern
#else
#define GLAPI __declspec(dllexport) extern
#endif
#else
#if defined(__GNUC__)
#define GLAPI __attribute__ ((dllimport)) extern
#else
#define GLAPI __declspec(dllimport) extern
#endif
#endif
#elif defined(__GNUC__) && defined(GLAD_GLAPI_EXPORT_BUILD)
#define GLAPI __attribute__ ((visibility ("default"))) extern
#else
#define GLAPI extern
#endif
#else
#define GLAPI extern
#endif
#endif

#if !defined(EXPORT)
#if defined(CWCGL_WINDOWS)
#define EXPORT __declspec(dllexport)
#elif defined(CWCGL_EMSCRIPTEN)
#define EXPORT EMSCRIPTEN_KEEPALIVE
#else
#define EXPORT
#endif
#endif

#if !defined(CWCGL_VERSION)
#define CWCGL_VERSION 1000
#endif
#define GL_VERSION_1_0 1000
#define GL_VERSION_1_1 1010
#define GL_VERSION_1_2 1020
#define GL_VERSION_1_3 1030
#define GL_VERSION_1_4 1040
#define GL_VERSION_1_5 1050
#define GL_VERSION_2_0 2000
#define GL_VERSION_2_1 2010
#define GL_VERSION_3_0 3000
#define GL_VERSION_3_1 3010
#define GL_VERSION_3_2 3020
#define GL_VERSION_3_3 3030
#define GL_VERSION_4_0 4000
#define GL_VERSION_4_1 4010
#define GL_VERSION_4_2 4020
#define GL_VERSION_4_3 4030
#define GL_VERSION_4_4 4040
#define GL_VERSION_4_5 4050
#define GL_VERSION_4_6 4060

/* khrplatform.h -- [https://registry.khronos.org/EGL/api/KHR/khrplatform.h]
** Copyright (c) 2008-2018 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/

/* Khronos platform-specific types and definitions.
 *
 * The master copy of khrplatform.h is maintained in the Khronos EGL
 * Registry repository at https://github.com/KhronosGroup/EGL-Registry
 * The last semantic modification to khrplatform.h was at commit ID:
 *      67a3e0864c2d75ea5287b9f3d2eb74a745936692
 *
 * Adopters may modify this file to suit their platform. Adopters are
 * encouraged to submit platform specific modifications to the Khronos
 * group so that they can be included in future versions of this file.
 * Please submit changes by filing pull requests or issues on
 * the EGL Registry repository linked above.
 *
 *
 * See the Implementer's Guidelines for information about where this file
 * should be located on your system and for more details of its use:
 *    http://www.khronos.org/registry/implementers_guide.pdf
 *
 * This file should be included as
 *        #include <KHR/khrplatform.h>
 * by Khronos client API header files that use its types and defines.
 *
 * The types in khrplatform.h should only be used to define API-specific types.
 *
 * Types defined in khrplatform.h:
 *    khronos_int8_t              signed   8  bit
 *    khronos_uint8_t             unsigned 8  bit
 *    khronos_int16_t             signed   16 bit
 *    khronos_uint16_t            unsigned 16 bit
 *    khronos_int32_t             signed   32 bit
 *    khronos_uint32_t            unsigned 32 bit
 *    khronos_int64_t             signed   64 bit
 *    khronos_uint64_t            unsigned 64 bit
 *    khronos_intptr_t            signed   same number of bits as a pointer
 *    khronos_uintptr_t           unsigned same number of bits as a pointer
 *    khronos_ssize_t             signed   size
 *    khronos_usize_t             unsigned size
 *    khronos_float_t             signed   32 bit floating point
 *    khronos_time_ns_t           unsigned 64 bit time in nanoseconds
 *    khronos_utime_nanoseconds_t unsigned time interval or absolute time in
 *                                         nanoseconds
 *    khronos_stime_nanoseconds_t signed time interval in nanoseconds
 *    khronos_boolean_enum_t      enumerated boolean type. This should
 *      only be used as a base type when a client API's boolean type is
 *      an enum. Client APIs which use an integer or other type for
 *      booleans cannot use this as the base type for their boolean.
 *
 * Tokens defined in khrplatform.h:
 *
 *    KHRONOS_FALSE, KHRONOS_TRUE Enumerated boolean false/true values.
 *
 *    KHRONOS_SUPPORT_INT64 is 1 if 64 bit integers are supported; otherwise 0.
 *    KHRONOS_SUPPORT_FLOAT is 1 if floats are supported; otherwise 0.
 *
 * Calling convention macros defined in this file:
 *    KHRONOS_APICALL
 *    KHRONOS_APIENTRY
 *    KHRONOS_APIATTRIBUTES
 *
 * These may be used in function prototypes as:
 *
 *      KHRONOS_APICALL void KHRONOS_APIENTRY funcname(
 *                                  int arg1,
 *                                  int arg2) KHRONOS_APIATTRIBUTES;
 */

#if defined(__SCITECH_SNAP__) && !defined(KHRONOS_STATIC)
#   define KHRONOS_STATIC 1
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APICALL
 *-------------------------------------------------------------------------
 * This precedes the return type of the function in the function prototype.
 */
#if defined(KHRONOS_STATIC)
    /* If the preprocessor constant KHRONOS_STATIC is defined, make the
     * header compatible with static linking. */
#   define KHRONOS_APICALL
#elif defined(_WIN32)
#   define KHRONOS_APICALL __declspec(dllimport)
#elif defined (__SYMBIAN32__)
#   define KHRONOS_APICALL IMPORT_C
#elif defined(__ANDROID__)
#   define KHRONOS_APICALL __attribute__((visibility("default")))
#else
#   define KHRONOS_APICALL
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APIENTRY
 *-------------------------------------------------------------------------
 * This follows the return type of the function  and precedes the function
 * name in the function prototype.
 */
#if defined(_WIN32) && !defined(_WIN32_WCE) && !defined(__SCITECH_SNAP__)
    /* Win32 but not WinCE */
#   define KHRONOS_APIENTRY __stdcall
#else
#   define KHRONOS_APIENTRY
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APIATTRIBUTES
 *-------------------------------------------------------------------------
 * This follows the closing parenthesis of the function prototype arguments.
 */
#if defined (__ARMCC_2__)
#define KHRONOS_APIATTRIBUTES __softfp
#else
#define KHRONOS_APIATTRIBUTES
#endif

/*-------------------------------------------------------------------------
 * basic type definitions
 *-----------------------------------------------------------------------*/
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || defined(__GNUC__) || defined(__SCO__) || defined(__USLC__)


/*
 * Using <stdint.h>
 */
#include <stdint.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1
/*
 * To support platform where unsigned long cannot be used interchangeably with
 * inptr_t (e.g. CHERI-extended ISAs), we can use the stdint.h intptr_t.
 * Ideally, we could just use (u)intptr_t everywhere, but this could result in
 * ABI breakage if khronos_uintptr_t is changed from unsigned long to
 * unsigned long long or similar (this results in different C++ name mangling).
 * To avoid changes for existing platforms, we restrict usage of intptr_t to
 * platforms where the size of a pointer is larger than the size of long.
 */
#if defined(__SIZEOF_LONG__) && defined(__SIZEOF_POINTER__)
#if __SIZEOF_POINTER__ > __SIZEOF_LONG__
#define KHRONOS_USE_INTPTR_T
#endif
#endif

#elif defined(__VMS ) || defined(__sgi)

/*
 * Using <inttypes.h>
 */
#include <inttypes.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif defined(_WIN32) && !defined(__SCITECH_SNAP__)

/*
 * Win32
 */
typedef __int32                 khronos_int32_t;
typedef unsigned __int32        khronos_uint32_t;
typedef __int64                 khronos_int64_t;
typedef unsigned __int64        khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif defined(__sun__) || defined(__digital__)

/*
 * Sun or Digital
 */
typedef int                     khronos_int32_t;
typedef unsigned int            khronos_uint32_t;
#if defined(__arch64__) || defined(_LP64)
typedef long int                khronos_int64_t;
typedef unsigned long int       khronos_uint64_t;
#else
typedef long long int           khronos_int64_t;
typedef unsigned long long int  khronos_uint64_t;
#endif /* __arch64__ */
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif 0

/*
 * Hypothetical platform with no float or int64 support
 */
typedef int                     khronos_int32_t;
typedef unsigned int            khronos_uint32_t;
#define KHRONOS_SUPPORT_INT64   0
#define KHRONOS_SUPPORT_FLOAT   0

#else

/*
 * Generic fallback
 */
#include <stdint.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#endif


/*
 * Types that are (so far) the same on all platforms
 */
typedef signed   char          khronos_int8_t;
typedef unsigned char          khronos_uint8_t;
typedef signed   short int     khronos_int16_t;
typedef unsigned short int     khronos_uint16_t;

/*
 * Types that differ between LLP64 and LP64 architectures - in LLP64,
 * pointers are 64 bits, but 'long' is still 32 bits. Win64 appears
 * to be the only LLP64 architecture in current use.
 */
#ifdef KHRONOS_USE_INTPTR_T
typedef intptr_t               khronos_intptr_t;
typedef uintptr_t              khronos_uintptr_t;
#elif defined(_WIN64)
typedef signed   long long int khronos_intptr_t;
typedef unsigned long long int khronos_uintptr_t;
#else
typedef signed   long  int     khronos_intptr_t;
typedef unsigned long  int     khronos_uintptr_t;
#endif

#if defined(_WIN64)
typedef signed   long long int khronos_ssize_t;
typedef unsigned long long int khronos_usize_t;
#else
typedef signed   long  int     khronos_ssize_t;
typedef unsigned long  int     khronos_usize_t;
#endif

#if KHRONOS_SUPPORT_FLOAT
/*
 * Float type
 */
typedef          float         khronos_float_t;
#endif

#if KHRONOS_SUPPORT_INT64
/* Time types
 *
 * These types can be used to represent a time interval in nanoseconds or
 * an absolute Unadjusted System Time.  Unadjusted System Time is the number
 * of nanoseconds since some arbitrary system event (e.g. since the last
 * time the system booted).  The Unadjusted System Time is an unsigned
 * 64 bit value that wraps back to 0 every 584 years.  Time intervals
 * may be either signed or unsigned.
 */
typedef khronos_uint64_t       khronos_utime_nanoseconds_t;
typedef khronos_int64_t        khronos_stime_nanoseconds_t;
#endif

/*
 * Dummy value used to pad enum types to 32 bits.
 */
#ifndef KHRONOS_MAX_ENUM
#define KHRONOS_MAX_ENUM 0x7FFFFFFF
#endif

/*
 * Enumerated boolean type
 *
 * Values other than zero should be considered to be true.  Therefore
 * comparisons should not be made against KHRONOS_TRUE.
 */
typedef enum {
    KHRONOS_FALSE = 0,
    KHRONOS_TRUE  = 1,
    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM
} khronos_boolean_enum_t;
/* end of khrplatform.h */

typedef unsigned int GLenum;
typedef khronos_float_t GLfloat;
typedef int GLint;
typedef int GLsizei;
typedef unsigned int GLbitfield;
typedef double GLdouble;
typedef unsigned int GLuint;
typedef unsigned char GLboolean;
typedef khronos_uint8_t GLubyte;
typedef khronos_int8_t GLbyte;
typedef khronos_int16_t GLshort;
typedef khronos_uint16_t GLushort;
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_QUADS 0x0007
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_REPEAT 0x2901
#define GL_CURRENT_BIT 0x00000001
#define GL_POINT_BIT 0x00000002
#define GL_LINE_BIT 0x00000004
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_LIGHTING_BIT 0x00000040
#define GL_FOG_BIT 0x00000080
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_VIEWPORT_BIT 0x00000800
#define GL_TRANSFORM_BIT 0x00001000
#define GL_ENABLE_BIT 0x00002000
#define GL_HINT_BIT 0x00008000
#define GL_EVAL_BIT 0x00010000
#define GL_LIST_BIT 0x00020000
#define GL_TEXTURE_BIT 0x00040000
#define GL_SCISSOR_BIT 0x00080000
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_QUAD_STRIP 0x0008
#define GL_POLYGON 0x0009
#define GL_ACCUM 0x0100
#define GL_LOAD 0x0101
#define GL_RETURN 0x0102
#define GL_MULT 0x0103
#define GL_ADD 0x0104
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_2D 0x0600
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_POINT_TOKEN 0x0701
#define GL_LINE_TOKEN 0x0702
#define GL_POLYGON_TOKEN 0x0703
#define GL_BITMAP_TOKEN 0x0704
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_COEFF 0x0A00
#define GL_ORDER 0x0A01
#define GL_DOMAIN 0x0A02
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_POINT_SMOOTH 0x0B10
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LIST_MODE 0x0B30
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_LIST_BASE 0x0B32
#define GL_LIST_INDEX 0x0B33
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_EDGE_FLAG 0x0B43
#define GL_LIGHTING 0x0B50
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_SHADE_MODEL 0x0B54
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_MATERIAL 0x0B57
#define GL_FOG 0x0B60
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_START 0x0B63
#define GL_FOG_END 0x0B64
#define GL_FOG_MODE 0x0B65
#define GL_FOG_COLOR 0x0B66
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_MATRIX_MODE 0x0BA0
#define GL_NORMALIZE 0x0BA1
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_LOGIC_OP 0x0BF1
#define GL_AUX_BUFFERS 0x0C00
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INDEX_MODE 0x0C30
#define GL_RGBA_MODE 0x0C31
#define GL_RENDER_MODE 0x0C40
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_FOG_HINT 0x0C54
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_STENCIL 0x0D11
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_OFFSET 0x0D13
#define GL_RED_SCALE 0x0D14
#define GL_RED_BIAS 0x0D15
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_GREEN_SCALE 0x0D18
#define GL_GREEN_BIAS 0x0D19
#define GL_BLUE_SCALE 0x0D1A
#define GL_BLUE_BIAS 0x0D1B
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_BIAS 0x0D1F
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_INDEX_BITS 0x0D51
#define GL_RED_BITS 0x0D52
#define GL_GREEN_BITS 0x0D53
#define GL_BLUE_BITS 0x0D54
#define GL_ALPHA_BITS 0x0D55
#define GL_DEPTH_BITS 0x0D56
#define GL_STENCIL_BITS 0x0D57
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_AUTO_NORMAL 0x0D80
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_BORDER 0x1005
#define GL_AMBIENT 0x1200
#define GL_DIFFUSE 0x1201
#define GL_SPECULAR 0x1202
#define GL_POSITION 0x1203
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SPOT_CUTOFF 0x1206
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_2_BYTES 0x1407
#define GL_3_BYTES 0x1408
#define GL_4_BYTES 0x1409
#define GL_EMISSION 0x1600
#define GL_SHININESS 0x1601
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_COLOR_INDEXES 0x1603
#define GL_MODELVIEW 0x1700
#define GL_PROJECTION 0x1701
#define GL_COLOR_INDEX 0x1900
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_BITMAP 0x1A00
#define GL_RENDER 0x1C00
#define GL_FEEDBACK 0x1C01
#define GL_SELECT 0x1C02
#define GL_FLAT 0x1D00
#define GL_SMOOTH 0x1D01
#define GL_S 0x2000
#define GL_T 0x2001
#define GL_R 0x2002
#define GL_Q 0x2003
#define GL_MODULATE 0x2100
#define GL_DECAL 0x2101
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV 0x2300
#define GL_EYE_LINEAR 0x2400
#define GL_OBJECT_LINEAR 0x2401
#define GL_SPHERE_MAP 0x2402
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_OBJECT_PLANE 0x2501
#define GL_EYE_PLANE 0x2502
#define GL_CLAMP 0x2900
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#if CWCGL_VERSION >= GL_VERSION_1_0
typedef void GLvoid;
#endif
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DOUBLE 0x140A
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_VERTEX_ARRAY 0x8074
#define GL_NORMAL_ARRAY 0x8075
#define GL_COLOR_ARRAY 0x8076
#define GL_INDEX_ARRAY 0x8077
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_INTENSITY 0x8049
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_C3F_V3F 0x2A24
#define GL_N3F_V3F 0x2A25
#define GL_C4F_N3F_V3F 0x2A26
#define GL_T2F_V3F 0x2A27
#define GL_T4F_V4F 0x2A28
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#if CWCGL_VERSION >= GL_VERSION_1_1
typedef khronos_float_t GLclampf;
typedef double GLclampd;
#endif
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_RESCALE_NORMAL 0x803A
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_SINGLE_COLOR 0x81F9
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_NORMAL_MAP 0x8511
#define GL_REFLECTION_MAP 0x8512
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMBINE 0x8570
#define GL_COMBINE_RGB 0x8571
#define GL_COMBINE_ALPHA 0x8572
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE2_RGB 0x8582
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE2_ALPHA 0x858A
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND2_RGB 0x8592
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND2_ALPHA 0x859A
#define GL_RGB_SCALE 0x8573
#define GL_ADD_SIGNED 0x8574
#define GL_INTERPOLATE 0x8575
#define GL_SUBTRACT 0x84E7
#define GL_CONSTANT 0x8576
#define GL_PRIMARY_COLOR 0x8577
#define GL_PREVIOUS 0x8578
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORDINATE 0x8451
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_COLOR_SUM 0x8458
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_EQUATION 0x8009
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_MIN 0x8007
#define GL_MAX 0x8008
typedef khronos_ssize_t GLsizeiptr;
typedef khronos_intptr_t GLintptr;
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_COORD 0x8451
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_SRC0_RGB 0x8580
#define GL_SRC1_RGB 0x8581
#define GL_SRC2_RGB 0x8582
#define GL_SRC0_ALPHA 0x8588
#define GL_SRC2_ALPHA 0x858A
typedef char GLchar;
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_POINT_SPRITE 0x8861
#define GL_COORD_REPLACE 0x8862
#define GL_MAX_TEXTURE_COORDS 0x8871
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_SLUMINANCE_ALPHA 0x8C44
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#define GL_SLUMINANCE 0x8C46
#define GL_SLUMINANCE8 0x8C47
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F 0x8814
#define GL_RGB32F 0x8815
#define GL_RGBA16F 0x881A
#define GL_RGB16F 0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_RGB9_E5 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_RGBA32UI 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGBA16UI 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGBA8UI 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGBA32I 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGBA16I 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGBA8I 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RED_INTEGER 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_RGB_INTEGER 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_INDEX 0x8222
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_HALF_FLOAT 0x140B
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_RG 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R16 0x822A
#define GL_RG8 0x822B
#define GL_RG16 0x822C
#define GL_R16F 0x822D
#define GL_R32F 0x822E
#define GL_RG16F 0x822F
#define GL_RG32F 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_CLAMP_VERTEX_COLOR 0x891A
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#define GL_ALPHA_INTEGER 0x8D97
#if CWCGL_VERSION >= GL_VERSION_3_0
typedef khronos_uint16_t GLhalf;
#endif
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_INVALID_INDEX 0xFFFFFFFF
typedef struct __GLsync *GLsync;
typedef khronos_uint64_t GLuint64;
typedef khronos_int64_t GLint64;
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_DEPTH_CLAMP 0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_SIGNALED 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_SRC1_COLOR 0x88F9
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_SAMPLER_BINDING 0x8919
#define GL_RGB10_A2UI 0x906F
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIMESTAMP 0x8E28
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_SAMPLE_SHADING 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_PATCHES 0x000E
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_ISOLINES 0x8E7A
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_FIXED 0x140C
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_LOW_FLOAT 0x8DF0
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_HIGH_FLOAT 0x8DF2
#define GL_LOW_INT 0x8DF3
#define GL_MEDIUM_INT 0x8DF4
#define GL_HIGH_INT 0x8DF5
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_RGB565 0x8D62
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_MAX_VIEWPORTS 0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
typedef void ( *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_COMPUTE_SHADER 0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_BUFFER 0x82E0
#define GL_SHADER 0x82E1
#define GL_PROGRAM 0x82E2
#define GL_QUERY 0x82E3
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_SAMPLER 0x82E6
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_COLOR_COMPONENTS 0x8283
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_COLOR_RENDERABLE 0x8286
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_MIPMAP 0x8293
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_COLOR_ENCODING 0x8296
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_FILTER 0x829A
#define GL_VERTEX_TEXTURE 0x829B
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_CLEAR_BUFFER 0x82B4
#define GL_TEXTURE_VIEW 0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_FULL_SUPPORT 0x82B7
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH 0x92F9
#define GL_TYPE 0x92FA
#define GL_ARRAY_SIZE 0x92FB
#define GL_OFFSET 0x92FC
#define GL_BLOCK_INDEX 0x92FD
#define GL_ARRAY_STRIDE 0x92FE
#define GL_MATRIX_STRIDE 0x92FF
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_IS_PER_PATCH 0x92E7
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_DISPLAY_LIST 0x82E7
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_CLEAR_TEXTURE 0x9365
#define GL_LOCATION_COMPONENT 0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_CONTEXT_LOST 0x0507
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#define GL_ZERO_TO_ONE 0x935F
#define GL_CLIP_ORIGIN 0x935C
#define GL_CLIP_DEPTH_MODE 0x935D
#define GL_QUERY_WAIT_INVERTED 0x8E17
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_MAX_CULL_DISTANCES 0x82F9
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_TEXTURE_TARGET 0x1006
#define GL_QUERY_TARGET 0x82EA
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_COLOR_TABLE 0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#define GL_PROXY_COLOR_TABLE 0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#define GL_CONVOLUTION_1D 0x8010
#define GL_CONVOLUTION_2D 0x8011
#define GL_SEPARABLE_2D 0x8012
#define GL_HISTOGRAM 0x8024
#define GL_PROXY_HISTOGRAM 0x8025
#define GL_MINMAX 0x802E
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#define GL_SHADER_BINARY_FORMAT_SPIR_V 0x9551
#define GL_SPIR_V_BINARY 0x9552
#define GL_PARAMETER_BUFFER 0x80EE
#define GL_PARAMETER_BUFFER_BINDING 0x80EF
#define GL_CONTEXT_FLAG_NO_ERROR_BIT 0x00000008
#define GL_VERTICES_SUBMITTED 0x82EE
#define GL_PRIMITIVES_SUBMITTED 0x82EF
#define GL_VERTEX_SHADER_INVOCATIONS 0x82F0
#define GL_TESS_CONTROL_SHADER_PATCHES 0x82F1
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS 0x82F2
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED 0x82F3
#define GL_FRAGMENT_SHADER_INVOCATIONS 0x82F4
#define GL_COMPUTE_SHADER_INVOCATIONS 0x82F5
#define GL_CLIPPING_INPUT_PRIMITIVES 0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES 0x82F7
#define GL_POLYGON_OFFSET_CLAMP 0x8E1B
#define GL_SPIR_V_EXTENSIONS 0x9553
#define GL_NUM_SPIR_V_EXTENSIONS 0x9554
#define GL_TEXTURE_MAX_ANISOTROPY 0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY 0x84FF
#define GL_TRANSFORM_FEEDBACK_OVERFLOW 0x82EC
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW 0x82ED

typedef khronos_intptr_t GLintptr;
typedef void GLvoid;
typedef khronos_int32_t GLclampx;
typedef khronos_float_t GLclampf;
typedef double GLclampd;
typedef void *GLeglClientBufferEXT;
typedef void *GLeglImageOES;
typedef char GLcharARB;
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t GLfixed;
typedef khronos_intptr_t GLintptrARB;
typedef khronos_ssize_t GLsizeiptrARB;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64EXT;
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif

typedef enum {
    cwcglAccumCommand,
    cwcglAccumxOESCommand,
    cwcglActiveProgramEXTCommand,
    cwcglActiveShaderProgramCommand,
    cwcglActiveShaderProgramEXTCommand,
    cwcglActiveStencilFaceEXTCommand,
    cwcglActiveTextureCommand,
    cwcglActiveTextureARBCommand,
    cwcglActiveVaryingNVCommand,
    cwcglAlphaFragmentOp1ATICommand,
    cwcglAlphaFragmentOp2ATICommand,
    cwcglAlphaFragmentOp3ATICommand,
    cwcglAlphaFuncCommand,
    cwcglAlphaFuncQCOMCommand,
    cwcglAlphaFuncxCommand,
    cwcglAlphaFuncxOESCommand,
    cwcglAlphaToCoverageDitherControlNVCommand,
    cwcglApplyFramebufferAttachmentCMAAINTELCommand,
    cwcglApplyTextureEXTCommand,
    cwcglAcquireKeyedMutexWin32EXTCommand,
    cwcglAreProgramsResidentNVCommand,
    cwcglAreTexturesResidentCommand,
    cwcglAreTexturesResidentEXTCommand,
    cwcglArrayElementCommand,
    cwcglArrayElementEXTCommand,
    cwcglArrayObjectATICommand,
    cwcglAsyncCopyBufferSubDataNVXCommand,
    cwcglAsyncCopyImageSubDataNVXCommand,
    cwcglAsyncMarkerSGIXCommand,
    cwcglAttachObjectARBCommand,
    cwcglAttachShaderCommand,
    cwcglBeginCommand,
    cwcglBeginConditionalRenderCommand,
    cwcglBeginConditionalRenderNVCommand,
    cwcglBeginConditionalRenderNVXCommand,
    cwcglBeginFragmentShaderATICommand,
    cwcglBeginOcclusionQueryNVCommand,
    cwcglBeginPerfMonitorAMDCommand,
    cwcglBeginPerfQueryINTELCommand,
    cwcglBeginQueryCommand,
    cwcglBeginQueryARBCommand,
    cwcglBeginQueryEXTCommand,
    cwcglBeginQueryIndexedCommand,
    cwcglBeginTransformFeedbackCommand,
    cwcglBeginTransformFeedbackEXTCommand,
    cwcglBeginTransformFeedbackNVCommand,
    cwcglBeginVertexShaderEXTCommand,
    cwcglBeginVideoCaptureNVCommand,
    cwcglBindAttribLocationCommand,
    cwcglBindAttribLocationARBCommand,
    cwcglBindBufferCommand,
    cwcglBindBufferARBCommand,
    cwcglBindBufferBaseCommand,
    cwcglBindBufferBaseEXTCommand,
    cwcglBindBufferBaseNVCommand,
    cwcglBindBufferOffsetEXTCommand,
    cwcglBindBufferOffsetNVCommand,
    cwcglBindBufferRangeCommand,
    cwcglBindBufferRangeEXTCommand,
    cwcglBindBufferRangeNVCommand,
    cwcglBindBuffersBaseCommand,
    cwcglBindBuffersRangeCommand,
    cwcglBindFragDataLocationCommand,
    cwcglBindFragDataLocationEXTCommand,
    cwcglBindFragDataLocationIndexedCommand,
    cwcglBindFragDataLocationIndexedEXTCommand,
    cwcglBindFragmentShaderATICommand,
    cwcglBindFramebufferCommand,
    cwcglBindFramebufferEXTCommand,
    cwcglBindFramebufferOESCommand,
    cwcglBindImageTextureCommand,
    cwcglBindImageTextureEXTCommand,
    cwcglBindImageTexturesCommand,
    cwcglBindLightParameterEXTCommand,
    cwcglBindMaterialParameterEXTCommand,
    cwcglBindMultiTextureEXTCommand,
    cwcglBindParameterEXTCommand,
    cwcglBindProgramARBCommand,
    cwcglBindProgramNVCommand,
    cwcglBindProgramPipelineCommand,
    cwcglBindProgramPipelineEXTCommand,
    cwcglBindRenderbufferCommand,
    cwcglBindRenderbufferEXTCommand,
    cwcglBindRenderbufferOESCommand,
    cwcglBindSamplerCommand,
    cwcglBindSamplersCommand,
    cwcglBindShadingRateImageNVCommand,
    cwcglBindTexGenParameterEXTCommand,
    cwcglBindTextureCommand,
    cwcglBindTextureEXTCommand,
    cwcglBindTextureUnitCommand,
    cwcglBindTextureUnitParameterEXTCommand,
    cwcglBindTexturesCommand,
    cwcglBindTransformFeedbackCommand,
    cwcglBindTransformFeedbackNVCommand,
    cwcglBindVertexArrayCommand,
    cwcglBindVertexArrayAPPLECommand,
    cwcglBindVertexArrayOESCommand,
    cwcglBindVertexBufferCommand,
    cwcglBindVertexBuffersCommand,
    cwcglBindVertexShaderEXTCommand,
    cwcglBindVideoCaptureStreamBufferNVCommand,
    cwcglBindVideoCaptureStreamTextureNVCommand,
    cwcglBinormal3bEXTCommand,
    cwcglBinormal3bvEXTCommand,
    cwcglBinormal3dEXTCommand,
    cwcglBinormal3dvEXTCommand,
    cwcglBinormal3fEXTCommand,
    cwcglBinormal3fvEXTCommand,
    cwcglBinormal3iEXTCommand,
    cwcglBinormal3ivEXTCommand,
    cwcglBinormal3sEXTCommand,
    cwcglBinormal3svEXTCommand,
    cwcglBinormalPointerEXTCommand,
    cwcglBitmapCommand,
    cwcglBitmapxOESCommand,
    cwcglBlendBarrierCommand,
    cwcglBlendBarrierKHRCommand,
    cwcglBlendBarrierNVCommand,
    cwcglBlendColorCommand,
    cwcglBlendColorEXTCommand,
    cwcglBlendColorxOESCommand,
    cwcglBlendEquationCommand,
    cwcglBlendEquationEXTCommand,
    cwcglBlendEquationIndexedAMDCommand,
    cwcglBlendEquationOESCommand,
    cwcglBlendEquationSeparateCommand,
    cwcglBlendEquationSeparateEXTCommand,
    cwcglBlendEquationSeparateIndexedAMDCommand,
    cwcglBlendEquationSeparateOESCommand,
    cwcglBlendEquationSeparateiCommand,
    cwcglBlendEquationSeparateiARBCommand,
    cwcglBlendEquationSeparateiEXTCommand,
    cwcglBlendEquationSeparateiOESCommand,
    cwcglBlendEquationiCommand,
    cwcglBlendEquationiARBCommand,
    cwcglBlendEquationiEXTCommand,
    cwcglBlendEquationiOESCommand,
    cwcglBlendFuncCommand,
    cwcglBlendFuncIndexedAMDCommand,
    cwcglBlendFuncSeparateCommand,
    cwcglBlendFuncSeparateEXTCommand,
    cwcglBlendFuncSeparateINGRCommand,
    cwcglBlendFuncSeparateIndexedAMDCommand,
    cwcglBlendFuncSeparateOESCommand,
    cwcglBlendFuncSeparateiCommand,
    cwcglBlendFuncSeparateiARBCommand,
    cwcglBlendFuncSeparateiEXTCommand,
    cwcglBlendFuncSeparateiOESCommand,
    cwcglBlendFunciCommand,
    cwcglBlendFunciARBCommand,
    cwcglBlendFunciEXTCommand,
    cwcglBlendFunciOESCommand,
    cwcglBlendParameteriNVCommand,
    cwcglBlitFramebufferCommand,
    cwcglBlitFramebufferANGLECommand,
    cwcglBlitFramebufferEXTCommand,
    cwcglBlitFramebufferLayerEXTCommand,
    cwcglBlitFramebufferLayersEXTCommand,
    cwcglBlitFramebufferNVCommand,
    cwcglBlitNamedFramebufferCommand,
    cwcglBufferAddressRangeNVCommand,
    cwcglBufferAttachMemoryNVCommand,
    cwcglBufferDataCommand,
    cwcglBufferDataARBCommand,
    cwcglBufferPageCommitmentARBCommand,
    cwcglBufferPageCommitmentMemNVCommand,
    cwcglBufferParameteriAPPLECommand,
    cwcglBufferStorageCommand,
    cwcglBufferStorageEXTCommand,
    cwcglBufferStorageExternalEXTCommand,
    cwcglBufferStorageMemEXTCommand,
    cwcglBufferSubDataCommand,
    cwcglBufferSubDataARBCommand,
    cwcglCallCommandListNVCommand,
    cwcglCallListCommand,
    cwcglCallListsCommand,
    cwcglCheckFramebufferStatusCommand,
    cwcglCheckFramebufferStatusEXTCommand,
    cwcglCheckFramebufferStatusOESCommand,
    cwcglCheckNamedFramebufferStatusCommand,
    cwcglCheckNamedFramebufferStatusEXTCommand,
    cwcglClampColorCommand,
    cwcglClampColorARBCommand,
    cwcglClearCommand,
    cwcglClearAccumCommand,
    cwcglClearAccumxOESCommand,
    cwcglClearBufferDataCommand,
    cwcglClearBufferSubDataCommand,
    cwcglClearBufferfiCommand,
    cwcglClearBufferfvCommand,
    cwcglClearBufferivCommand,
    cwcglClearBufferuivCommand,
    cwcglClearColorCommand,
    cwcglClearColorIiEXTCommand,
    cwcglClearColorIuiEXTCommand,
    cwcglClearColorxCommand,
    cwcglClearColorxOESCommand,
    cwcglClearDepthCommand,
    cwcglClearDepthdNVCommand,
    cwcglClearDepthfCommand,
    cwcglClearDepthfOESCommand,
    cwcglClearDepthxCommand,
    cwcglClearDepthxOESCommand,
    cwcglClearIndexCommand,
    cwcglClearNamedBufferDataCommand,
    cwcglClearNamedBufferDataEXTCommand,
    cwcglClearNamedBufferSubDataCommand,
    cwcglClearNamedBufferSubDataEXTCommand,
    cwcglClearNamedFramebufferfiCommand,
    cwcglClearNamedFramebufferfvCommand,
    cwcglClearNamedFramebufferivCommand,
    cwcglClearNamedFramebufferuivCommand,
    cwcglClearPixelLocalStorageuiEXTCommand,
    cwcglClearStencilCommand,
    cwcglClearTexImageCommand,
    cwcglClearTexImageEXTCommand,
    cwcglClearTexSubImageCommand,
    cwcglClearTexSubImageEXTCommand,
    cwcglClientActiveTextureCommand,
    cwcglClientActiveTextureARBCommand,
    cwcglClientActiveVertexStreamATICommand,
    cwcglClientAttribDefaultEXTCommand,
    cwcglClientWaitSemaphoreui64NVXCommand,
    cwcglClientWaitSyncCommand,
    cwcglClientWaitSyncAPPLECommand,
    cwcglClipControlCommand,
    cwcglClipControlEXTCommand,
    cwcglClipPlaneCommand,
    cwcglClipPlanefCommand,
    cwcglClipPlanefIMGCommand,
    cwcglClipPlanefOESCommand,
    cwcglClipPlanexCommand,
    cwcglClipPlanexIMGCommand,
    cwcglClipPlanexOESCommand,
    cwcglColor3bCommand,
    cwcglColor3bvCommand,
    cwcglColor3dCommand,
    cwcglColor3dvCommand,
    cwcglColor3fCommand,
    cwcglColor3fVertex3fSUNCommand,
    cwcglColor3fVertex3fvSUNCommand,
    cwcglColor3fvCommand,
    cwcglColor3hNVCommand,
    cwcglColor3hvNVCommand,
    cwcglColor3iCommand,
    cwcglColor3ivCommand,
    cwcglColor3sCommand,
    cwcglColor3svCommand,
    cwcglColor3ubCommand,
    cwcglColor3ubvCommand,
    cwcglColor3uiCommand,
    cwcglColor3uivCommand,
    cwcglColor3usCommand,
    cwcglColor3usvCommand,
    cwcglColor3xOESCommand,
    cwcglColor3xvOESCommand,
    cwcglColor4bCommand,
    cwcglColor4bvCommand,
    cwcglColor4dCommand,
    cwcglColor4dvCommand,
    cwcglColor4fCommand,
    cwcglColor4fNormal3fVertex3fSUNCommand,
    cwcglColor4fNormal3fVertex3fvSUNCommand,
    cwcglColor4fvCommand,
    cwcglColor4hNVCommand,
    cwcglColor4hvNVCommand,
    cwcglColor4iCommand,
    cwcglColor4ivCommand,
    cwcglColor4sCommand,
    cwcglColor4svCommand,
    cwcglColor4ubCommand,
    cwcglColor4ubVertex2fSUNCommand,
    cwcglColor4ubVertex2fvSUNCommand,
    cwcglColor4ubVertex3fSUNCommand,
    cwcglColor4ubVertex3fvSUNCommand,
    cwcglColor4ubvCommand,
    cwcglColor4uiCommand,
    cwcglColor4uivCommand,
    cwcglColor4usCommand,
    cwcglColor4usvCommand,
    cwcglColor4xCommand,
    cwcglColor4xOESCommand,
    cwcglColor4xvOESCommand,
    cwcglColorFormatNVCommand,
    cwcglColorFragmentOp1ATICommand,
    cwcglColorFragmentOp2ATICommand,
    cwcglColorFragmentOp3ATICommand,
    cwcglColorMaskCommand,
    cwcglColorMaskIndexedEXTCommand,
    cwcglColorMaskiCommand,
    cwcglColorMaskiEXTCommand,
    cwcglColorMaskiOESCommand,
    cwcglColorMaterialCommand,
    cwcglColorP3uiCommand,
    cwcglColorP3uivCommand,
    cwcglColorP4uiCommand,
    cwcglColorP4uivCommand,
    cwcglColorPointerCommand,
    cwcglColorPointerEXTCommand,
    cwcglColorPointerListIBMCommand,
    cwcglColorPointervINTELCommand,
    cwcglColorSubTableCommand,
    cwcglColorSubTableEXTCommand,
    cwcglColorTableCommand,
    cwcglColorTableEXTCommand,
    cwcglColorTableParameterfvCommand,
    cwcglColorTableParameterfvSGICommand,
    cwcglColorTableParameterivCommand,
    cwcglColorTableParameterivSGICommand,
    cwcglColorTableSGICommand,
    cwcglCombinerInputNVCommand,
    cwcglCombinerOutputNVCommand,
    cwcglCombinerParameterfNVCommand,
    cwcglCombinerParameterfvNVCommand,
    cwcglCombinerParameteriNVCommand,
    cwcglCombinerParameterivNVCommand,
    cwcglCombinerStageParameterfvNVCommand,
    cwcglCommandListSegmentsNVCommand,
    cwcglCompileCommandListNVCommand,
    cwcglCompileShaderCommand,
    cwcglCompileShaderARBCommand,
    cwcglCompileShaderIncludeARBCommand,
    cwcglCompressedMultiTexImage1DEXTCommand,
    cwcglCompressedMultiTexImage2DEXTCommand,
    cwcglCompressedMultiTexImage3DEXTCommand,
    cwcglCompressedMultiTexSubImage1DEXTCommand,
    cwcglCompressedMultiTexSubImage2DEXTCommand,
    cwcglCompressedMultiTexSubImage3DEXTCommand,
    cwcglCompressedTexImage1DCommand,
    cwcglCompressedTexImage1DARBCommand,
    cwcglCompressedTexImage2DCommand,
    cwcglCompressedTexImage2DARBCommand,
    cwcglCompressedTexImage3DCommand,
    cwcglCompressedTexImage3DARBCommand,
    cwcglCompressedTexImage3DOESCommand,
    cwcglCompressedTexSubImage1DCommand,
    cwcglCompressedTexSubImage1DARBCommand,
    cwcglCompressedTexSubImage2DCommand,
    cwcglCompressedTexSubImage2DARBCommand,
    cwcglCompressedTexSubImage3DCommand,
    cwcglCompressedTexSubImage3DARBCommand,
    cwcglCompressedTexSubImage3DOESCommand,
    cwcglCompressedTextureImage1DEXTCommand,
    cwcglCompressedTextureImage2DEXTCommand,
    cwcglCompressedTextureImage3DEXTCommand,
    cwcglCompressedTextureSubImage1DCommand,
    cwcglCompressedTextureSubImage1DEXTCommand,
    cwcglCompressedTextureSubImage2DCommand,
    cwcglCompressedTextureSubImage2DEXTCommand,
    cwcglCompressedTextureSubImage3DCommand,
    cwcglCompressedTextureSubImage3DEXTCommand,
    cwcglConservativeRasterParameterfNVCommand,
    cwcglConservativeRasterParameteriNVCommand,
    cwcglConvolutionFilter1DCommand,
    cwcglConvolutionFilter1DEXTCommand,
    cwcglConvolutionFilter2DCommand,
    cwcglConvolutionFilter2DEXTCommand,
    cwcglConvolutionParameterfCommand,
    cwcglConvolutionParameterfEXTCommand,
    cwcglConvolutionParameterfvCommand,
    cwcglConvolutionParameterfvEXTCommand,
    cwcglConvolutionParameteriCommand,
    cwcglConvolutionParameteriEXTCommand,
    cwcglConvolutionParameterivCommand,
    cwcglConvolutionParameterivEXTCommand,
    cwcglConvolutionParameterxOESCommand,
    cwcglConvolutionParameterxvOESCommand,
    cwcglCopyBufferSubDataCommand,
    cwcglCopyBufferSubDataNVCommand,
    cwcglCopyColorSubTableCommand,
    cwcglCopyColorSubTableEXTCommand,
    cwcglCopyColorTableCommand,
    cwcglCopyColorTableSGICommand,
    cwcglCopyConvolutionFilter1DCommand,
    cwcglCopyConvolutionFilter1DEXTCommand,
    cwcglCopyConvolutionFilter2DCommand,
    cwcglCopyConvolutionFilter2DEXTCommand,
    cwcglCopyImageSubDataCommand,
    cwcglCopyImageSubDataEXTCommand,
    cwcglCopyImageSubDataNVCommand,
    cwcglCopyImageSubDataOESCommand,
    cwcglCopyMultiTexImage1DEXTCommand,
    cwcglCopyMultiTexImage2DEXTCommand,
    cwcglCopyMultiTexSubImage1DEXTCommand,
    cwcglCopyMultiTexSubImage2DEXTCommand,
    cwcglCopyMultiTexSubImage3DEXTCommand,
    cwcglCopyNamedBufferSubDataCommand,
    cwcglCopyPathNVCommand,
    cwcglCopyPixelsCommand,
    cwcglCopyTexImage1DCommand,
    cwcglCopyTexImage1DEXTCommand,
    cwcglCopyTexImage2DCommand,
    cwcglCopyTexImage2DEXTCommand,
    cwcglCopyTexSubImage1DCommand,
    cwcglCopyTexSubImage1DEXTCommand,
    cwcglCopyTexSubImage2DCommand,
    cwcglCopyTexSubImage2DEXTCommand,
    cwcglCopyTexSubImage3DCommand,
    cwcglCopyTexSubImage3DEXTCommand,
    cwcglCopyTexSubImage3DOESCommand,
    cwcglCopyTextureImage1DEXTCommand,
    cwcglCopyTextureImage2DEXTCommand,
    cwcglCopyTextureLevelsAPPLECommand,
    cwcglCopyTextureSubImage1DCommand,
    cwcglCopyTextureSubImage1DEXTCommand,
    cwcglCopyTextureSubImage2DCommand,
    cwcglCopyTextureSubImage2DEXTCommand,
    cwcglCopyTextureSubImage3DCommand,
    cwcglCopyTextureSubImage3DEXTCommand,
    cwcglCoverFillPathInstancedNVCommand,
    cwcglCoverFillPathNVCommand,
    cwcglCoverStrokePathInstancedNVCommand,
    cwcglCoverStrokePathNVCommand,
    cwcglCoverageMaskNVCommand,
    cwcglCoverageModulationNVCommand,
    cwcglCoverageModulationTableNVCommand,
    cwcglCoverageOperationNVCommand,
    cwcglCreateBuffersCommand,
    cwcglCreateCommandListsNVCommand,
    cwcglCreateFramebuffersCommand,
    cwcglCreateMemoryObjectsEXTCommand,
    cwcglCreatePerfQueryINTELCommand,
    cwcglCreateProgramCommand,
    cwcglCreateProgramObjectARBCommand,
    cwcglCreateProgramPipelinesCommand,
    cwcglCreateProgressFenceNVXCommand,
    cwcglCreateQueriesCommand,
    cwcglCreateRenderbuffersCommand,
    cwcglCreateSamplersCommand,
    cwcglCreateSemaphoresNVCommand,
    cwcglCreateShaderCommand,
    cwcglCreateShaderObjectARBCommand,
    cwcglCreateShaderProgramEXTCommand,
    cwcglCreateShaderProgramvCommand,
    cwcglCreateShaderProgramvEXTCommand,
    cwcglCreateStatesNVCommand,
    cwcglCreateSyncFromCLeventARBCommand,
    cwcglCreateTexturesCommand,
    cwcglCreateTransformFeedbacksCommand,
    cwcglCreateVertexArraysCommand,
    cwcglCullFaceCommand,
    cwcglCullParameterdvEXTCommand,
    cwcglCullParameterfvEXTCommand,
    cwcglCurrentPaletteMatrixARBCommand,
    cwcglCurrentPaletteMatrixOESCommand,
    cwcglDebugMessageCallbackCommand,
    cwcglDebugMessageCallbackAMDCommand,
    cwcglDebugMessageCallbackARBCommand,
    cwcglDebugMessageCallbackKHRCommand,
    cwcglDebugMessageControlCommand,
    cwcglDebugMessageControlARBCommand,
    cwcglDebugMessageControlKHRCommand,
    cwcglDebugMessageEnableAMDCommand,
    cwcglDebugMessageInsertCommand,
    cwcglDebugMessageInsertAMDCommand,
    cwcglDebugMessageInsertARBCommand,
    cwcglDebugMessageInsertKHRCommand,
    cwcglDeformSGIXCommand,
    cwcglDeformationMap3dSGIXCommand,
    cwcglDeformationMap3fSGIXCommand,
    cwcglDeleteAsyncMarkersSGIXCommand,
    cwcglDeleteBuffersCommand,
    cwcglDeleteBuffersARBCommand,
    cwcglDeleteCommandListsNVCommand,
    cwcglDeleteFencesAPPLECommand,
    cwcglDeleteFencesNVCommand,
    cwcglDeleteFragmentShaderATICommand,
    cwcglDeleteFramebuffersCommand,
    cwcglDeleteFramebuffersEXTCommand,
    cwcglDeleteFramebuffersOESCommand,
    cwcglDeleteListsCommand,
    cwcglDeleteMemoryObjectsEXTCommand,
    cwcglDeleteNamedStringARBCommand,
    cwcglDeleteNamesAMDCommand,
    cwcglDeleteObjectARBCommand,
    cwcglDeleteOcclusionQueriesNVCommand,
    cwcglDeletePathsNVCommand,
    cwcglDeletePerfMonitorsAMDCommand,
    cwcglDeletePerfQueryINTELCommand,
    cwcglDeleteProgramCommand,
    cwcglDeleteProgramPipelinesCommand,
    cwcglDeleteProgramPipelinesEXTCommand,
    cwcglDeleteProgramsARBCommand,
    cwcglDeleteProgramsNVCommand,
    cwcglDeleteQueriesCommand,
    cwcglDeleteQueriesARBCommand,
    cwcglDeleteQueriesEXTCommand,
    cwcglDeleteQueryResourceTagNVCommand,
    cwcglDeleteRenderbuffersCommand,
    cwcglDeleteRenderbuffersEXTCommand,
    cwcglDeleteRenderbuffersOESCommand,
    cwcglDeleteSamplersCommand,
    cwcglDeleteSemaphoresEXTCommand,
    cwcglDeleteShaderCommand,
    cwcglDeleteStatesNVCommand,
    cwcglDeleteSyncCommand,
    cwcglDeleteSyncAPPLECommand,
    cwcglDeleteTexturesCommand,
    cwcglDeleteTexturesEXTCommand,
    cwcglDeleteTransformFeedbacksCommand,
    cwcglDeleteTransformFeedbacksNVCommand,
    cwcglDeleteVertexArraysCommand,
    cwcglDeleteVertexArraysAPPLECommand,
    cwcglDeleteVertexArraysOESCommand,
    cwcglDeleteVertexShaderEXTCommand,
    cwcglDepthBoundsEXTCommand,
    cwcglDepthBoundsdNVCommand,
    cwcglDepthFuncCommand,
    cwcglDepthMaskCommand,
    cwcglDepthRangeCommand,
    cwcglDepthRangeArraydvNVCommand,
    cwcglDepthRangeArrayfvNVCommand,
    cwcglDepthRangeArrayfvOESCommand,
    cwcglDepthRangeArrayvCommand,
    cwcglDepthRangeIndexedCommand,
    cwcglDepthRangeIndexeddNVCommand,
    cwcglDepthRangeIndexedfNVCommand,
    cwcglDepthRangeIndexedfOESCommand,
    cwcglDepthRangedNVCommand,
    cwcglDepthRangefCommand,
    cwcglDepthRangefOESCommand,
    cwcglDepthRangexCommand,
    cwcglDepthRangexOESCommand,
    cwcglDetachObjectARBCommand,
    cwcglDetachShaderCommand,
    cwcglDetailTexFuncSGISCommand,
    cwcglDisableCommand,
    cwcglDisableClientStateCommand,
    cwcglDisableClientStateIndexedEXTCommand,
    cwcglDisableClientStateiEXTCommand,
    cwcglDisableDriverControlQCOMCommand,
    cwcglDisableIndexedEXTCommand,
    cwcglDisableVariantClientStateEXTCommand,
    cwcglDisableVertexArrayAttribCommand,
    cwcglDisableVertexArrayAttribEXTCommand,
    cwcglDisableVertexArrayEXTCommand,
    cwcglDisableVertexAttribAPPLECommand,
    cwcglDisableVertexAttribArrayCommand,
    cwcglDisableVertexAttribArrayARBCommand,
    cwcglDisableiCommand,
    cwcglDisableiEXTCommand,
    cwcglDisableiNVCommand,
    cwcglDisableiOESCommand,
    cwcglDiscardFramebufferEXTCommand,
    cwcglDispatchComputeCommand,
    cwcglDispatchComputeGroupSizeARBCommand,
    cwcglDispatchComputeIndirectCommand,
    cwcglDrawArraysCommand,
    cwcglDrawArraysEXTCommand,
    cwcglDrawArraysIndirectCommand,
    cwcglDrawArraysInstancedCommand,
    cwcglDrawArraysInstancedANGLECommand,
    cwcglDrawArraysInstancedARBCommand,
    cwcglDrawArraysInstancedBaseInstanceCommand,
    cwcglDrawArraysInstancedBaseInstanceEXTCommand,
    cwcglDrawArraysInstancedEXTCommand,
    cwcglDrawArraysInstancedNVCommand,
    cwcglDrawBufferCommand,
    cwcglDrawBuffersCommand,
    cwcglDrawBuffersARBCommand,
    cwcglDrawBuffersATICommand,
    cwcglDrawBuffersEXTCommand,
    cwcglDrawBuffersIndexedEXTCommand,
    cwcglDrawBuffersNVCommand,
    cwcglDrawCommandsAddressNVCommand,
    cwcglDrawCommandsNVCommand,
    cwcglDrawCommandsStatesAddressNVCommand,
    cwcglDrawCommandsStatesNVCommand,
    cwcglDrawElementArrayAPPLECommand,
    cwcglDrawElementArrayATICommand,
    cwcglDrawElementsCommand,
    cwcglDrawElementsBaseVertexCommand,
    cwcglDrawElementsBaseVertexEXTCommand,
    cwcglDrawElementsBaseVertexOESCommand,
    cwcglDrawElementsIndirectCommand,
    cwcglDrawElementsInstancedCommand,
    cwcglDrawElementsInstancedANGLECommand,
    cwcglDrawElementsInstancedARBCommand,
    cwcglDrawElementsInstancedBaseInstanceCommand,
    cwcglDrawElementsInstancedBaseInstanceEXTCommand,
    cwcglDrawElementsInstancedBaseVertexCommand,
    cwcglDrawElementsInstancedBaseVertexBaseInstanceCommand,
    cwcglDrawElementsInstancedBaseVertexBaseInstanceEXTCommand,
    cwcglDrawElementsInstancedBaseVertexEXTCommand,
    cwcglDrawElementsInstancedBaseVertexOESCommand,
    cwcglDrawElementsInstancedEXTCommand,
    cwcglDrawElementsInstancedNVCommand,
    cwcglDrawMeshArraysSUNCommand,
    cwcglDrawMeshTasksNVCommand,
    cwcglDrawMeshTasksIndirectNVCommand,
    cwcglDrawPixelsCommand,
    cwcglDrawRangeElementArrayAPPLECommand,
    cwcglDrawRangeElementArrayATICommand,
    cwcglDrawRangeElementsCommand,
    cwcglDrawRangeElementsBaseVertexCommand,
    cwcglDrawRangeElementsBaseVertexEXTCommand,
    cwcglDrawRangeElementsBaseVertexOESCommand,
    cwcglDrawRangeElementsEXTCommand,
    cwcglDrawTexfOESCommand,
    cwcglDrawTexfvOESCommand,
    cwcglDrawTexiOESCommand,
    cwcglDrawTexivOESCommand,
    cwcglDrawTexsOESCommand,
    cwcglDrawTexsvOESCommand,
    cwcglDrawTextureNVCommand,
    cwcglDrawTexxOESCommand,
    cwcglDrawTexxvOESCommand,
    cwcglDrawTransformFeedbackCommand,
    cwcglDrawTransformFeedbackEXTCommand,
    cwcglDrawTransformFeedbackInstancedCommand,
    cwcglDrawTransformFeedbackInstancedEXTCommand,
    cwcglDrawTransformFeedbackNVCommand,
    cwcglDrawTransformFeedbackStreamCommand,
    cwcglDrawTransformFeedbackStreamInstancedCommand,
    cwcglEGLImageTargetRenderbufferStorageOESCommand,
    cwcglEGLImageTargetTexStorageEXTCommand,
    cwcglEGLImageTargetTexture2DOESCommand,
    cwcglEGLImageTargetTextureStorageEXTCommand,
    cwcglEdgeFlagCommand,
    cwcglEdgeFlagFormatNVCommand,
    cwcglEdgeFlagPointerCommand,
    cwcglEdgeFlagPointerEXTCommand,
    cwcglEdgeFlagPointerListIBMCommand,
    cwcglEdgeFlagvCommand,
    cwcglElementPointerAPPLECommand,
    cwcglElementPointerATICommand,
    cwcglEnableCommand,
    cwcglEnableClientStateCommand,
    cwcglEnableClientStateIndexedEXTCommand,
    cwcglEnableClientStateiEXTCommand,
    cwcglEnableDriverControlQCOMCommand,
    cwcglEnableIndexedEXTCommand,
    cwcglEnableVariantClientStateEXTCommand,
    cwcglEnableVertexArrayAttribCommand,
    cwcglEnableVertexArrayAttribEXTCommand,
    cwcglEnableVertexArrayEXTCommand,
    cwcglEnableVertexAttribAPPLECommand,
    cwcglEnableVertexAttribArrayCommand,
    cwcglEnableVertexAttribArrayARBCommand,
    cwcglEnableiCommand,
    cwcglEnableiEXTCommand,
    cwcglEnableiNVCommand,
    cwcglEnableiOESCommand,
    cwcglEndCommand,
    cwcglEndConditionalRenderCommand,
    cwcglEndConditionalRenderNVCommand,
    cwcglEndConditionalRenderNVXCommand,
    cwcglEndFragmentShaderATICommand,
    cwcglEndListCommand,
    cwcglEndOcclusionQueryNVCommand,
    cwcglEndPerfMonitorAMDCommand,
    cwcglEndPerfQueryINTELCommand,
    cwcglEndQueryCommand,
    cwcglEndQueryARBCommand,
    cwcglEndQueryEXTCommand,
    cwcglEndQueryIndexedCommand,
    cwcglEndTilingQCOMCommand,
    cwcglEndTransformFeedbackCommand,
    cwcglEndTransformFeedbackEXTCommand,
    cwcglEndTransformFeedbackNVCommand,
    cwcglEndVertexShaderEXTCommand,
    cwcglEndVideoCaptureNVCommand,
    cwcglEvalCoord1dCommand,
    cwcglEvalCoord1dvCommand,
    cwcglEvalCoord1fCommand,
    cwcglEvalCoord1fvCommand,
    cwcglEvalCoord1xOESCommand,
    cwcglEvalCoord1xvOESCommand,
    cwcglEvalCoord2dCommand,
    cwcglEvalCoord2dvCommand,
    cwcglEvalCoord2fCommand,
    cwcglEvalCoord2fvCommand,
    cwcglEvalCoord2xOESCommand,
    cwcglEvalCoord2xvOESCommand,
    cwcglEvalMapsNVCommand,
    cwcglEvalMesh1Command,
    cwcglEvalMesh2Command,
    cwcglEvalPoint1Command,
    cwcglEvalPoint2Command,
    cwcglEvaluateDepthValuesARBCommand,
    cwcglExecuteProgramNVCommand,
    cwcglExtGetBufferPointervQCOMCommand,
    cwcglExtGetBuffersQCOMCommand,
    cwcglExtGetFramebuffersQCOMCommand,
    cwcglExtGetProgramBinarySourceQCOMCommand,
    cwcglExtGetProgramsQCOMCommand,
    cwcglExtGetRenderbuffersQCOMCommand,
    cwcglExtGetShadersQCOMCommand,
    cwcglExtGetTexLevelParameterivQCOMCommand,
    cwcglExtGetTexSubImageQCOMCommand,
    cwcglExtGetTexturesQCOMCommand,
    cwcglExtIsProgramBinaryQCOMCommand,
    cwcglExtTexObjectStateOverrideiQCOMCommand,
    cwcglExtractComponentEXTCommand,
    cwcglFeedbackBufferCommand,
    cwcglFeedbackBufferxOESCommand,
    cwcglFenceSyncCommand,
    cwcglFenceSyncAPPLECommand,
    cwcglFinalCombinerInputNVCommand,
    cwcglFinishCommand,
    cwcglFinishAsyncSGIXCommand,
    cwcglFinishFenceAPPLECommand,
    cwcglFinishFenceNVCommand,
    cwcglFinishObjectAPPLECommand,
    cwcglFinishTextureSUNXCommand,
    cwcglFlushCommand,
    cwcglFlushMappedBufferRangeCommand,
    cwcglFlushMappedBufferRangeAPPLECommand,
    cwcglFlushMappedBufferRangeEXTCommand,
    cwcglFlushMappedNamedBufferRangeCommand,
    cwcglFlushMappedNamedBufferRangeEXTCommand,
    cwcglFlushPixelDataRangeNVCommand,
    cwcglFlushRasterSGIXCommand,
    cwcglFlushStaticDataIBMCommand,
    cwcglFlushVertexArrayRangeAPPLECommand,
    cwcglFlushVertexArrayRangeNVCommand,
    cwcglFogCoordFormatNVCommand,
    cwcglFogCoordPointerCommand,
    cwcglFogCoordPointerEXTCommand,
    cwcglFogCoordPointerListIBMCommand,
    cwcglFogCoorddCommand,
    cwcglFogCoorddEXTCommand,
    cwcglFogCoorddvCommand,
    cwcglFogCoorddvEXTCommand,
    cwcglFogCoordfCommand,
    cwcglFogCoordfEXTCommand,
    cwcglFogCoordfvCommand,
    cwcglFogCoordfvEXTCommand,
    cwcglFogCoordhNVCommand,
    cwcglFogCoordhvNVCommand,
    cwcglFogFuncSGISCommand,
    cwcglFogfCommand,
    cwcglFogfvCommand,
    cwcglFogiCommand,
    cwcglFogivCommand,
    cwcglFogxCommand,
    cwcglFogxOESCommand,
    cwcglFogxvCommand,
    cwcglFogxvOESCommand,
    cwcglFragmentColorMaterialSGIXCommand,
    cwcglFragmentCoverageColorNVCommand,
    cwcglFragmentLightModelfSGIXCommand,
    cwcglFragmentLightModelfvSGIXCommand,
    cwcglFragmentLightModeliSGIXCommand,
    cwcglFragmentLightModelivSGIXCommand,
    cwcglFragmentLightfSGIXCommand,
    cwcglFragmentLightfvSGIXCommand,
    cwcglFragmentLightiSGIXCommand,
    cwcglFragmentLightivSGIXCommand,
    cwcglFragmentMaterialfSGIXCommand,
    cwcglFragmentMaterialfvSGIXCommand,
    cwcglFragmentMaterialiSGIXCommand,
    cwcglFragmentMaterialivSGIXCommand,
    cwcglFrameTerminatorGREMEDYCommand,
    cwcglFrameZoomSGIXCommand,
    cwcglFramebufferDrawBufferEXTCommand,
    cwcglFramebufferDrawBuffersEXTCommand,
    cwcglFramebufferFetchBarrierEXTCommand,
    cwcglFramebufferFetchBarrierQCOMCommand,
    cwcglFramebufferFoveationConfigQCOMCommand,
    cwcglFramebufferFoveationParametersQCOMCommand,
    cwcglFramebufferParameteriCommand,
    cwcglFramebufferPixelLocalStorageSizeEXTCommand,
    cwcglFramebufferReadBufferEXTCommand,
    cwcglFramebufferRenderbufferCommand,
    cwcglFramebufferRenderbufferEXTCommand,
    cwcglFramebufferRenderbufferOESCommand,
    cwcglFramebufferSampleLocationsfvARBCommand,
    cwcglFramebufferSampleLocationsfvNVCommand,
    cwcglFramebufferSamplePositionsfvAMDCommand,
    cwcglFramebufferShadingRateEXTCommand,
    cwcglFramebufferTextureCommand,
    cwcglFramebufferTexture1DCommand,
    cwcglFramebufferTexture1DEXTCommand,
    cwcglFramebufferTexture2DCommand,
    cwcglFramebufferTexture2DEXTCommand,
    cwcglFramebufferTexture2DDownsampleIMGCommand,
    cwcglFramebufferTexture2DMultisampleEXTCommand,
    cwcglFramebufferTexture2DMultisampleIMGCommand,
    cwcglFramebufferTexture2DOESCommand,
    cwcglFramebufferTexture3DCommand,
    cwcglFramebufferTexture3DEXTCommand,
    cwcglFramebufferTexture3DOESCommand,
    cwcglFramebufferTextureARBCommand,
    cwcglFramebufferTextureEXTCommand,
    cwcglFramebufferTextureFaceARBCommand,
    cwcglFramebufferTextureFaceEXTCommand,
    cwcglFramebufferTextureLayerCommand,
    cwcglFramebufferTextureLayerARBCommand,
    cwcglFramebufferTextureLayerEXTCommand,
    cwcglFramebufferTextureLayerDownsampleIMGCommand,
    cwcglFramebufferTextureMultisampleMultiviewOVRCommand,
    cwcglFramebufferTextureMultiviewOVRCommand,
    cwcglFramebufferTextureOESCommand,
    cwcglFreeObjectBufferATICommand,
    cwcglFrontFaceCommand,
    cwcglFrustumCommand,
    cwcglFrustumfCommand,
    cwcglFrustumfOESCommand,
    cwcglFrustumxCommand,
    cwcglFrustumxOESCommand,
    cwcglGenAsyncMarkersSGIXCommand,
    cwcglGenBuffersCommand,
    cwcglGenBuffersARBCommand,
    cwcglGenFencesAPPLECommand,
    cwcglGenFencesNVCommand,
    cwcglGenFragmentShadersATICommand,
    cwcglGenFramebuffersCommand,
    cwcglGenFramebuffersEXTCommand,
    cwcglGenFramebuffersOESCommand,
    cwcglGenListsCommand,
    cwcglGenNamesAMDCommand,
    cwcglGenOcclusionQueriesNVCommand,
    cwcglGenPathsNVCommand,
    cwcglGenPerfMonitorsAMDCommand,
    cwcglGenProgramPipelinesCommand,
    cwcglGenProgramPipelinesEXTCommand,
    cwcglGenProgramsARBCommand,
    cwcglGenProgramsNVCommand,
    cwcglGenQueriesCommand,
    cwcglGenQueriesARBCommand,
    cwcglGenQueriesEXTCommand,
    cwcglGenQueryResourceTagNVCommand,
    cwcglGenRenderbuffersCommand,
    cwcglGenRenderbuffersEXTCommand,
    cwcglGenRenderbuffersOESCommand,
    cwcglGenSamplersCommand,
    cwcglGenSemaphoresEXTCommand,
    cwcglGenSymbolsEXTCommand,
    cwcglGenTexturesCommand,
    cwcglGenTexturesEXTCommand,
    cwcglGenTransformFeedbacksCommand,
    cwcglGenTransformFeedbacksNVCommand,
    cwcglGenVertexArraysCommand,
    cwcglGenVertexArraysAPPLECommand,
    cwcglGenVertexArraysOESCommand,
    cwcglGenVertexShadersEXTCommand,
    cwcglGenerateMipmapCommand,
    cwcglGenerateMipmapEXTCommand,
    cwcglGenerateMipmapOESCommand,
    cwcglGenerateMultiTexMipmapEXTCommand,
    cwcglGenerateTextureMipmapCommand,
    cwcglGenerateTextureMipmapEXTCommand,
    cwcglGetActiveAtomicCounterBufferivCommand,
    cwcglGetActiveAttribCommand,
    cwcglGetActiveAttribARBCommand,
    cwcglGetActiveSubroutineNameCommand,
    cwcglGetActiveSubroutineUniformNameCommand,
    cwcglGetActiveSubroutineUniformivCommand,
    cwcglGetActiveUniformCommand,
    cwcglGetActiveUniformARBCommand,
    cwcglGetActiveUniformBlockNameCommand,
    cwcglGetActiveUniformBlockivCommand,
    cwcglGetActiveUniformNameCommand,
    cwcglGetActiveUniformsivCommand,
    cwcglGetActiveVaryingNVCommand,
    cwcglGetArrayObjectfvATICommand,
    cwcglGetArrayObjectivATICommand,
    cwcglGetAttachedObjectsARBCommand,
    cwcglGetAttachedShadersCommand,
    cwcglGetAttribLocationCommand,
    cwcglGetAttribLocationARBCommand,
    cwcglGetBooleanIndexedvEXTCommand,
    cwcglGetBooleani_vCommand,
    cwcglGetBooleanvCommand,
    cwcglGetBufferParameteri64vCommand,
    cwcglGetBufferParameterivCommand,
    cwcglGetBufferParameterivARBCommand,
    cwcglGetBufferParameterui64vNVCommand,
    cwcglGetBufferPointervCommand,
    cwcglGetBufferPointervARBCommand,
    cwcglGetBufferPointervOESCommand,
    cwcglGetBufferSubDataCommand,
    cwcglGetBufferSubDataARBCommand,
    cwcglGetClipPlaneCommand,
    cwcglGetClipPlanefCommand,
    cwcglGetClipPlanefOESCommand,
    cwcglGetClipPlanexCommand,
    cwcglGetClipPlanexOESCommand,
    cwcglGetColorTableCommand,
    cwcglGetColorTableEXTCommand,
    cwcglGetColorTableParameterfvCommand,
    cwcglGetColorTableParameterfvEXTCommand,
    cwcglGetColorTableParameterfvSGICommand,
    cwcglGetColorTableParameterivCommand,
    cwcglGetColorTableParameterivEXTCommand,
    cwcglGetColorTableParameterivSGICommand,
    cwcglGetColorTableSGICommand,
    cwcglGetCombinerInputParameterfvNVCommand,
    cwcglGetCombinerInputParameterivNVCommand,
    cwcglGetCombinerOutputParameterfvNVCommand,
    cwcglGetCombinerOutputParameterivNVCommand,
    cwcglGetCombinerStageParameterfvNVCommand,
    cwcglGetCommandHeaderNVCommand,
    cwcglGetCompressedMultiTexImageEXTCommand,
    cwcglGetCompressedTexImageCommand,
    cwcglGetCompressedTexImageARBCommand,
    cwcglGetCompressedTextureImageCommand,
    cwcglGetCompressedTextureImageEXTCommand,
    cwcglGetCompressedTextureSubImageCommand,
    cwcglGetConvolutionFilterCommand,
    cwcglGetConvolutionFilterEXTCommand,
    cwcglGetConvolutionParameterfvCommand,
    cwcglGetConvolutionParameterfvEXTCommand,
    cwcglGetConvolutionParameterivCommand,
    cwcglGetConvolutionParameterivEXTCommand,
    cwcglGetConvolutionParameterxvOESCommand,
    cwcglGetCoverageModulationTableNVCommand,
    cwcglGetDebugMessageLogCommand,
    cwcglGetDebugMessageLogAMDCommand,
    cwcglGetDebugMessageLogARBCommand,
    cwcglGetDebugMessageLogKHRCommand,
    cwcglGetDetailTexFuncSGISCommand,
    cwcglGetDoubleIndexedvEXTCommand,
    cwcglGetDoublei_vCommand,
    cwcglGetDoublei_vEXTCommand,
    cwcglGetDoublevCommand,
    cwcglGetDriverControlStringQCOMCommand,
    cwcglGetDriverControlsQCOMCommand,
    cwcglGetErrorCommand,
    cwcglGetFenceivNVCommand,
    cwcglGetFinalCombinerInputParameterfvNVCommand,
    cwcglGetFinalCombinerInputParameterivNVCommand,
    cwcglGetFirstPerfQueryIdINTELCommand,
    cwcglGetFixedvCommand,
    cwcglGetFixedvOESCommand,
    cwcglGetFloatIndexedvEXTCommand,
    cwcglGetFloati_vCommand,
    cwcglGetFloati_vEXTCommand,
    cwcglGetFloati_vNVCommand,
    cwcglGetFloati_vOESCommand,
    cwcglGetFloatvCommand,
    cwcglGetFogFuncSGISCommand,
    cwcglGetFragDataIndexCommand,
    cwcglGetFragDataIndexEXTCommand,
    cwcglGetFragDataLocationCommand,
    cwcglGetFragDataLocationEXTCommand,
    cwcglGetFragmentLightfvSGIXCommand,
    cwcglGetFragmentLightivSGIXCommand,
    cwcglGetFragmentMaterialfvSGIXCommand,
    cwcglGetFragmentMaterialivSGIXCommand,
    cwcglGetFragmentShadingRatesEXTCommand,
    cwcglGetFramebufferAttachmentParameterivCommand,
    cwcglGetFramebufferAttachmentParameterivEXTCommand,
    cwcglGetFramebufferAttachmentParameterivOESCommand,
    cwcglGetFramebufferParameterfvAMDCommand,
    cwcglGetFramebufferParameterivCommand,
    cwcglGetFramebufferParameterivEXTCommand,
    cwcglGetFramebufferPixelLocalStorageSizeEXTCommand,
    cwcglGetGraphicsResetStatusCommand,
    cwcglGetGraphicsResetStatusARBCommand,
    cwcglGetGraphicsResetStatusEXTCommand,
    cwcglGetGraphicsResetStatusKHRCommand,
    cwcglGetHandleARBCommand,
    cwcglGetHistogramCommand,
    cwcglGetHistogramEXTCommand,
    cwcglGetHistogramParameterfvCommand,
    cwcglGetHistogramParameterfvEXTCommand,
    cwcglGetHistogramParameterivCommand,
    cwcglGetHistogramParameterivEXTCommand,
    cwcglGetHistogramParameterxvOESCommand,
    cwcglGetImageHandleARBCommand,
    cwcglGetImageHandleNVCommand,
    cwcglGetImageTransformParameterfvHPCommand,
    cwcglGetImageTransformParameterivHPCommand,
    cwcglGetInfoLogARBCommand,
    cwcglGetInstrumentsSGIXCommand,
    cwcglGetInteger64i_vCommand,
    cwcglGetInteger64vCommand,
    cwcglGetInteger64vAPPLECommand,
    cwcglGetInteger64vEXTCommand,
    cwcglGetIntegerIndexedvEXTCommand,
    cwcglGetIntegeri_vCommand,
    cwcglGetIntegeri_vEXTCommand,
    cwcglGetIntegerui64i_vNVCommand,
    cwcglGetIntegerui64vNVCommand,
    cwcglGetIntegervCommand,
    cwcglGetInternalformatSampleivNVCommand,
    cwcglGetInternalformati64vCommand,
    cwcglGetInternalformativCommand,
    cwcglGetInvariantBooleanvEXTCommand,
    cwcglGetInvariantFloatvEXTCommand,
    cwcglGetInvariantIntegervEXTCommand,
    cwcglGetLightfvCommand,
    cwcglGetLightivCommand,
    cwcglGetLightxOESCommand,
    cwcglGetLightxvCommand,
    cwcglGetLightxvOESCommand,
    cwcglGetListParameterfvSGIXCommand,
    cwcglGetListParameterivSGIXCommand,
    cwcglGetLocalConstantBooleanvEXTCommand,
    cwcglGetLocalConstantFloatvEXTCommand,
    cwcglGetLocalConstantIntegervEXTCommand,
    cwcglGetMapAttribParameterfvNVCommand,
    cwcglGetMapAttribParameterivNVCommand,
    cwcglGetMapControlPointsNVCommand,
    cwcglGetMapParameterfvNVCommand,
    cwcglGetMapParameterivNVCommand,
    cwcglGetMapdvCommand,
    cwcglGetMapfvCommand,
    cwcglGetMapivCommand,
    cwcglGetMapxvOESCommand,
    cwcglGetMaterialfvCommand,
    cwcglGetMaterialivCommand,
    cwcglGetMaterialxOESCommand,
    cwcglGetMaterialxvCommand,
    cwcglGetMaterialxvOESCommand,
    cwcglGetMemoryObjectDetachedResourcesuivNVCommand,
    cwcglGetMemoryObjectParameterivEXTCommand,
    cwcglGetMinmaxCommand,
    cwcglGetMinmaxEXTCommand,
    cwcglGetMinmaxParameterfvCommand,
    cwcglGetMinmaxParameterfvEXTCommand,
    cwcglGetMinmaxParameterivCommand,
    cwcglGetMinmaxParameterivEXTCommand,
    cwcglGetMultiTexEnvfvEXTCommand,
    cwcglGetMultiTexEnvivEXTCommand,
    cwcglGetMultiTexGendvEXTCommand,
    cwcglGetMultiTexGenfvEXTCommand,
    cwcglGetMultiTexGenivEXTCommand,
    cwcglGetMultiTexImageEXTCommand,
    cwcglGetMultiTexLevelParameterfvEXTCommand,
    cwcglGetMultiTexLevelParameterivEXTCommand,
    cwcglGetMultiTexParameterIivEXTCommand,
    cwcglGetMultiTexParameterIuivEXTCommand,
    cwcglGetMultiTexParameterfvEXTCommand,
    cwcglGetMultiTexParameterivEXTCommand,
    cwcglGetMultisamplefvCommand,
    cwcglGetMultisamplefvNVCommand,
    cwcglGetNamedBufferParameteri64vCommand,
    cwcglGetNamedBufferParameterivCommand,
    cwcglGetNamedBufferParameterivEXTCommand,
    cwcglGetNamedBufferParameterui64vNVCommand,
    cwcglGetNamedBufferPointervCommand,
    cwcglGetNamedBufferPointervEXTCommand,
    cwcglGetNamedBufferSubDataCommand,
    cwcglGetNamedBufferSubDataEXTCommand,
    cwcglGetNamedFramebufferParameterfvAMDCommand,
    cwcglGetNamedFramebufferAttachmentParameterivCommand,
    cwcglGetNamedFramebufferAttachmentParameterivEXTCommand,
    cwcglGetNamedFramebufferParameterivCommand,
    cwcglGetNamedFramebufferParameterivEXTCommand,
    cwcglGetNamedProgramLocalParameterIivEXTCommand,
    cwcglGetNamedProgramLocalParameterIuivEXTCommand,
    cwcglGetNamedProgramLocalParameterdvEXTCommand,
    cwcglGetNamedProgramLocalParameterfvEXTCommand,
    cwcglGetNamedProgramStringEXTCommand,
    cwcglGetNamedProgramivEXTCommand,
    cwcglGetNamedRenderbufferParameterivCommand,
    cwcglGetNamedRenderbufferParameterivEXTCommand,
    cwcglGetNamedStringARBCommand,
    cwcglGetNamedStringivARBCommand,
    cwcglGetNextPerfQueryIdINTELCommand,
    cwcglGetObjectBufferfvATICommand,
    cwcglGetObjectBufferivATICommand,
    cwcglGetObjectLabelCommand,
    cwcglGetObjectLabelEXTCommand,
    cwcglGetObjectLabelKHRCommand,
    cwcglGetObjectParameterfvARBCommand,
    cwcglGetObjectParameterivAPPLECommand,
    cwcglGetObjectParameterivARBCommand,
    cwcglGetObjectPtrLabelCommand,
    cwcglGetObjectPtrLabelKHRCommand,
    cwcglGetOcclusionQueryivNVCommand,
    cwcglGetOcclusionQueryuivNVCommand,
    cwcglGetPathColorGenfvNVCommand,
    cwcglGetPathColorGenivNVCommand,
    cwcglGetPathCommandsNVCommand,
    cwcglGetPathCoordsNVCommand,
    cwcglGetPathDashArrayNVCommand,
    cwcglGetPathLengthNVCommand,
    cwcglGetPathMetricRangeNVCommand,
    cwcglGetPathMetricsNVCommand,
    cwcglGetPathParameterfvNVCommand,
    cwcglGetPathParameterivNVCommand,
    cwcglGetPathSpacingNVCommand,
    cwcglGetPathTexGenfvNVCommand,
    cwcglGetPathTexGenivNVCommand,
    cwcglGetPerfCounterInfoINTELCommand,
    cwcglGetPerfMonitorCounterDataAMDCommand,
    cwcglGetPerfMonitorCounterInfoAMDCommand,
    cwcglGetPerfMonitorCounterStringAMDCommand,
    cwcglGetPerfMonitorCountersAMDCommand,
    cwcglGetPerfMonitorGroupStringAMDCommand,
    cwcglGetPerfMonitorGroupsAMDCommand,
    cwcglGetPerfQueryDataINTELCommand,
    cwcglGetPerfQueryIdByNameINTELCommand,
    cwcglGetPerfQueryInfoINTELCommand,
    cwcglGetPixelMapfvCommand,
    cwcglGetPixelMapuivCommand,
    cwcglGetPixelMapusvCommand,
    cwcglGetPixelMapxvCommand,
    cwcglGetPixelTexGenParameterfvSGISCommand,
    cwcglGetPixelTexGenParameterivSGISCommand,
    cwcglGetPixelTransformParameterfvEXTCommand,
    cwcglGetPixelTransformParameterivEXTCommand,
    cwcglGetPointerIndexedvEXTCommand,
    cwcglGetPointeri_vEXTCommand,
    cwcglGetPointervCommand,
    cwcglGetPointervEXTCommand,
    cwcglGetPointervKHRCommand,
    cwcglGetPolygonStippleCommand,
    cwcglGetProgramBinaryCommand,
    cwcglGetProgramBinaryOESCommand,
    cwcglGetProgramEnvParameterIivNVCommand,
    cwcglGetProgramEnvParameterIuivNVCommand,
    cwcglGetProgramEnvParameterdvARBCommand,
    cwcglGetProgramEnvParameterfvARBCommand,
    cwcglGetProgramInfoLogCommand,
    cwcglGetProgramInterfaceivCommand,
    cwcglGetProgramLocalParameterIivNVCommand,
    cwcglGetProgramLocalParameterIuivNVCommand,
    cwcglGetProgramLocalParameterdvARBCommand,
    cwcglGetProgramLocalParameterfvARBCommand,
    cwcglGetProgramNamedParameterdvNVCommand,
    cwcglGetProgramNamedParameterfvNVCommand,
    cwcglGetProgramParameterdvNVCommand,
    cwcglGetProgramParameterfvNVCommand,
    cwcglGetProgramPipelineInfoLogCommand,
    cwcglGetProgramPipelineInfoLogEXTCommand,
    cwcglGetProgramPipelineivCommand,
    cwcglGetProgramPipelineivEXTCommand,
    cwcglGetProgramResourceIndexCommand,
    cwcglGetProgramResourceLocationCommand,
    cwcglGetProgramResourceLocationIndexCommand,
    cwcglGetProgramResourceLocationIndexEXTCommand,
    cwcglGetProgramResourceNameCommand,
    cwcglGetProgramResourcefvNVCommand,
    cwcglGetProgramResourceivCommand,
    cwcglGetProgramStageivCommand,
    cwcglGetProgramStringARBCommand,
    cwcglGetProgramStringNVCommand,
    cwcglGetProgramSubroutineParameteruivNVCommand,
    cwcglGetProgramivCommand,
    cwcglGetProgramivARBCommand,
    cwcglGetProgramivNVCommand,
    cwcglGetQueryBufferObjecti64vCommand,
    cwcglGetQueryBufferObjectivCommand,
    cwcglGetQueryBufferObjectui64vCommand,
    cwcglGetQueryBufferObjectuivCommand,
    cwcglGetQueryIndexedivCommand,
    cwcglGetQueryObjecti64vCommand,
    cwcglGetQueryObjecti64vEXTCommand,
    cwcglGetQueryObjectivCommand,
    cwcglGetQueryObjectivARBCommand,
    cwcglGetQueryObjectivEXTCommand,
    cwcglGetQueryObjectui64vCommand,
    cwcglGetQueryObjectui64vEXTCommand,
    cwcglGetQueryObjectuivCommand,
    cwcglGetQueryObjectuivARBCommand,
    cwcglGetQueryObjectuivEXTCommand,
    cwcglGetQueryivCommand,
    cwcglGetQueryivARBCommand,
    cwcglGetQueryivEXTCommand,
    cwcglGetRenderbufferParameterivCommand,
    cwcglGetRenderbufferParameterivEXTCommand,
    cwcglGetRenderbufferParameterivOESCommand,
    cwcglGetSamplerParameterIivCommand,
    cwcglGetSamplerParameterIivEXTCommand,
    cwcglGetSamplerParameterIivOESCommand,
    cwcglGetSamplerParameterIuivCommand,
    cwcglGetSamplerParameterIuivEXTCommand,
    cwcglGetSamplerParameterIuivOESCommand,
    cwcglGetSamplerParameterfvCommand,
    cwcglGetSamplerParameterivCommand,
    cwcglGetSemaphoreParameterivNVCommand,
    cwcglGetSemaphoreParameterui64vEXTCommand,
    cwcglGetSeparableFilterCommand,
    cwcglGetSeparableFilterEXTCommand,
    cwcglGetShaderInfoLogCommand,
    cwcglGetShaderPrecisionFormatCommand,
    cwcglGetShaderSourceCommand,
    cwcglGetShaderSourceARBCommand,
    cwcglGetShaderivCommand,
    cwcglGetShadingRateImagePaletteNVCommand,
    cwcglGetShadingRateSampleLocationivNVCommand,
    cwcglGetSharpenTexFuncSGISCommand,
    cwcglGetStageIndexNVCommand,
    cwcCommand,
    cwcglGetStringCommand,
    cwcglGetStringiCommand,
    cwcglGetSubroutineIndexCommand,
    cwcglGetSubroutineUniformLocationCommand,
    cwcglGetSyncivCommand,
    cwcglGetSyncivAPPLECommand,
    cwcglGetTexBumpParameterfvATICommand,
    cwcglGetTexBumpParameterivATICommand,
    cwcglGetTexEnvfvCommand,
    cwcglGetTexEnvivCommand,
    cwcglGetTexEnvxvCommand,
    cwcglGetTexEnvxvOESCommand,
    cwcglGetTexFilterFuncSGISCommand,
    cwcglGetTexGendvCommand,
    cwcglGetTexGenfvCommand,
    cwcglGetTexGenfvOESCommand,
    cwcglGetTexGenivCommand,
    cwcglGetTexGenivOESCommand,
    cwcglGetTexGenxvOESCommand,
    cwcglGetTexImageCommand,
    cwcglGetTexLevelParameterfvCommand,
    cwcglGetTexLevelParameterivCommand,
    cwcglGetTexLevelParameterxvOESCommand,
    cwcglGetTexParameterIivCommand,
    cwcglGetTexParameterIivEXTCommand,
    cwcglGetTexParameterIivOESCommand,
    cwcglGetTexParameterIuivCommand,
    cwcglGetTexParameterIuivEXTCommand,
    cwcglGetTexParameterIuivOESCommand,
    cwcglGetTexParameterPointervAPPLECommand,
    cwcglGetTexParameterfvCommand,
    cwcglGetTexParameterivCommand,
    cwcglGetTexParameterxvCommand,
    cwcglGetTexParameterxvOESCommand,
    cwcglGetTextureHandleARBCommand,
    cwcglGetTextureHandleIMGCommand,
    cwcglGetTextureHandleNVCommand,
    cwcglGetTextureImageCommand,
    cwcglGetTextureImageEXTCommand,
    cwcglGetTextureLevelParameterfvCommand,
    cwcglGetTextureLevelParameterfvEXTCommand,
    cwcglGetTextureLevelParameterivCommand,
    cwcglGetTextureLevelParameterivEXTCommand,
    cwcglGetTextureParameterIivCommand,
    cwcglGetTextureParameterIivEXTCommand,
    cwcglGetTextureParameterIuivCommand,
    cwcglGetTextureParameterIuivEXTCommand,
    cwcglGetTextureParameterfvCommand,
    cwcglGetTextureParameterfvEXTCommand,
    cwcglGetTextureParameterivCommand,
    cwcglGetTextureParameterivEXTCommand,
    cwcglGetTextureSamplerHandleARBCommand,
    cwcglGetTextureSamplerHandleIMGCommand,
    cwcglGetTextureSamplerHandleNVCommand,
    cwcglGetTextureSubImageCommand,
    cwcglGetTrackMatrixivNVCommand,
    cwcglGetTransformFeedbackVaryingCommand,
    cwcglGetTransformFeedbackVaryingEXTCommand,
    cwcglGetTransformFeedbackVaryingNVCommand,
    cwcglGetTransformFeedbacki64_vCommand,
    cwcglGetTransformFeedbacki_vCommand,
    cwcglGetTransformFeedbackivCommand,
    cwcglGetTranslatedShaderSourceANGLECommand,
    cwcglGetUniformBlockIndexCommand,
    cwcglGetUniformBufferSizeEXTCommand,
    cwcglGetUniformIndicesCommand,
    cwcglGetUniformLocationCommand,
    cwcglGetUniformLocationARBCommand,
    cwcglGetUniformOffsetEXTCommand,
    cwcglGetUniformSubroutineuivCommand,
    cwcglGetUniformdvCommand,
    cwcglGetUniformfvCommand,
    cwcglGetUniformfvARBCommand,
    cwcglGetUniformi64vARBCommand,
    cwcglGetUniformi64vNVCommand,
    cwcglGetUniformivCommand,
    cwcglGetUniformivARBCommand,
    cwcglGetUniformui64vARBCommand,
    cwcglGetUniformui64vNVCommand,
    cwcglGetUniformuivCommand,
    cwcglGetUniformuivEXTCommand,
    cwcglGetUnsignedBytevEXTCommand,
    cwcglGetUnsignedBytei_vEXTCommand,
    cwcglGetVariantArrayObjectfvATICommand,
    cwcglGetVariantArrayObjectivATICommand,
    cwcglGetVariantBooleanvEXTCommand,
    cwcglGetVariantFloatvEXTCommand,
    cwcglGetVariantIntegervEXTCommand,
    cwcglGetVariantPointervEXTCommand,
    cwcglGetVaryingLocationNVCommand,
    cwcglGetVertexArrayIndexed64ivCommand,
    cwcglGetVertexArrayIndexedivCommand,
    cwcglGetVertexArrayIntegeri_vEXTCommand,
    cwcglGetVertexArrayIntegervEXTCommand,
    cwcglGetVertexArrayPointeri_vEXTCommand,
    cwcglGetVertexArrayPointervEXTCommand,
    cwcglGetVertexArrayivCommand,
    cwcglGetVertexAttribArrayObjectfvATICommand,
    cwcglGetVertexAttribArrayObjectivATICommand,
    cwcglGetVertexAttribIivCommand,
    cwcglGetVertexAttribIivEXTCommand,
    cwcglGetVertexAttribIuivCommand,
    cwcglGetVertexAttribIuivEXTCommand,
    cwcglGetVertexAttribLdvCommand,
    cwcglGetVertexAttribLdvEXTCommand,
    cwcglGetVertexAttribLi64vNVCommand,
    cwcglGetVertexAttribLui64vARBCommand,
    cwcglGetVertexAttribLui64vNVCommand,
    cwcglGetVertexAttribPointervCommand,
    cwcglGetVertexAttribPointervARBCommand,
    cwcglGetVertexAttribPointervNVCommand,
    cwcglGetVertexAttribdvCommand,
    cwcglGetVertexAttribdvARBCommand,
    cwcglGetVertexAttribdvNVCommand,
    cwcglGetVertexAttribfvCommand,
    cwcglGetVertexAttribfvARBCommand,
    cwcglGetVertexAttribfvNVCommand,
    cwcglGetVertexAttribivCommand,
    cwcglGetVertexAttribivARBCommand,
    cwcglGetVertexAttribivNVCommand,
    cwcglGetVideoCaptureStreamdvNVCommand,
    cwcglGetVideoCaptureStreamfvNVCommand,
    cwcglGetVideoCaptureStreamivNVCommand,
    cwcglGetVideoCaptureivNVCommand,
    cwcglGetVideoi64vNVCommand,
    cwcglGetVideoivNVCommand,
    cwcglGetVideoui64vNVCommand,
    cwcglGetVideouivNVCommand,
    cwcglGetnColorTableCommand,
    cwcglGetnColorTableARBCommand,
    cwcglGetnCompressedTexImageCommand,
    cwcglGetnCompressedTexImageARBCommand,
    cwcglGetnConvolutionFilterCommand,
    cwcglGetnConvolutionFilterARBCommand,
    cwcglGetnHistogramCommand,
    cwcglGetnHistogramARBCommand,
    cwcglGetnMapdvCommand,
    cwcglGetnMapdvARBCommand,
    cwcglGetnMapfvCommand,
    cwcglGetnMapfvARBCommand,
    cwcglGetnMapivCommand,
    cwcglGetnMapivARBCommand,
    cwcglGetnMinmaxCommand,
    cwcglGetnMinmaxARBCommand,
    cwcglGetnPixelMapfvCommand,
    cwcglGetnPixelMapfvARBCommand,
    cwcglGetnPixelMapuivCommand,
    cwcglGetnPixelMapuivARBCommand,
    cwcglGetnPixelMapusvCommand,
    cwcglGetnPixelMapusvARBCommand,
    cwcglGetnPolygonStippleCommand,
    cwcglGetnPolygonStippleARBCommand,
    cwcglGetnSeparableFilterCommand,
    cwcglGetnSeparableFilterARBCommand,
    cwcglGetnTexImageCommand,
    cwcglGetnTexImageARBCommand,
    cwcglGetnUniformdvCommand,
    cwcglGetnUniformdvARBCommand,
    cwcglGetnUniformfvCommand,
    cwcglGetnUniformfvARBCommand,
    cwcglGetnUniformfvEXTCommand,
    cwcglGetnUniformfvKHRCommand,
    cwcglGetnUniformi64vARBCommand,
    cwcglGetnUniformivCommand,
    cwcglGetnUniformivARBCommand,
    cwcglGetnUniformivEXTCommand,
    cwcglGetnUniformivKHRCommand,
    cwcglGetnUniformui64vARBCommand,
    cwcglGetnUniformuivCommand,
    cwcglGetnUniformuivARBCommand,
    cwcglGetnUniformuivKHRCommand,
    cwcglGlobalAlphaFactorbSUNCommand,
    cwcglGlobalAlphaFactordSUNCommand,
    cwcglGlobalAlphaFactorfSUNCommand,
    cwcglGlobalAlphaFactoriSUNCommand,
    cwcglGlobalAlphaFactorsSUNCommand,
    cwcglGlobalAlphaFactorubSUNCommand,
    cwcglGlobalAlphaFactoruiSUNCommand,
    cwcglGlobalAlphaFactorusSUNCommand,
    cwcglHintCommand,
    cwcglHintPGICommand,
    cwcglHistogramCommand,
    cwcglHistogramEXTCommand,
    cwcglIglooInterfaceSGIXCommand,
    cwcglImageTransformParameterfHPCommand,
    cwcglImageTransformParameterfvHPCommand,
    cwcglImageTransformParameteriHPCommand,
    cwcglImageTransformParameterivHPCommand,
    cwcglImportMemoryFdEXTCommand,
    cwcglImportMemoryWin32HandleEXTCommand,
    cwcglImportMemoryWin32NameEXTCommand,
    cwcglImportSemaphoreFdEXTCommand,
    cwcglImportSemaphoreWin32HandleEXTCommand,
    cwcglImportSemaphoreWin32NameEXTCommand,
    cwcglImportSyncEXTCommand,
    cwcglIndexFormatNVCommand,
    cwcglIndexFuncEXTCommand,
    cwcglIndexMaskCommand,
    cwcglIndexMaterialEXTCommand,
    cwcglIndexPointerCommand,
    cwcglIndexPointerEXTCommand,
    cwcglIndexPointerListIBMCommand,
    cwcglIndexdCommand,
    cwcglIndexdvCommand,
    cwcglIndexfCommand,
    cwcglIndexfvCommand,
    cwcglIndexiCommand,
    cwcglIndexivCommand,
    cwcglIndexsCommand,
    cwcglIndexsvCommand,
    cwcglIndexubCommand,
    cwcglIndexubvCommand,
    cwcglIndexxOESCommand,
    cwcglIndexxvOESCommand,
    cwcglInitNamesCommand,
    cwcglInsertComponentEXTCommand,
    cwcglInsertEventMarkerEXTCommand,
    cwcglInstrumentsBufferSGIXCommand,
    cwcglInterleavedArraysCommand,
    cwcglInterpolatePathsNVCommand,
    cwcglInvalidateBufferDataCommand,
    cwcglInvalidateBufferSubDataCommand,
    cwcglInvalidateFramebufferCommand,
    cwcglInvalidateNamedFramebufferDataCommand,
    cwcglInvalidateNamedFramebufferSubDataCommand,
    cwcglInvalidateSubFramebufferCommand,
    cwcglInvalidateTexImageCommand,
    cwcglInvalidateTexSubImageCommand,
    cwcglIsAsyncMarkerSGIXCommand,
    cwcglIsBufferCommand,
    cwcglIsBufferARBCommand,
    cwcglIsBufferResidentNVCommand,
    cwcglIsCommandListNVCommand,
    cwcglIsEnabledCommand,
    cwcglIsEnabledIndexedEXTCommand,
    cwcglIsEnablediCommand,
    cwcglIsEnablediEXTCommand,
    cwcglIsEnablediNVCommand,
    cwcglIsEnablediOESCommand,
    cwcglIsFenceAPPLECommand,
    cwcglIsFenceNVCommand,
    cwcglIsFramebufferCommand,
    cwcglIsFramebufferEXTCommand,
    cwcglIsFramebufferOESCommand,
    cwcglIsImageHandleResidentARBCommand,
    cwcglIsImageHandleResidentNVCommand,
    cwcglIsListCommand,
    cwcglIsMemoryObjectEXTCommand,
    cwcglIsNameAMDCommand,
    cwcglIsNamedBufferResidentNVCommand,
    cwcglIsNamedStringARBCommand,
    cwcglIsObjectBufferATICommand,
    cwcglIsOcclusionQueryNVCommand,
    cwcglIsPathNVCommand,
    cwcglIsPointInFillPathNVCommand,
    cwcglIsPointInStrokePathNVCommand,
    cwcglIsProgramCommand,
    cwcglIsProgramARBCommand,
    cwcglIsProgramNVCommand,
    cwcglIsProgramPipelineCommand,
    cwcglIsProgramPipelineEXTCommand,
    cwcglIsQueryCommand,
    cwcglIsQueryARBCommand,
    cwcglIsQueryEXTCommand,
    cwcglIsRenderbufferCommand,
    cwcglIsRenderbufferEXTCommand,
    cwcglIsRenderbufferOESCommand,
    cwcglIsSemaphoreEXTCommand,
    cwcglIsSamplerCommand,
    cwcglIsShaderCommand,
    cwcglIsStateNVCommand,
    cwcglIsSyncCommand,
    cwcglIsSyncAPPLECommand,
    cwcglIsTextureCommand,
    cwcglIsTextureEXTCommand,
    cwcglIsTextureHandleResidentARBCommand,
    cwcglIsTextureHandleResidentNVCommand,
    cwcglIsTransformFeedbackCommand,
    cwcglIsTransformFeedbackNVCommand,
    cwcglIsVariantEnabledEXTCommand,
    cwcglIsVertexArrayCommand,
    cwcglIsVertexArrayAPPLECommand,
    cwcglIsVertexArrayOESCommand,
    cwcglIsVertexAttribEnabledAPPLECommand,
    cwcglLGPUCopyImageSubDataNVXCommand,
    cwcglLGPUInterlockNVXCommand,
    cwcglLGPUNamedBufferSubDataNVXCommand,
    cwcglLabelObjectEXTCommand,
    cwcglLightEnviSGIXCommand,
    cwcglLightModelfCommand,
    cwcglLightModelfvCommand,
    cwcglLightModeliCommand,
    cwcglLightModelivCommand,
    cwcglLightModelxCommand,
    cwcglLightModelxOESCommand,
    cwcglLightModelxvCommand,
    cwcglLightModelxvOESCommand,
    cwcglLightfCommand,
    cwcglLightfvCommand,
    cwcglLightiCommand,
    cwcglLightivCommand,
    cwcglLightxCommand,
    cwcglLightxOESCommand,
    cwcglLightxvCommand,
    cwcglLightxvOESCommand,
    cwcglLineStippleCommand,
    cwcglLineWidthCommand,
    cwcglLineWidthxCommand,
    cwcglLineWidthxOESCommand,
    cwcglLinkProgramCommand,
    cwcglLinkProgramARBCommand,
    cwcglListBaseCommand,
    cwcglListDrawCommandsStatesClientNVCommand,
    cwcglListParameterfSGIXCommand,
    cwcglListParameterfvSGIXCommand,
    cwcglListParameteriSGIXCommand,
    cwcglListParameterivSGIXCommand,
    cwcglLoadIdentityCommand,
    cwcglLoadIdentityDeformationMapSGIXCommand,
    cwcglLoadMatrixdCommand,
    cwcglLoadMatrixfCommand,
    cwcglLoadMatrixxCommand,
    cwcglLoadMatrixxOESCommand,
    cwcglLoadNameCommand,
    cwcglLoadPaletteFromModelViewMatrixOESCommand,
    cwcglLoadProgramNVCommand,
    cwcglLoadTransposeMatrixdCommand,
    cwcglLoadTransposeMatrixdARBCommand,
    cwcglLoadTransposeMatrixfCommand,
    cwcglLoadTransposeMatrixfARBCommand,
    cwcglLoadTransposeMatrixxOESCommand,
    cwcglLockArraysEXTCommand,
    cwcglLogicOpCommand,
    cwcglMakeBufferNonResidentNVCommand,
    cwcglMakeBufferResidentNVCommand,
    cwcglMakeImageHandleNonResidentARBCommand,
    cwcglMakeImageHandleNonResidentNVCommand,
    cwcglMakeImageHandleResidentARBCommand,
    cwcglMakeImageHandleResidentNVCommand,
    cwcglMakeNamedBufferNonResidentNVCommand,
    cwcglMakeNamedBufferResidentNVCommand,
    cwcglMakeTextureHandleNonResidentARBCommand,
    cwcglMakeTextureHandleNonResidentNVCommand,
    cwcglMakeTextureHandleResidentARBCommand,
    cwcglMakeTextureHandleResidentNVCommand,
    cwcglMap1dCommand,
    cwcglMap1fCommand,
    cwcglMap1xOESCommand,
    cwcglMap2dCommand,
    cwcglMap2fCommand,
    cwcglMap2xOESCommand,
    cwcglMapBufferCommand,
    cwcglMapBufferARBCommand,
    cwcglMapBufferOESCommand,
    cwcglMapBufferRangeCommand,
    cwcglMapBufferRangeEXTCommand,
    cwcglMapControlPointsNVCommand,
    cwcglMapGrid1dCommand,
    cwcglMapGrid1fCommand,
    cwcglMapGrid1xOESCommand,
    cwcglMapGrid2dCommand,
    cwcglMapGrid2fCommand,
    cwcglMapGrid2xOESCommand,
    cwcglMapNamedBufferCommand,
    cwcglMapNamedBufferEXTCommand,
    cwcglMapNamedBufferRangeCommand,
    cwcglMapNamedBufferRangeEXTCommand,
    cwcglMapObjectBufferATICommand,
    cwcglMapParameterfvNVCommand,
    cwcglMapParameterivNVCommand,
    cwcglMapTexture2DINTELCommand,
    cwcglMapVertexAttrib1dAPPLECommand,
    cwcglMapVertexAttrib1fAPPLECommand,
    cwcglMapVertexAttrib2dAPPLECommand,
    cwcglMapVertexAttrib2fAPPLECommand,
    cwcglMaterialfCommand,
    cwcglMaterialfvCommand,
    cwcglMaterialiCommand,
    cwcglMaterialivCommand,
    cwcglMaterialxCommand,
    cwcglMaterialxOESCommand,
    cwcglMaterialxvCommand,
    cwcglMaterialxvOESCommand,
    cwcglMatrixFrustumEXTCommand,
    cwcglMatrixIndexPointerARBCommand,
    cwcglMatrixIndexPointerOESCommand,
    cwcglMatrixIndexubvARBCommand,
    cwcglMatrixIndexuivARBCommand,
    cwcglMatrixIndexusvARBCommand,
    cwcglMatrixLoad3x2fNVCommand,
    cwcglMatrixLoad3x3fNVCommand,
    cwcglMatrixLoadIdentityEXTCommand,
    cwcglMatrixLoadTranspose3x3fNVCommand,
    cwcglMatrixLoadTransposedEXTCommand,
    cwcglMatrixLoadTransposefEXTCommand,
    cwcglMatrixLoaddEXTCommand,
    cwcglMatrixLoadfEXTCommand,
    cwcglMatrixModeCommand,
    cwcglMatrixMult3x2fNVCommand,
    cwcglMatrixMult3x3fNVCommand,
    cwcglMatrixMultTranspose3x3fNVCommand,
    cwcglMatrixMultTransposedEXTCommand,
    cwcglMatrixMultTransposefEXTCommand,
    cwcglMatrixMultdEXTCommand,
    cwcglMatrixMultfEXTCommand,
    cwcglMatrixOrthoEXTCommand,
    cwcglMatrixPopEXTCommand,
    cwcglMatrixPushEXTCommand,
    cwcglMatrixRotatedEXTCommand,
    cwcglMatrixRotatefEXTCommand,
    cwcglMatrixScaledEXTCommand,
    cwcglMatrixScalefEXTCommand,
    cwcglMatrixTranslatedEXTCommand,
    cwcglMatrixTranslatefEXTCommand,
    cwcglMaxShaderCompilerThreadsKHRCommand,
    cwcglMaxShaderCompilerThreadsARBCommand,
    cwcglMemoryBarrierCommand,
    cwcglMemoryBarrierByRegionCommand,
    cwcglMemoryBarrierEXTCommand,
    cwcglMemoryObjectParameterivEXTCommand,
    cwcglMinSampleShadingCommand,
    cwcglMinSampleShadingARBCommand,
    cwcglMinSampleShadingOESCommand,
    cwcglMinmaxCommand,
    cwcglMinmaxEXTCommand,
    cwcglMultMatrixdCommand,
    cwcglMultMatrixfCommand,
    cwcglMultMatrixxCommand,
    cwcglMultMatrixxOESCommand,
    cwcglMultTransposeMatrixdCommand,
    cwcglMultTransposeMatrixdARBCommand,
    cwcglMultTransposeMatrixfCommand,
    cwcglMultTransposeMatrixfARBCommand,
    cwcglMultTransposeMatrixxOESCommand,
    cwcglMultiDrawArraysCommand,
    cwcglMultiDrawArraysEXTCommand,
    cwcglMultiDrawArraysIndirectCommand,
    cwcglMultiDrawArraysIndirectAMDCommand,
    cwcglMultiDrawArraysIndirectBindlessCountNVCommand,
    cwcglMultiDrawArraysIndirectBindlessNVCommand,
    cwcglMultiDrawArraysIndirectCountCommand,
    cwcglMultiDrawArraysIndirectCountARBCommand,
    cwcglMultiDrawArraysIndirectEXTCommand,
    cwcglMultiDrawElementArrayAPPLECommand,
    cwcglMultiDrawElementsCommand,
    cwcglMultiDrawElementsBaseVertexCommand,
    cwcglMultiDrawElementsBaseVertexEXTCommand,
    cwcglMultiDrawElementsEXTCommand,
    cwcglMultiDrawElementsIndirectCommand,
    cwcglMultiDrawElementsIndirectAMDCommand,
    cwcglMultiDrawElementsIndirectBindlessCountNVCommand,
    cwcglMultiDrawElementsIndirectBindlessNVCommand,
    cwcglMultiDrawElementsIndirectCountCommand,
    cwcglMultiDrawElementsIndirectCountARBCommand,
    cwcglMultiDrawElementsIndirectEXTCommand,
    cwcglMultiDrawMeshTasksIndirectNVCommand,
    cwcglMultiDrawMeshTasksIndirectCountNVCommand,
    cwcglMultiDrawRangeElementArrayAPPLECommand,
    cwcglMultiModeDrawArraysIBMCommand,
    cwcglMultiModeDrawElementsIBMCommand,
    cwcglMultiTexBufferEXTCommand,
    cwcglMultiTexCoord1bOESCommand,
    cwcglMultiTexCoord1bvOESCommand,
    cwcglMultiTexCoord1dCommand,
    cwcglMultiTexCoord1dARBCommand,
    cwcglMultiTexCoord1dvCommand,
    cwcglMultiTexCoord1dvARBCommand,
    cwcglMultiTexCoord1fCommand,
    cwcglMultiTexCoord1fARBCommand,
    cwcglMultiTexCoord1fvCommand,
    cwcglMultiTexCoord1fvARBCommand,
    cwcglMultiTexCoord1hNVCommand,
    cwcglMultiTexCoord1hvNVCommand,
    cwcglMultiTexCoord1iCommand,
    cwcglMultiTexCoord1iARBCommand,
    cwcglMultiTexCoord1ivCommand,
    cwcglMultiTexCoord1ivARBCommand,
    cwcglMultiTexCoord1sCommand,
    cwcglMultiTexCoord1sARBCommand,
    cwcglMultiTexCoord1svCommand,
    cwcglMultiTexCoord1svARBCommand,
    cwcglMultiTexCoord1xOESCommand,
    cwcglMultiTexCoord1xvOESCommand,
    cwcglMultiTexCoord2bOESCommand,
    cwcglMultiTexCoord2bvOESCommand,
    cwcglMultiTexCoord2dCommand,
    cwcglMultiTexCoord2dARBCommand,
    cwcglMultiTexCoord2dvCommand,
    cwcglMultiTexCoord2dvARBCommand,
    cwcglMultiTexCoord2fCommand,
    cwcglMultiTexCoord2fARBCommand,
    cwcglMultiTexCoord2fvCommand,
    cwcglMultiTexCoord2fvARBCommand,
    cwcglMultiTexCoord2hNVCommand,
    cwcglMultiTexCoord2hvNVCommand,
    cwcglMultiTexCoord2iCommand,
    cwcglMultiTexCoord2iARBCommand,
    cwcglMultiTexCoord2ivCommand,
    cwcglMultiTexCoord2ivARBCommand,
    cwcglMultiTexCoord2sCommand,
    cwcglMultiTexCoord2sARBCommand,
    cwcglMultiTexCoord2svCommand,
    cwcglMultiTexCoord2svARBCommand,
    cwcglMultiTexCoord2xOESCommand,
    cwcglMultiTexCoord2xvOESCommand,
    cwcglMultiTexCoord3bOESCommand,
    cwcglMultiTexCoord3bvOESCommand,
    cwcglMultiTexCoord3dCommand,
    cwcglMultiTexCoord3dARBCommand,
    cwcglMultiTexCoord3dvCommand,
    cwcglMultiTexCoord3dvARBCommand,
    cwcglMultiTexCoord3fCommand,
    cwcglMultiTexCoord3fARBCommand,
    cwcglMultiTexCoord3fvCommand,
    cwcglMultiTexCoord3fvARBCommand,
    cwcglMultiTexCoord3hNVCommand,
    cwcglMultiTexCoord3hvNVCommand,
    cwcglMultiTexCoord3iCommand,
    cwcglMultiTexCoord3iARBCommand,
    cwcglMultiTexCoord3ivCommand,
    cwcglMultiTexCoord3ivARBCommand,
    cwcglMultiTexCoord3sCommand,
    cwcglMultiTexCoord3sARBCommand,
    cwcglMultiTexCoord3svCommand,
    cwcglMultiTexCoord3svARBCommand,
    cwcglMultiTexCoord3xOESCommand,
    cwcglMultiTexCoord3xvOESCommand,
    cwcglMultiTexCoord4bOESCommand,
    cwcglMultiTexCoord4bvOESCommand,
    cwcglMultiTexCoord4dCommand,
    cwcglMultiTexCoord4dARBCommand,
    cwcglMultiTexCoord4dvCommand,
    cwcglMultiTexCoord4dvARBCommand,
    cwcglMultiTexCoord4fCommand,
    cwcglMultiTexCoord4fARBCommand,
    cwcglMultiTexCoord4fvCommand,
    cwcglMultiTexCoord4fvARBCommand,
    cwcglMultiTexCoord4hNVCommand,
    cwcglMultiTexCoord4hvNVCommand,
    cwcglMultiTexCoord4iCommand,
    cwcglMultiTexCoord4iARBCommand,
    cwcglMultiTexCoord4ivCommand,
    cwcglMultiTexCoord4ivARBCommand,
    cwcglMultiTexCoord4sCommand,
    cwcglMultiTexCoord4sARBCommand,
    cwcglMultiTexCoord4svCommand,
    cwcglMultiTexCoord4svARBCommand,
    cwcglMultiTexCoord4xCommand,
    cwcglMultiTexCoord4xOESCommand,
    cwcglMultiTexCoord4xvOESCommand,
    cwcglMultiTexCoordP1uiCommand,
    cwcglMultiTexCoordP1uivCommand,
    cwcglMultiTexCoordP2uiCommand,
    cwcglMultiTexCoordP2uivCommand,
    cwcglMultiTexCoordP3uiCommand,
    cwcglMultiTexCoordP3uivCommand,
    cwcglMultiTexCoordP4uiCommand,
    cwcglMultiTexCoordP4uivCommand,
    cwcglMultiTexCoordPointerEXTCommand,
    cwcglMultiTexEnvfEXTCommand,
    cwcglMultiTexEnvfvEXTCommand,
    cwcglMultiTexEnviEXTCommand,
    cwcglMultiTexEnvivEXTCommand,
    cwcglMultiTexGendEXTCommand,
    cwcglMultiTexGendvEXTCommand,
    cwcglMultiTexGenfEXTCommand,
    cwcglMultiTexGenfvEXTCommand,
    cwcglMultiTexGeniEXTCommand,
    cwcglMultiTexGenivEXTCommand,
    cwcglMultiTexImage1DEXTCommand,
    cwcglMultiTexImage2DEXTCommand,
    cwcglMultiTexImage3DEXTCommand,
    cwcglMultiTexParameterIivEXTCommand,
    cwcglMultiTexParameterIuivEXTCommand,
    cwcglMultiTexParameterfEXTCommand,
    cwcglMultiTexParameterfvEXTCommand,
    cwcglMultiTexParameteriEXTCommand,
    cwcglMultiTexParameterivEXTCommand,
    cwcglMultiTexRenderbufferEXTCommand,
    cwcglMultiTexSubImage1DEXTCommand,
    cwcglMultiTexSubImage2DEXTCommand,
    cwcglMultiTexSubImage3DEXTCommand,
    cwcglMulticastBarrierNVCommand,
    cwcglMulticastBlitFramebufferNVCommand,
    cwcglMulticastBufferSubDataNVCommand,
    cwcglMulticastCopyBufferSubDataNVCommand,
    cwcglMulticastCopyImageSubDataNVCommand,
    cwcglMulticastFramebufferSampleLocationsfvNVCommand,
    cwcglMulticastGetQueryObjecti64vNVCommand,
    cwcglMulticastGetQueryObjectivNVCommand,
    cwcglMulticastGetQueryObjectui64vNVCommand,
    cwcglMulticastGetQueryObjectuivNVCommand,
    cwcglMulticastScissorArrayvNVXCommand,
    cwcglMulticastViewportArrayvNVXCommand,
    cwcglMulticastViewportPositionWScaleNVXCommand,
    cwcglMulticastWaitSyncNVCommand,
    cwcglNamedBufferAttachMemoryNVCommand,
    cwcglNamedBufferDataCommand,
    cwcglNamedBufferDataEXTCommand,
    cwcglNamedBufferPageCommitmentARBCommand,
    cwcglNamedBufferPageCommitmentEXTCommand,
    cwcglNamedBufferPageCommitmentMemNVCommand,
    cwcglNamedBufferStorageCommand,
    cwcglNamedBufferStorageExternalEXTCommand,
    cwcglNamedBufferStorageEXTCommand,
    cwcglNamedBufferStorageMemEXTCommand,
    cwcglNamedBufferSubDataCommand,
    cwcglNamedBufferSubDataEXTCommand,
    cwcglNamedCopyBufferSubDataEXTCommand,
    cwcglNamedFramebufferDrawBufferCommand,
    cwcglNamedFramebufferDrawBuffersCommand,
    cwcglNamedFramebufferParameteriCommand,
    cwcglNamedFramebufferParameteriEXTCommand,
    cwcglNamedFramebufferReadBufferCommand,
    cwcglNamedFramebufferRenderbufferCommand,
    cwcglNamedFramebufferRenderbufferEXTCommand,
    cwcglNamedFramebufferSampleLocationsfvARBCommand,
    cwcglNamedFramebufferSampleLocationsfvNVCommand,
    cwcglNamedFramebufferTextureCommand,
    cwcglNamedFramebufferSamplePositionsfvAMDCommand,
    cwcglNamedFramebufferTexture1DEXTCommand,
    cwcglNamedFramebufferTexture2DEXTCommand,
    cwcglNamedFramebufferTexture3DEXTCommand,
    cwcglNamedFramebufferTextureEXTCommand,
    cwcglNamedFramebufferTextureFaceEXTCommand,
    cwcglNamedFramebufferTextureLayerCommand,
    cwcglNamedFramebufferTextureLayerEXTCommand,
    cwcglNamedProgramLocalParameter4dEXTCommand,
    cwcglNamedProgramLocalParameter4dvEXTCommand,
    cwcglNamedProgramLocalParameter4fEXTCommand,
    cwcglNamedProgramLocalParameter4fvEXTCommand,
    cwcglNamedProgramLocalParameterI4iEXTCommand,
    cwcglNamedProgramLocalParameterI4ivEXTCommand,
    cwcglNamedProgramLocalParameterI4uiEXTCommand,
    cwcglNamedProgramLocalParameterI4uivEXTCommand,
    cwcglNamedProgramLocalParameters4fvEXTCommand,
    cwcglNamedProgramLocalParametersI4ivEXTCommand,
    cwcglNamedProgramLocalParametersI4uivEXTCommand,
    cwcglNamedProgramStringEXTCommand,
    cwcglNamedRenderbufferStorageCommand,
    cwcglNamedRenderbufferStorageEXTCommand,
    cwcglNamedRenderbufferStorageMultisampleCommand,
    cwcglNamedRenderbufferStorageMultisampleAdvancedAMDCommand,
    cwcglNamedRenderbufferStorageMultisampleCoverageEXTCommand,
    cwcglNamedRenderbufferStorageMultisampleEXTCommand,
    cwcglNamedStringARBCommand,
    cwcglNewListCommand,
    cwcglNewObjectBufferATICommand,
    cwcglNormal3bCommand,
    cwcglNormal3bvCommand,
    cwcglNormal3dCommand,
    cwcglNormal3dvCommand,
    cwcglNormal3fCommand,
    cwcglNormal3fVertex3fSUNCommand,
    cwcglNormal3fVertex3fvSUNCommand,
    cwcglNormal3fvCommand,
    cwcglNormal3hNVCommand,
    cwcglNormal3hvNVCommand,
    cwcglNormal3iCommand,
    cwcglNormal3ivCommand,
    cwcglNormal3sCommand,
    cwcglNormal3svCommand,
    cwcglNormal3xCommand,
    cwcglNormal3xOESCommand,
    cwcglNormal3xvOESCommand,
    cwcglNormalFormatNVCommand,
    cwcglNormalP3uiCommand,
    cwcglNormalP3uivCommand,
    cwcglNormalPointerCommand,
    cwcglNormalPointerEXTCommand,
    cwcglNormalPointerListIBMCommand,
    cwcglNormalPointervINTELCommand,
    cwcglNormalStream3bATICommand,
    cwcglNormalStream3bvATICommand,
    cwcglNormalStream3dATICommand,
    cwcglNormalStream3dvATICommand,
    cwcglNormalStream3fATICommand,
    cwcglNormalStream3fvATICommand,
    cwcglNormalStream3iATICommand,
    cwcglNormalStream3ivATICommand,
    cwcglNormalStream3sATICommand,
    cwcglNormalStream3svATICommand,
    cwcglObjectLabelCommand,
    cwcglObjectLabelKHRCommand,
    cwcglObjectPtrLabelCommand,
    cwcglObjectPtrLabelKHRCommand,
    cwcglObjectPurgeableAPPLECommand,
    cwcglObjectUnpurgeableAPPLECommand,
    cwcglOrthoCommand,
    cwcglOrthofCommand,
    cwcglOrthofOESCommand,
    cwcglOrthoxCommand,
    cwcglOrthoxOESCommand,
    cwcglPNTrianglesfATICommand,
    cwcglPNTrianglesiATICommand,
    cwcglPassTexCoordATICommand,
    cwcglPassThroughCommand,
    cwcglPassThroughxOESCommand,
    cwcglPatchParameterfvCommand,
    cwcglPatchParameteriCommand,
    cwcglPatchParameteriEXTCommand,
    cwcglPatchParameteriOESCommand,
    cwcglPathColorGenNVCommand,
    cwcglPathCommandsNVCommand,
    cwcglPathCoordsNVCommand,
    cwcglPathCoverDepthFuncNVCommand,
    cwcglPathDashArrayNVCommand,
    cwcglPathFogGenNVCommand,
    cwcglPathGlyphIndexArrayNVCommand,
    cwcglPathGlyphIndexRangeNVCommand,
    cwcglPathGlyphRangeNVCommand,
    cwcglPathGlyphsNVCommand,
    cwcglPathMemoryGlyphIndexArrayNVCommand,
    cwcglPathParameterfNVCommand,
    cwcglPathParameterfvNVCommand,
    cwcglPathParameteriNVCommand,
    cwcglPathParameterivNVCommand,
    cwcglPathStencilDepthOffsetNVCommand,
    cwcglPathStencilFuncNVCommand,
    cwcglPathStringNVCommand,
    cwcglPathSubCommandsNVCommand,
    cwcglPathSubCoordsNVCommand,
    cwcglPathTexGenNVCommand,
    cwcglPauseTransformFeedbackCommand,
    cwcglPauseTransformFeedbackNVCommand,
    cwcglPixelDataRangeNVCommand,
    cwcglPixelMapfvCommand,
    cwcglPixelMapuivCommand,
    cwcglPixelMapusvCommand,
    cwcglPixelMapxCommand,
    cwcglPixelStorefCommand,
    cwcglPixelStoreiCommand,
    cwcglPixelStorexCommand,
    cwcglPixelTexGenParameterfSGISCommand,
    cwcglPixelTexGenParameterfvSGISCommand,
    cwcglPixelTexGenParameteriSGISCommand,
    cwcglPixelTexGenParameterivSGISCommand,
    cwcglPixelTexGenSGIXCommand,
    cwcglPixelTransferfCommand,
    cwcglPixelTransferiCommand,
    cwcglPixelTransferxOESCommand,
    cwcglPixelTransformParameterfEXTCommand,
    cwcglPixelTransformParameterfvEXTCommand,
    cwcglPixelTransformParameteriEXTCommand,
    cwcglPixelTransformParameterivEXTCommand,
    cwcglPixelZoomCommand,
    cwcglPixelZoomxOESCommand,
    cwcglPointAlongPathNVCommand,
    cwcglPointParameterfCommand,
    cwcglPointParameterfARBCommand,
    cwcglPointParameterfEXTCommand,
    cwcglPointParameterfSGISCommand,
    cwcglPointParameterfvCommand,
    cwcglPointParameterfvARBCommand,
    cwcglPointParameterfvEXTCommand,
    cwcglPointParameterfvSGISCommand,
    cwcglPointParameteriCommand,
    cwcglPointParameteriNVCommand,
    cwcglPointParameterivCommand,
    cwcglPointParameterivNVCommand,
    cwcglPointParameterxCommand,
    cwcglPointParameterxOESCommand,
    cwcglPointParameterxvCommand,
    cwcglPointParameterxvOESCommand,
    cwcglPointSizeCommand,
    cwcglPointSizePointerOESCommand,
    cwcglPointSizexCommand,
    cwcglPointSizexOESCommand,
    cwcglPollAsyncSGIXCommand,
    cwcglPollInstrumentsSGIXCommand,
    cwcglPolygonModeCommand,
    cwcglPolygonModeNVCommand,
    cwcglPolygonOffsetCommand,
    cwcglPolygonOffsetClampCommand,
    cwcglPolygonOffsetClampEXTCommand,
    cwcglPolygonOffsetEXTCommand,
    cwcglPolygonOffsetxCommand,
    cwcglPolygonOffsetxOESCommand,
    cwcglPolygonStippleCommand,
    cwcglPopAttribCommand,
    cwcglPopClientAttribCommand,
    cwcglPopDebugGroupCommand,
    cwcglPopDebugGroupKHRCommand,
    cwcglPopGroupMarkerEXTCommand,
    cwcglPopMatrixCommand,
    cwcglPopNameCommand,
    cwcglPresentFrameDualFillNVCommand,
    cwcglPresentFrameKeyedNVCommand,
    cwcglPrimitiveBoundingBoxCommand,
    cwcglPrimitiveBoundingBoxARBCommand,
    cwcglPrimitiveBoundingBoxEXTCommand,
    cwcglPrimitiveBoundingBoxOESCommand,
    cwcglPrimitiveRestartIndexCommand,
    cwcglPrimitiveRestartIndexNVCommand,
    cwcglPrimitiveRestartNVCommand,
    cwcglPrioritizeTexturesCommand,
    cwcglPrioritizeTexturesEXTCommand,
    cwcglPrioritizeTexturesxOESCommand,
    cwcglProgramBinaryCommand,
    cwcglProgramBinaryOESCommand,
    cwcglProgramBufferParametersIivNVCommand,
    cwcglProgramBufferParametersIuivNVCommand,
    cwcglProgramBufferParametersfvNVCommand,
    cwcglProgramEnvParameter4dARBCommand,
    cwcglProgramEnvParameter4dvARBCommand,
    cwcglProgramEnvParameter4fARBCommand,
    cwcglProgramEnvParameter4fvARBCommand,
    cwcglProgramEnvParameterI4iNVCommand,
    cwcglProgramEnvParameterI4ivNVCommand,
    cwcglProgramEnvParameterI4uiNVCommand,
    cwcglProgramEnvParameterI4uivNVCommand,
    cwcglProgramEnvParameters4fvEXTCommand,
    cwcglProgramEnvParametersI4ivNVCommand,
    cwcglProgramEnvParametersI4uivNVCommand,
    cwcglProgramLocalParameter4dARBCommand,
    cwcglProgramLocalParameter4dvARBCommand,
    cwcglProgramLocalParameter4fARBCommand,
    cwcglProgramLocalParameter4fvARBCommand,
    cwcglProgramLocalParameterI4iNVCommand,
    cwcglProgramLocalParameterI4ivNVCommand,
    cwcglProgramLocalParameterI4uiNVCommand,
    cwcglProgramLocalParameterI4uivNVCommand,
    cwcglProgramLocalParameters4fvEXTCommand,
    cwcglProgramLocalParametersI4ivNVCommand,
    cwcglProgramLocalParametersI4uivNVCommand,
    cwcglProgramNamedParameter4dNVCommand,
    cwcglProgramNamedParameter4dvNVCommand,
    cwcglProgramNamedParameter4fNVCommand,
    cwcglProgramNamedParameter4fvNVCommand,
    cwcglProgramParameter4dNVCommand,
    cwcglProgramParameter4dvNVCommand,
    cwcglProgramParameter4fNVCommand,
    cwcglProgramParameter4fvNVCommand,
    cwcglProgramParameteriCommand,
    cwcglProgramParameteriARBCommand,
    cwcglProgramParameteriEXTCommand,
    cwcglProgramParameters4dvNVCommand,
    cwcglProgramParameters4fvNVCommand,
    cwcglProgramPathFragmentInputGenNVCommand,
    cwcglProgramStringARBCommand,
    cwcglProgramSubroutineParametersuivNVCommand,
    cwcglProgramUniform1dCommand,
    cwcglProgramUniform1dEXTCommand,
    cwcglProgramUniform1dvCommand,
    cwcglProgramUniform1dvEXTCommand,
    cwcglProgramUniform1fCommand,
    cwcglProgramUniform1fEXTCommand,
    cwcglProgramUniform1fvCommand,
    cwcglProgramUniform1fvEXTCommand,
    cwcglProgramUniform1iCommand,
    cwcglProgramUniform1i64ARBCommand,
    cwcglProgramUniform1i64NVCommand,
    cwcglProgramUniform1i64vARBCommand,
    cwcglProgramUniform1i64vNVCommand,
    cwcglProgramUniform1iEXTCommand,
    cwcglProgramUniform1ivCommand,
    cwcglProgramUniform1ivEXTCommand,
    cwcglProgramUniform1uiCommand,
    cwcglProgramUniform1ui64ARBCommand,
    cwcglProgramUniform1ui64NVCommand,
    cwcglProgramUniform1ui64vARBCommand,
    cwcglProgramUniform1ui64vNVCommand,
    cwcglProgramUniform1uiEXTCommand,
    cwcglProgramUniform1uivCommand,
    cwcglProgramUniform1uivEXTCommand,
    cwcglProgramUniform2dCommand,
    cwcglProgramUniform2dEXTCommand,
    cwcglProgramUniform2dvCommand,
    cwcglProgramUniform2dvEXTCommand,
    cwcglProgramUniform2fCommand,
    cwcglProgramUniform2fEXTCommand,
    cwcglProgramUniform2fvCommand,
    cwcglProgramUniform2fvEXTCommand,
    cwcglProgramUniform2iCommand,
    cwcglProgramUniform2i64ARBCommand,
    cwcglProgramUniform2i64NVCommand,
    cwcglProgramUniform2i64vARBCommand,
    cwcglProgramUniform2i64vNVCommand,
    cwcglProgramUniform2iEXTCommand,
    cwcglProgramUniform2ivCommand,
    cwcglProgramUniform2ivEXTCommand,
    cwcglProgramUniform2uiCommand,
    cwcglProgramUniform2ui64ARBCommand,
    cwcglProgramUniform2ui64NVCommand,
    cwcglProgramUniform2ui64vARBCommand,
    cwcglProgramUniform2ui64vNVCommand,
    cwcglProgramUniform2uiEXTCommand,
    cwcglProgramUniform2uivCommand,
    cwcglProgramUniform2uivEXTCommand,
    cwcglProgramUniform3dCommand,
    cwcglProgramUniform3dEXTCommand,
    cwcglProgramUniform3dvCommand,
    cwcglProgramUniform3dvEXTCommand,
    cwcglProgramUniform3fCommand,
    cwcglProgramUniform3fEXTCommand,
    cwcglProgramUniform3fvCommand,
    cwcglProgramUniform3fvEXTCommand,
    cwcglProgramUniform3iCommand,
    cwcglProgramUniform3i64ARBCommand,
    cwcglProgramUniform3i64NVCommand,
    cwcglProgramUniform3i64vARBCommand,
    cwcglProgramUniform3i64vNVCommand,
    cwcglProgramUniform3iEXTCommand,
    cwcglProgramUniform3ivCommand,
    cwcglProgramUniform3ivEXTCommand,
    cwcglProgramUniform3uiCommand,
    cwcglProgramUniform3ui64ARBCommand,
    cwcglProgramUniform3ui64NVCommand,
    cwcglProgramUniform3ui64vARBCommand,
    cwcglProgramUniform3ui64vNVCommand,
    cwcglProgramUniform3uiEXTCommand,
    cwcglProgramUniform3uivCommand,
    cwcglProgramUniform3uivEXTCommand,
    cwcglProgramUniform4dCommand,
    cwcglProgramUniform4dEXTCommand,
    cwcglProgramUniform4dvCommand,
    cwcglProgramUniform4dvEXTCommand,
    cwcglProgramUniform4fCommand,
    cwcglProgramUniform4fEXTCommand,
    cwcglProgramUniform4fvCommand,
    cwcglProgramUniform4fvEXTCommand,
    cwcglProgramUniform4iCommand,
    cwcglProgramUniform4i64ARBCommand,
    cwcglProgramUniform4i64NVCommand,
    cwcglProgramUniform4i64vARBCommand,
    cwcglProgramUniform4i64vNVCommand,
    cwcglProgramUniform4iEXTCommand,
    cwcglProgramUniform4ivCommand,
    cwcglProgramUniform4ivEXTCommand,
    cwcglProgramUniform4uiCommand,
    cwcglProgramUniform4ui64ARBCommand,
    cwcglProgramUniform4ui64NVCommand,
    cwcglProgramUniform4ui64vARBCommand,
    cwcglProgramUniform4ui64vNVCommand,
    cwcglProgramUniform4uiEXTCommand,
    cwcglProgramUniform4uivCommand,
    cwcglProgramUniform4uivEXTCommand,
    cwcglProgramUniformHandleui64ARBCommand,
    cwcglProgramUniformHandleui64IMGCommand,
    cwcglProgramUniformHandleui64NVCommand,
    cwcglProgramUniformHandleui64vARBCommand,
    cwcglProgramUniformHandleui64vIMGCommand,
    cwcglProgramUniformHandleui64vNVCommand,
    cwcglProgramUniformMatrix2dvCommand,
    cwcglProgramUniformMatrix2dvEXTCommand,
    cwcglProgramUniformMatrix2fvCommand,
    cwcglProgramUniformMatrix2fvEXTCommand,
    cwcglProgramUniformMatrix2x3dvCommand,
    cwcglProgramUniformMatrix2x3dvEXTCommand,
    cwcglProgramUniformMatrix2x3fvCommand,
    cwcglProgramUniformMatrix2x3fvEXTCommand,
    cwcglProgramUniformMatrix2x4dvCommand,
    cwcglProgramUniformMatrix2x4dvEXTCommand,
    cwcglProgramUniformMatrix2x4fvCommand,
    cwcglProgramUniformMatrix2x4fvEXTCommand,
    cwcglProgramUniformMatrix3dvCommand,
    cwcglProgramUniformMatrix3dvEXTCommand,
    cwcglProgramUniformMatrix3fvCommand,
    cwcglProgramUniformMatrix3fvEXTCommand,
    cwcglProgramUniformMatrix3x2dvCommand,
    cwcglProgramUniformMatrix3x2dvEXTCommand,
    cwcglProgramUniformMatrix3x2fvCommand,
    cwcglProgramUniformMatrix3x2fvEXTCommand,
    cwcglProgramUniformMatrix3x4dvCommand,
    cwcglProgramUniformMatrix3x4dvEXTCommand,
    cwcglProgramUniformMatrix3x4fvCommand,
    cwcglProgramUniformMatrix3x4fvEXTCommand,
    cwcglProgramUniformMatrix4dvCommand,
    cwcglProgramUniformMatrix4dvEXTCommand,
    cwcglProgramUniformMatrix4fvCommand,
    cwcglProgramUniformMatrix4fvEXTCommand,
    cwcglProgramUniformMatrix4x2dvCommand,
    cwcglProgramUniformMatrix4x2dvEXTCommand,
    cwcglProgramUniformMatrix4x2fvCommand,
    cwcglProgramUniformMatrix4x2fvEXTCommand,
    cwcglProgramUniformMatrix4x3dvCommand,
    cwcglProgramUniformMatrix4x3dvEXTCommand,
    cwcglProgramUniformMatrix4x3fvCommand,
    cwcglProgramUniformMatrix4x3fvEXTCommand,
    cwcglProgramUniformui64NVCommand,
    cwcglProgramUniformui64vNVCommand,
    cwcglProgramVertexLimitNVCommand,
    cwcglProvokingVertexCommand,
    cwcglProvokingVertexEXTCommand,
    cwcglPushAttribCommand,
    cwcglPushClientAttribCommand,
    cwcglPushClientAttribDefaultEXTCommand,
    cwcglPushDebugGroupCommand,
    cwcglPushDebugGroupKHRCommand,
    cwcglPushGroupMarkerEXTCommand,
    cwcglPushMatrixCommand,
    cwcglPushNameCommand,
    cwcglQueryCounterCommand,
    cwcglQueryCounterEXTCommand,
    cwcglQueryMatrixxOESCommand,
    cwcglQueryObjectParameteruiAMDCommand,
    cwcglQueryResourceNVCommand,
    cwcglQueryResourceTagNVCommand,
    cwcglRasterPos2dCommand,
    cwcglRasterPos2dvCommand,
    cwcglRasterPos2fCommand,
    cwcglRasterPos2fvCommand,
    cwcglRasterPos2iCommand,
    cwcglRasterPos2ivCommand,
    cwcglRasterPos2sCommand,
    cwcglRasterPos2svCommand,
    cwcglRasterPos2xOESCommand,
    cwcglRasterPos2xvOESCommand,
    cwcglRasterPos3dCommand,
    cwcglRasterPos3dvCommand,
    cwcglRasterPos3fCommand,
    cwcglRasterPos3fvCommand,
    cwcglRasterPos3iCommand,
    cwcglRasterPos3ivCommand,
    cwcglRasterPos3sCommand,
    cwcglRasterPos3svCommand,
    cwcglRasterPos3xOESCommand,
    cwcglRasterPos3xvOESCommand,
    cwcglRasterPos4dCommand,
    cwcglRasterPos4dvCommand,
    cwcglRasterPos4fCommand,
    cwcglRasterPos4fvCommand,
    cwcglRasterPos4iCommand,
    cwcglRasterPos4ivCommand,
    cwcglRasterPos4sCommand,
    cwcglRasterPos4svCommand,
    cwcglRasterPos4xOESCommand,
    cwcglRasterPos4xvOESCommand,
    cwcglRasterSamplesEXTCommand,
    cwcglReadBufferCommand,
    cwcglReadBufferIndexedEXTCommand,
    cwcglReadBufferNVCommand,
    cwcglReadInstrumentsSGIXCommand,
    cwcglReadPixelsCommand,
    cwcglReadnPixelsCommand,
    cwcglReadnPixelsARBCommand,
    cwcglReadnPixelsEXTCommand,
    cwcglReadnPixelsKHRCommand,
    cwcglReleaseKeyedMutexWin32EXTCommand,
    cwcglRectdCommand,
    cwcglRectdvCommand,
    cwcglRectfCommand,
    cwcglRectfvCommand,
    cwcglRectiCommand,
    cwcglRectivCommand,
    cwcglRectsCommand,
    cwcglRectsvCommand,
    cwcglRectxOESCommand,
    cwcglRectxvOESCommand,
    cwcglReferencePlaneSGIXCommand,
    cwcglReleaseShaderCompilerCommand,
    cwcglRenderGpuMaskNVCommand,
    cwcglRenderModeCommand,
    cwcglRenderbufferStorageCommand,
    cwcglRenderbufferStorageEXTCommand,
    cwcglRenderbufferStorageMultisampleCommand,
    cwcglRenderbufferStorageMultisampleANGLECommand,
    cwcglRenderbufferStorageMultisampleAPPLECommand,
    cwcglRenderbufferStorageMultisampleAdvancedAMDCommand,
    cwcglRenderbufferStorageMultisampleCoverageNVCommand,
    cwcglRenderbufferStorageMultisampleEXTCommand,
    cwcglRenderbufferStorageMultisampleIMGCommand,
    cwcglRenderbufferStorageMultisampleNVCommand,
    cwcglRenderbufferStorageOESCommand,
    cwcglReplacementCodePointerSUNCommand,
    cwcglReplacementCodeubSUNCommand,
    cwcglReplacementCodeubvSUNCommand,
    cwcglReplacementCodeuiColor3fVertex3fSUNCommand,
    cwcglReplacementCodeuiColor3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiColor4fNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiColor4fNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiColor4ubVertex3fSUNCommand,
    cwcglReplacementCodeuiColor4ubVertex3fvSUNCommand,
    cwcglReplacementCodeuiNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiSUNCommand,
    cwcglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiTexCoord2fNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiTexCoord2fVertex3fSUNCommand,
    cwcglReplacementCodeuiTexCoord2fVertex3fvSUNCommand,
    cwcglReplacementCodeuiVertex3fSUNCommand,
    cwcglReplacementCodeuiVertex3fvSUNCommand,
    cwcglReplacementCodeuivSUNCommand,
    cwcglReplacementCodeusSUNCommand,
    cwcglReplacementCodeusvSUNCommand,
    cwcglRequestResidentProgramsNVCommand,
    cwcglResetHistogramCommand,
    cwcglResetHistogramEXTCommand,
    cwcglResetMemoryObjectParameterNVCommand,
    cwcglResetMinmaxCommand,
    cwcglResetMinmaxEXTCommand,
    cwcglResizeBuffersMESACommand,
    cwcglResolveDepthValuesNVCommand,
    cwcglResolveMultisampleFramebufferAPPLECommand,
    cwcglResumeTransformFeedbackCommand,
    cwcglResumeTransformFeedbackNVCommand,
    cwcglRotatedCommand,
    cwcglRotatefCommand,
    cwcglRotatexCommand,
    cwcglRotatexOESCommand,
    cwcglSampleCoverageCommand,
    cwcglSampleCoverageARBCommand,
    cwcglSampleCoveragexCommand,
    cwcglSampleCoveragexOESCommand,
    cwcglSampleMapATICommand,
    cwcglSampleMaskEXTCommand,
    cwcglSampleMaskIndexedNVCommand,
    cwcglSampleMaskSGISCommand,
    cwcglSampleMaskiCommand,
    cwcglSamplePatternEXTCommand,
    cwcglSamplePatternSGISCommand,
    cwcglSamplerParameterIivCommand,
    cwcglSamplerParameterIivEXTCommand,
    cwcglSamplerParameterIivOESCommand,
    cwcglSamplerParameterIuivCommand,
    cwcglSamplerParameterIuivEXTCommand,
    cwcglSamplerParameterIuivOESCommand,
    cwcglSamplerParameterfCommand,
    cwcglSamplerParameterfvCommand,
    cwcglSamplerParameteriCommand,
    cwcglSamplerParameterivCommand,
    cwcglScaledCommand,
    cwcglScalefCommand,
    cwcglScalexCommand,
    cwcglScalexOESCommand,
    cwcglScissorCommand,
    cwcglScissorArrayvCommand,
    cwcglScissorArrayvNVCommand,
    cwcglScissorArrayvOESCommand,
    cwcglScissorExclusiveArrayvNVCommand,
    cwcglScissorExclusiveNVCommand,
    cwcglScissorIndexedCommand,
    cwcglScissorIndexedNVCommand,
    cwcglScissorIndexedOESCommand,
    cwcglScissorIndexedvCommand,
    cwcglScissorIndexedvNVCommand,
    cwcglScissorIndexedvOESCommand,
    cwcglSecondaryColor3bCommand,
    cwcglSecondaryColor3bEXTCommand,
    cwcglSecondaryColor3bvCommand,
    cwcglSecondaryColor3bvEXTCommand,
    cwcglSecondaryColor3dCommand,
    cwcglSecondaryColor3dEXTCommand,
    cwcglSecondaryColor3dvCommand,
    cwcglSecondaryColor3dvEXTCommand,
    cwcglSecondaryColor3fCommand,
    cwcglSecondaryColor3fEXTCommand,
    cwcglSecondaryColor3fvCommand,
    cwcglSecondaryColor3fvEXTCommand,
    cwcglSecondaryColor3hNVCommand,
    cwcglSecondaryColor3hvNVCommand,
    cwcglSecondaryColor3iCommand,
    cwcglSecondaryColor3iEXTCommand,
    cwcglSecondaryColor3ivCommand,
    cwcglSecondaryColor3ivEXTCommand,
    cwcglSecondaryColor3sCommand,
    cwcglSecondaryColor3sEXTCommand,
    cwcglSecondaryColor3svCommand,
    cwcglSecondaryColor3svEXTCommand,
    cwcglSecondaryColor3ubCommand,
    cwcglSecondaryColor3ubEXTCommand,
    cwcglSecondaryColor3ubvCommand,
    cwcglSecondaryColor3ubvEXTCommand,
    cwcglSecondaryColor3uiCommand,
    cwcglSecondaryColor3uiEXTCommand,
    cwcglSecondaryColor3uivCommand,
    cwcglSecondaryColor3uivEXTCommand,
    cwcglSecondaryColor3usCommand,
    cwcglSecondaryColor3usEXTCommand,
    cwcglSecondaryColor3usvCommand,
    cwcglSecondaryColor3usvEXTCommand,
    cwcglSecondaryColorFormatNVCommand,
    cwcglSecondaryColorP3uiCommand,
    cwcglSecondaryColorP3uivCommand,
    cwcglSecondaryColorPointerCommand,
    cwcglSecondaryColorPointerEXTCommand,
    cwcglSecondaryColorPointerListIBMCommand,
    cwcglSelectBufferCommand,
    cwcglSelectPerfMonitorCountersAMDCommand,
    cwcglSemaphoreParameterivNVCommand,
    cwcglSemaphoreParameterui64vEXTCommand,
    cwcglSeparableFilter2DCommand,
    cwcglSeparableFilter2DEXTCommand,
    cwcglSetFenceAPPLECommand,
    cwcglSetFenceNVCommand,
    cwcglSetFragmentShaderConstantATICommand,
    cwcglSetInvariantEXTCommand,
    cwcglSetLocalConstantEXTCommand,
    cwcglSetMultisamplefvAMDCommand,
    cwcglShadeModelCommand,
    cwcglShaderBinaryCommand,
    cwcglShaderOp1EXTCommand,
    cwcglShaderOp2EXTCommand,
    cwcglShaderOp3EXTCommand,
    cwcglShaderSourceCommand,
    cwcglShaderSourceARBCommand,
    cwcglShaderStorageBlockBindingCommand,
    cwcglShadingRateEXTCommand,
    cwcglShadingRateCombinerOpsEXTCommand,
    cwcglShadingRateImageBarrierNVCommand,
    cwcglShadingRateQCOMCommand,
    cwcglShadingRateImagePaletteNVCommand,
    cwcglShadingRateSampleOrderNVCommand,
    cwcglShadingRateSampleOrderCustomNVCommand,
    cwcglSharpenTexFuncSGISCommand,
    cwcglSignalSemaphoreEXTCommand,
    cwcglSignalSemaphoreui64NVXCommand,
    cwcglSpecializeShaderCommand,
    cwcglSpecializeShaderARBCommand,
    cwcglSpriteParameterfSGIXCommand,
    cwcglSpriteParameterfvSGIXCommand,
    cwcglSpriteParameteriSGIXCommand,
    cwcglSpriteParameterivSGIXCommand,
    cwcglStartInstrumentsSGIXCommand,
    cwcglStartTilingQCOMCommand,
    cwcglStateCaptureNVCommand,
    cwcglStencilClearTagEXTCommand,
    cwcglStencilFillPathInstancedNVCommand,
    cwcglStencilFillPathNVCommand,
    cwcglStencilFuncCommand,
    cwcglStencilFuncSeparateCommand,
    cwcglStencilFuncSeparateATICommand,
    cwcglStencilMaskCommand,
    cwcglStencilMaskSeparateCommand,
    cwcglStencilOpCommand,
    cwcglStencilOpSeparateCommand,
    cwcglStencilOpSeparateATICommand,
    cwcglStencilOpValueAMDCommand,
    cwcglStencilStrokePathInstancedNVCommand,
    cwcglStencilStrokePathNVCommand,
    cwcglStencilThenCoverFillPathInstancedNVCommand,
    cwcglStencilThenCoverFillPathNVCommand,
    cwcglStencilThenCoverStrokePathInstancedNVCommand,
    cwcglStencilThenCoverStrokePathNVCommand,
    cwcglStopInstrumentsSGIXCommand,
    cwcglStringMarkerGREMEDYCommand,
    cwcglSubpixelPrecisionBiasNVCommand,
    cwcglSwizzleEXTCommand,
    cwcglSyncTextureINTELCommand,
    cwcglTagSampleBufferSGIXCommand,
    cwcglTangent3bEXTCommand,
    cwcglTangent3bvEXTCommand,
    cwcglTangent3dEXTCommand,
    cwcglTangent3dvEXTCommand,
    cwcglTangent3fEXTCommand,
    cwcglTangent3fvEXTCommand,
    cwcglTangent3iEXTCommand,
    cwcglTangent3ivEXTCommand,
    cwcglTangent3sEXTCommand,
    cwcglTangent3svEXTCommand,
    cwcglTangentPointerEXTCommand,
    cwcglTbufferMask3DFXCommand,
    cwcglTessellationFactorAMDCommand,
    cwcglTessellationModeAMDCommand,
    cwcglTestFenceAPPLECommand,
    cwcglTestFenceNVCommand,
    cwcglTestObjectAPPLECommand,
    cwcglTexAttachMemoryNVCommand,
    cwcglTexBufferCommand,
    cwcglTexBufferARBCommand,
    cwcglTexBufferEXTCommand,
    cwcglTexBufferOESCommand,
    cwcglTexBufferRangeCommand,
    cwcglTexBufferRangeEXTCommand,
    cwcglTexBufferRangeOESCommand,
    cwcglTexBumpParameterfvATICommand,
    cwcglTexBumpParameterivATICommand,
    cwcglTexCoord1bOESCommand,
    cwcglTexCoord1bvOESCommand,
    cwcglTexCoord1dCommand,
    cwcglTexCoord1dvCommand,
    cwcglTexCoord1fCommand,
    cwcglTexCoord1fvCommand,
    cwcglTexCoord1hNVCommand,
    cwcglTexCoord1hvNVCommand,
    cwcglTexCoord1iCommand,
    cwcglTexCoord1ivCommand,
    cwcglTexCoord1sCommand,
    cwcglTexCoord1svCommand,
    cwcglTexCoord1xOESCommand,
    cwcglTexCoord1xvOESCommand,
    cwcglTexCoord2bOESCommand,
    cwcglTexCoord2bvOESCommand,
    cwcglTexCoord2dCommand,
    cwcglTexCoord2dvCommand,
    cwcglTexCoord2fCommand,
    cwcglTexCoord2fColor3fVertex3fSUNCommand,
    cwcglTexCoord2fColor3fVertex3fvSUNCommand,
    cwcglTexCoord2fColor4fNormal3fVertex3fSUNCommand,
    cwcglTexCoord2fColor4fNormal3fVertex3fvSUNCommand,
    cwcglTexCoord2fColor4ubVertex3fSUNCommand,
    cwcglTexCoord2fColor4ubVertex3fvSUNCommand,
    cwcglTexCoord2fNormal3fVertex3fSUNCommand,
    cwcglTexCoord2fNormal3fVertex3fvSUNCommand,
    cwcglTexCoord2fVertex3fSUNCommand,
    cwcglTexCoord2fVertex3fvSUNCommand,
    cwcglTexCoord2fvCommand,
    cwcglTexCoord2hNVCommand,
    cwcglTexCoord2hvNVCommand,
    cwcglTexCoord2iCommand,
    cwcglTexCoord2ivCommand,
    cwcglTexCoord2sCommand,
    cwcglTexCoord2svCommand,
    cwcglTexCoord2xOESCommand,
    cwcglTexCoord2xvOESCommand,
    cwcglTexCoord3bOESCommand,
    cwcglTexCoord3bvOESCommand,
    cwcglTexCoord3dCommand,
    cwcglTexCoord3dvCommand,
    cwcglTexCoord3fCommand,
    cwcglTexCoord3fvCommand,
    cwcglTexCoord3hNVCommand,
    cwcglTexCoord3hvNVCommand,
    cwcglTexCoord3iCommand,
    cwcglTexCoord3ivCommand,
    cwcglTexCoord3sCommand,
    cwcglTexCoord3svCommand,
    cwcglTexCoord3xOESCommand,
    cwcglTexCoord3xvOESCommand,
    cwcglTexCoord4bOESCommand,
    cwcglTexCoord4bvOESCommand,
    cwcglTexCoord4dCommand,
    cwcglTexCoord4dvCommand,
    cwcglTexCoord4fCommand,
    cwcglTexCoord4fColor4fNormal3fVertex4fSUNCommand,
    cwcglTexCoord4fColor4fNormal3fVertex4fvSUNCommand,
    cwcglTexCoord4fVertex4fSUNCommand,
    cwcglTexCoord4fVertex4fvSUNCommand,
    cwcglTexCoord4fvCommand,
    cwcglTexCoord4hNVCommand,
    cwcglTexCoord4hvNVCommand,
    cwcglTexCoord4iCommand,
    cwcglTexCoord4ivCommand,
    cwcglTexCoord4sCommand,
    cwcglTexCoord4svCommand,
    cwcglTexCoord4xOESCommand,
    cwcglTexCoord4xvOESCommand,
    cwcglTexCoordFormatNVCommand,
    cwcglTexCoordP1uiCommand,
    cwcglTexCoordP1uivCommand,
    cwcglTexCoordP2uiCommand,
    cwcglTexCoordP2uivCommand,
    cwcglTexCoordP3uiCommand,
    cwcglTexCoordP3uivCommand,
    cwcglTexCoordP4uiCommand,
    cwcglTexCoordP4uivCommand,
    cwcglTexCoordPointerCommand,
    cwcglTexCoordPointerEXTCommand,
    cwcglTexCoordPointerListIBMCommand,
    cwcglTexCoordPointervINTELCommand,
    cwcglTexEnvfCommand,
    cwcglTexEnvfvCommand,
    cwcglTexEnviCommand,
    cwcglTexEnvivCommand,
    cwcglTexEnvxCommand,
    cwcglTexEnvxOESCommand,
    cwcglTexEnvxvCommand,
    cwcglTexEnvxvOESCommand,
    cwcglTexEstimateMotionQCOMCommand,
    cwcglTexEstimateMotionRegionsQCOMCommand,
    cwcglExtrapolateTex2DQCOMCommand,
    cwcglTexFilterFuncSGISCommand,
    cwcglTexGendCommand,
    cwcglTexGendvCommand,
    cwcglTexGenfCommand,
    cwcglTexGenfOESCommand,
    cwcglTexGenfvCommand,
    cwcglTexGenfvOESCommand,
    cwcglTexGeniCommand,
    cwcglTexGeniOESCommand,
    cwcglTexGenivCommand,
    cwcglTexGenivOESCommand,
    cwcglTexGenxOESCommand,
    cwcglTexGenxvOESCommand,
    cwcglTexImage1DCommand,
    cwcglTexImage2DCommand,
    cwcglTexImage2DMultisampleCommand,
    cwcglTexImage2DMultisampleCoverageNVCommand,
    cwcglTexImage3DCommand,
    cwcglTexImage3DEXTCommand,
    cwcglTexImage3DMultisampleCommand,
    cwcglTexImage3DMultisampleCoverageNVCommand,
    cwcglTexImage3DOESCommand,
    cwcglTexImage4DSGISCommand,
    cwcglTexPageCommitmentARBCommand,
    cwcglTexPageCommitmentEXTCommand,
    cwcglTexPageCommitmentMemNVCommand,
    cwcglTexParameterIivCommand,
    cwcglTexParameterIivEXTCommand,
    cwcglTexParameterIivOESCommand,
    cwcglTexParameterIuivCommand,
    cwcglTexParameterIuivEXTCommand,
    cwcglTexParameterIuivOESCommand,
    cwcglTexParameterfCommand,
    cwcglTexParameterfvCommand,
    cwcglTexParameteriCommand,
    cwcglTexParameterivCommand,
    cwcglTexParameterxCommand,
    cwcglTexParameterxOESCommand,
    cwcglTexParameterxvCommand,
    cwcglTexParameterxvOESCommand,
    cwcglTexRenderbufferNVCommand,
    cwcglTexStorage1DCommand,
    cwcglTexStorage1DEXTCommand,
    cwcglTexStorage2DCommand,
    cwcglTexStorage2DEXTCommand,
    cwcglTexStorage2DMultisampleCommand,
    cwcglTexStorage3DCommand,
    cwcglTexStorage3DEXTCommand,
    cwcglTexStorage3DMultisampleCommand,
    cwcglTexStorage3DMultisampleOESCommand,
    cwcglTexStorageAttribs2DEXTCommand,
    cwcglTexStorageAttribs3DEXTCommand,
    cwcglTexStorageMem1DEXTCommand,
    cwcglTexStorageMem2DEXTCommand,
    cwcglTexStorageMem2DMultisampleEXTCommand,
    cwcglTexStorageMem3DEXTCommand,
    cwcglTexStorageMem3DMultisampleEXTCommand,
    cwcglTexStorageSparseAMDCommand,
    cwcglTexSubImage1DCommand,
    cwcglTexSubImage1DEXTCommand,
    cwcglTexSubImage2DCommand,
    cwcglTexSubImage2DEXTCommand,
    cwcglTexSubImage3DCommand,
    cwcglTexSubImage3DEXTCommand,
    cwcglTexSubImage3DOESCommand,
    cwcglTexSubImage4DSGISCommand,
    cwcglTextureAttachMemoryNVCommand,
    cwcglTextureBarrierCommand,
    cwcglTextureBarrierNVCommand,
    cwcglTextureBufferCommand,
    cwcglTextureBufferEXTCommand,
    cwcglTextureBufferRangeCommand,
    cwcglTextureBufferRangeEXTCommand,
    cwcglTextureColorMaskSGISCommand,
    cwcglTextureFoveationParametersQCOMCommand,
    cwcglTextureImage1DEXTCommand,
    cwcglTextureImage2DEXTCommand,
    cwcglTextureImage2DMultisampleCoverageNVCommand,
    cwcglTextureImage2DMultisampleNVCommand,
    cwcglTextureImage3DEXTCommand,
    cwcglTextureImage3DMultisampleCoverageNVCommand,
    cwcglTextureImage3DMultisampleNVCommand,
    cwcglTextureLightEXTCommand,
    cwcglTextureMaterialEXTCommand,
    cwcglTextureNormalEXTCommand,
    cwcglTexturePageCommitmentEXTCommand,
    cwcglTexturePageCommitmentMemNVCommand,
    cwcglTextureParameterIivCommand,
    cwcglTextureParameterIivEXTCommand,
    cwcglTextureParameterIuivCommand,
    cwcglTextureParameterIuivEXTCommand,
    cwcglTextureParameterfCommand,
    cwcglTextureParameterfEXTCommand,
    cwcglTextureParameterfvCommand,
    cwcglTextureParameterfvEXTCommand,
    cwcglTextureParameteriCommand,
    cwcglTextureParameteriEXTCommand,
    cwcglTextureParameterivCommand,
    cwcglTextureParameterivEXTCommand,
    cwcglTextureRangeAPPLECommand,
    cwcglTextureRenderbufferEXTCommand,
    cwcglTextureStorage1DCommand,
    cwcglTextureStorage1DEXTCommand,
    cwcglTextureStorage2DCommand,
    cwcglTextureStorage2DEXTCommand,
    cwcglTextureStorage2DMultisampleCommand,
    cwcglTextureStorage2DMultisampleEXTCommand,
    cwcglTextureStorage3DCommand,
    cwcglTextureStorage3DEXTCommand,
    cwcglTextureStorage3DMultisampleCommand,
    cwcglTextureStorage3DMultisampleEXTCommand,
    cwcglTextureStorageMem1DEXTCommand,
    cwcglTextureStorageMem2DEXTCommand,
    cwcglTextureStorageMem2DMultisampleEXTCommand,
    cwcglTextureStorageMem3DEXTCommand,
    cwcglTextureStorageMem3DMultisampleEXTCommand,
    cwcglTextureStorageSparseAMDCommand,
    cwcglTextureSubImage1DCommand,
    cwcglTextureSubImage1DEXTCommand,
    cwcglTextureSubImage2DCommand,
    cwcglTextureSubImage2DEXTCommand,
    cwcglTextureSubImage3DCommand,
    cwcglTextureSubImage3DEXTCommand,
    cwcglTextureViewCommand,
    cwcglTextureViewEXTCommand,
    cwcglTextureViewOESCommand,
    cwcglTrackMatrixNVCommand,
    cwcglTransformFeedbackAttribsNVCommand,
    cwcglTransformFeedbackBufferBaseCommand,
    cwcglTransformFeedbackBufferRangeCommand,
    cwcglTransformFeedbackStreamAttribsNVCommand,
    cwcglTransformFeedbackVaryingsCommand,
    cwcglTransformFeedbackVaryingsEXTCommand,
    cwcglTransformFeedbackVaryingsNVCommand,
    cwcglTransformPathNVCommand,
    cwcglTranslatedCommand,
    cwcglTranslatefCommand,
    cwcglTranslatexCommand,
    cwcglTranslatexOESCommand,
    cwcglUniform1dCommand,
    cwcglUniform1dvCommand,
    cwcglUniform1fCommand,
    cwcglUniform1fARBCommand,
    cwcglUniform1fvCommand,
    cwcglUniform1fvARBCommand,
    cwcglUniform1iCommand,
    cwcglUniform1i64ARBCommand,
    cwcglUniform1i64NVCommand,
    cwcglUniform1i64vARBCommand,
    cwcglUniform1i64vNVCommand,
    cwcglUniform1iARBCommand,
    cwcglUniform1ivCommand,
    cwcglUniform1ivARBCommand,
    cwcglUniform1uiCommand,
    cwcglUniform1ui64ARBCommand,
    cwcglUniform1ui64NVCommand,
    cwcglUniform1ui64vARBCommand,
    cwcglUniform1ui64vNVCommand,
    cwcglUniform1uiEXTCommand,
    cwcglUniform1uivCommand,
    cwcglUniform1uivEXTCommand,
    cwcglUniform2dCommand,
    cwcglUniform2dvCommand,
    cwcglUniform2fCommand,
    cwcglUniform2fARBCommand,
    cwcglUniform2fvCommand,
    cwcglUniform2fvARBCommand,
    cwcglUniform2iCommand,
    cwcglUniform2i64ARBCommand,
    cwcglUniform2i64NVCommand,
    cwcglUniform2i64vARBCommand,
    cwcglUniform2i64vNVCommand,
    cwcglUniform2iARBCommand,
    cwcglUniform2ivCommand,
    cwcglUniform2ivARBCommand,
    cwcglUniform2uiCommand,
    cwcglUniform2ui64ARBCommand,
    cwcglUniform2ui64NVCommand,
    cwcglUniform2ui64vARBCommand,
    cwcglUniform2ui64vNVCommand,
    cwcglUniform2uiEXTCommand,
    cwcglUniform2uivCommand,
    cwcglUniform2uivEXTCommand,
    cwcglUniform3dCommand,
    cwcglUniform3dvCommand,
    cwcglUniform3fCommand,
    cwcglUniform3fARBCommand,
    cwcglUniform3fvCommand,
    cwcglUniform3fvARBCommand,
    cwcglUniform3iCommand,
    cwcglUniform3i64ARBCommand,
    cwcglUniform3i64NVCommand,
    cwcglUniform3i64vARBCommand,
    cwcglUniform3i64vNVCommand,
    cwcglUniform3iARBCommand,
    cwcglUniform3ivCommand,
    cwcglUniform3ivARBCommand,
    cwcglUniform3uiCommand,
    cwcglUniform3ui64ARBCommand,
    cwcglUniform3ui64NVCommand,
    cwcglUniform3ui64vARBCommand,
    cwcglUniform3ui64vNVCommand,
    cwcglUniform3uiEXTCommand,
    cwcglUniform3uivCommand,
    cwcglUniform3uivEXTCommand,
    cwcglUniform4dCommand,
    cwcglUniform4dvCommand,
    cwcglUniform4fCommand,
    cwcglUniform4fARBCommand,
    cwcglUniform4fvCommand,
    cwcglUniform4fvARBCommand,
    cwcglUniform4iCommand,
    cwcglUniform4i64ARBCommand,
    cwcglUniform4i64NVCommand,
    cwcglUniform4i64vARBCommand,
    cwcglUniform4i64vNVCommand,
    cwcglUniform4iARBCommand,
    cwcglUniform4ivCommand,
    cwcglUniform4ivARBCommand,
    cwcglUniform4uiCommand,
    cwcglUniform4ui64ARBCommand,
    cwcglUniform4ui64NVCommand,
    cwcglUniform4ui64vARBCommand,
    cwcglUniform4ui64vNVCommand,
    cwcglUniform4uiEXTCommand,
    cwcglUniform4uivCommand,
    cwcglUniform4uivEXTCommand,
    cwcglUniformBlockBindingCommand,
    cwcglUniformBufferEXTCommand,
    cwcglUniformHandleui64ARBCommand,
    cwcglUniformHandleui64IMGCommand,
    cwcglUniformHandleui64NVCommand,
    cwcglUniformHandleui64vARBCommand,
    cwcglUniformHandleui64vIMGCommand,
    cwcglUniformHandleui64vNVCommand,
    cwcglUniformMatrix2dvCommand,
    cwcglUniformMatrix2fvCommand,
    cwcglUniformMatrix2fvARBCommand,
    cwcglUniformMatrix2x3dvCommand,
    cwcglUniformMatrix2x3fvCommand,
    cwcglUniformMatrix2x3fvNVCommand,
    cwcglUniformMatrix2x4dvCommand,
    cwcglUniformMatrix2x4fvCommand,
    cwcglUniformMatrix2x4fvNVCommand,
    cwcglUniformMatrix3dvCommand,
    cwcglUniformMatrix3fvCommand,
    cwcglUniformMatrix3fvARBCommand,
    cwcglUniformMatrix3x2dvCommand,
    cwcglUniformMatrix3x2fvCommand,
    cwcglUniformMatrix3x2fvNVCommand,
    cwcglUniformMatrix3x4dvCommand,
    cwcglUniformMatrix3x4fvCommand,
    cwcglUniformMatrix3x4fvNVCommand,
    cwcglUniformMatrix4dvCommand,
    cwcglUniformMatrix4fvCommand,
    cwcglUniformMatrix4fvARBCommand,
    cwcglUniformMatrix4x2dvCommand,
    cwcglUniformMatrix4x2fvCommand,
    cwcglUniformMatrix4x2fvNVCommand,
    cwcglUniformMatrix4x3dvCommand,
    cwcglUniformMatrix4x3fvCommand,
    cwcglUniformMatrix4x3fvNVCommand,
    cwcglUniformSubroutinesuivCommand,
    cwcglUniformui64NVCommand,
    cwcglUniformui64vNVCommand,
    cwcglUnlockArraysEXTCommand,
    cwcglUnmapBufferCommand,
    cwcglUnmapBufferARBCommand,
    cwcglUnmapBufferOESCommand,
    cwcglUnmapNamedBufferCommand,
    cwcglUnmapNamedBufferEXTCommand,
    cwcglUnmapObjectBufferATICommand,
    cwcglUnmapTexture2DINTELCommand,
    cwcglUpdateObjectBufferATICommand,
    cwcglUploadGpuMaskNVXCommand,
    cwcglUseProgramCommand,
    cwcglUseProgramObjectARBCommand,
    cwcglUseProgramStagesCommand,
    cwcglUseProgramStagesEXTCommand,
    cwcglUseShaderProgramEXTCommand,
    cwcglVDPAUFiniNVCommand,
    cwcglVDPAUGetSurfaceivNVCommand,
    cwcglVDPAUInitNVCommand,
    cwcglVDPAUIsSurfaceNVCommand,
    cwcglVDPAUMapSurfacesNVCommand,
    cwcglVDPAURegisterOutputSurfaceNVCommand,
    cwcglVDPAURegisterVideoSurfaceNVCommand,
    cwcglVDPAURegisterVideoSurfaceWithPictureStructureNVCommand,
    cwcglVDPAUSurfaceAccessNVCommand,
    cwcglVDPAUUnmapSurfacesNVCommand,
    cwcglVDPAUUnregisterSurfaceNVCommand,
    cwcglValidateProgramCommand,
    cwcglValidateProgramARBCommand,
    cwcglValidateProgramPipelineCommand,
    cwcglValidateProgramPipelineEXTCommand,
    cwcglVariantArrayObjectATICommand,
    cwcglVariantPointerEXTCommand,
    cwcglVariantbvEXTCommand,
    cwcglVariantdvEXTCommand,
    cwcglVariantfvEXTCommand,
    cwcglVariantivEXTCommand,
    cwcglVariantsvEXTCommand,
    cwcglVariantubvEXTCommand,
    cwcglVariantuivEXTCommand,
    cwcglVariantusvEXTCommand,
    cwcglVertex2bOESCommand,
    cwcglVertex2bvOESCommand,
    cwcglVertex2dCommand,
    cwcglVertex2dvCommand,
    cwcglVertex2fCommand,
    cwcglVertex2fvCommand,
    cwcglVertex2hNVCommand,
    cwcglVertex2hvNVCommand,
    cwcglVertex2iCommand,
    cwcglVertex2ivCommand,
    cwcglVertex2sCommand,
    cwcglVertex2svCommand,
    cwcglVertex2xOESCommand,
    cwcglVertex2xvOESCommand,
    cwcglVertex3bOESCommand,
    cwcglVertex3bvOESCommand,
    cwcglVertex3dCommand,
    cwcglVertex3dvCommand,
    cwcglVertex3fCommand,
    cwcglVertex3fvCommand,
    cwcglVertex3hNVCommand,
    cwcglVertex3hvNVCommand,
    cwcglVertex3iCommand,
    cwcglVertex3ivCommand,
    cwcglVertex3sCommand,
    cwcglVertex3svCommand,
    cwcglVertex3xOESCommand,
    cwcglVertex3xvOESCommand,
    cwcglVertex4bOESCommand,
    cwcglVertex4bvOESCommand,
    cwcglVertex4dCommand,
    cwcglVertex4dvCommand,
    cwcglVertex4fCommand,
    cwcglVertex4fvCommand,
    cwcglVertex4hNVCommand,
    cwcglVertex4hvNVCommand,
    cwcglVertex4iCommand,
    cwcglVertex4ivCommand,
    cwcglVertex4sCommand,
    cwcglVertex4svCommand,
    cwcglVertex4xOESCommand,
    cwcglVertex4xvOESCommand,
    cwcglVertexArrayAttribBindingCommand,
    cwcglVertexArrayAttribFormatCommand,
    cwcglVertexArrayAttribIFormatCommand,
    cwcglVertexArrayAttribLFormatCommand,
    cwcglVertexArrayBindVertexBufferEXTCommand,
    cwcglVertexArrayBindingDivisorCommand,
    cwcglVertexArrayColorOffsetEXTCommand,
    cwcglVertexArrayEdgeFlagOffsetEXTCommand,
    cwcglVertexArrayElementBufferCommand,
    cwcglVertexArrayFogCoordOffsetEXTCommand,
    cwcglVertexArrayIndexOffsetEXTCommand,
    cwcglVertexArrayMultiTexCoordOffsetEXTCommand,
    cwcglVertexArrayNormalOffsetEXTCommand,
    cwcglVertexArrayParameteriAPPLECommand,
    cwcglVertexArrayRangeAPPLECommand,
    cwcglVertexArrayRangeNVCommand,
    cwcglVertexArraySecondaryColorOffsetEXTCommand,
    cwcglVertexArrayTexCoordOffsetEXTCommand,
    cwcglVertexArrayVertexAttribBindingEXTCommand,
    cwcglVertexArrayVertexAttribDivisorEXTCommand,
    cwcglVertexArrayVertexAttribFormatEXTCommand,
    cwcglVertexArrayVertexAttribIFormatEXTCommand,
    cwcglVertexArrayVertexAttribIOffsetEXTCommand,
    cwcglVertexArrayVertexAttribLFormatEXTCommand,
    cwcglVertexArrayVertexAttribLOffsetEXTCommand,
    cwcglVertexArrayVertexAttribOffsetEXTCommand,
    cwcglVertexArrayVertexBindingDivisorEXTCommand,
    cwcglVertexArrayVertexBufferCommand,
    cwcglVertexArrayVertexBuffersCommand,
    cwcglVertexArrayVertexOffsetEXTCommand,
    cwcglVertexAttrib1dCommand,
    cwcglVertexAttrib1dARBCommand,
    cwcglVertexAttrib1dNVCommand,
    cwcglVertexAttrib1dvCommand,
    cwcglVertexAttrib1dvARBCommand,
    cwcglVertexAttrib1dvNVCommand,
    cwcglVertexAttrib1fCommand,
    cwcglVertexAttrib1fARBCommand,
    cwcglVertexAttrib1fNVCommand,
    cwcglVertexAttrib1fvCommand,
    cwcglVertexAttrib1fvARBCommand,
    cwcglVertexAttrib1fvNVCommand,
    cwcglVertexAttrib1hNVCommand,
    cwcglVertexAttrib1hvNVCommand,
    cwcglVertexAttrib1sCommand,
    cwcglVertexAttrib1sARBCommand,
    cwcglVertexAttrib1sNVCommand,
    cwcglVertexAttrib1svCommand,
    cwcglVertexAttrib1svARBCommand,
    cwcglVertexAttrib1svNVCommand,
    cwcglVertexAttrib2dCommand,
    cwcglVertexAttrib2dARBCommand,
    cwcglVertexAttrib2dNVCommand,
    cwcglVertexAttrib2dvCommand,
    cwcglVertexAttrib2dvARBCommand,
    cwcglVertexAttrib2dvNVCommand,
    cwcglVertexAttrib2fCommand,
    cwcglVertexAttrib2fARBCommand,
    cwcglVertexAttrib2fNVCommand,
    cwcglVertexAttrib2fvCommand,
    cwcglVertexAttrib2fvARBCommand,
    cwcglVertexAttrib2fvNVCommand,
    cwcglVertexAttrib2hNVCommand,
    cwcglVertexAttrib2hvNVCommand,
    cwcglVertexAttrib2sCommand,
    cwcglVertexAttrib2sARBCommand,
    cwcglVertexAttrib2sNVCommand,
    cwcglVertexAttrib2svCommand,
    cwcglVertexAttrib2svARBCommand,
    cwcglVertexAttrib2svNVCommand,
    cwcglVertexAttrib3dCommand,
    cwcglVertexAttrib3dARBCommand,
    cwcglVertexAttrib3dNVCommand,
    cwcglVertexAttrib3dvCommand,
    cwcglVertexAttrib3dvARBCommand,
    cwcglVertexAttrib3dvNVCommand,
    cwcglVertexAttrib3fCommand,
    cwcglVertexAttrib3fARBCommand,
    cwcglVertexAttrib3fNVCommand,
    cwcglVertexAttrib3fvCommand,
    cwcglVertexAttrib3fvARBCommand,
    cwcglVertexAttrib3fvNVCommand,
    cwcglVertexAttrib3hNVCommand,
    cwcglVertexAttrib3hvNVCommand,
    cwcglVertexAttrib3sCommand,
    cwcglVertexAttrib3sARBCommand,
    cwcglVertexAttrib3sNVCommand,
    cwcglVertexAttrib3svCommand,
    cwcglVertexAttrib3svARBCommand,
    cwcglVertexAttrib3svNVCommand,
    cwcglVertexAttrib4NbvCommand,
    cwcglVertexAttrib4NbvARBCommand,
    cwcglVertexAttrib4NivCommand,
    cwcglVertexAttrib4NivARBCommand,
    cwcglVertexAttrib4NsvCommand,
    cwcglVertexAttrib4NsvARBCommand,
    cwcglVertexAttrib4NubCommand,
    cwcglVertexAttrib4NubARBCommand,
    cwcglVertexAttrib4NubvCommand,
    cwcglVertexAttrib4NubvARBCommand,
    cwcglVertexAttrib4NuivCommand,
    cwcglVertexAttrib4NuivARBCommand,
    cwcglVertexAttrib4NusvCommand,
    cwcglVertexAttrib4NusvARBCommand,
    cwcglVertexAttrib4bvCommand,
    cwcglVertexAttrib4bvARBCommand,
    cwcglVertexAttrib4dCommand,
    cwcglVertexAttrib4dARBCommand,
    cwcglVertexAttrib4dNVCommand,
    cwcglVertexAttrib4dvCommand,
    cwcglVertexAttrib4dvARBCommand,
    cwcglVertexAttrib4dvNVCommand,
    cwcglVertexAttrib4fCommand,
    cwcglVertexAttrib4fARBCommand,
    cwcglVertexAttrib4fNVCommand,
    cwcglVertexAttrib4fvCommand,
    cwcglVertexAttrib4fvARBCommand,
    cwcglVertexAttrib4fvNVCommand,
    cwcglVertexAttrib4hNVCommand,
    cwcglVertexAttrib4hvNVCommand,
    cwcglVertexAttrib4ivCommand,
    cwcglVertexAttrib4ivARBCommand,
    cwcglVertexAttrib4sCommand,
    cwcglVertexAttrib4sARBCommand,
    cwcglVertexAttrib4sNVCommand,
    cwcglVertexAttrib4svCommand,
    cwcglVertexAttrib4svARBCommand,
    cwcglVertexAttrib4svNVCommand,
    cwcglVertexAttrib4ubNVCommand,
    cwcglVertexAttrib4ubvCommand,
    cwcglVertexAttrib4ubvARBCommand,
    cwcglVertexAttrib4ubvNVCommand,
    cwcglVertexAttrib4uivCommand,
    cwcglVertexAttrib4uivARBCommand,
    cwcglVertexAttrib4usvCommand,
    cwcglVertexAttrib4usvARBCommand,
    cwcglVertexAttribArrayObjectATICommand,
    cwcglVertexAttribBindingCommand,
    cwcglVertexAttribDivisorCommand,
    cwcglVertexAttribDivisorANGLECommand,
    cwcglVertexAttribDivisorARBCommand,
    cwcglVertexAttribDivisorEXTCommand,
    cwcglVertexAttribDivisorNVCommand,
    cwcglVertexAttribFormatCommand,
    cwcglVertexAttribFormatNVCommand,
    cwcglVertexAttribI1iCommand,
    cwcglVertexAttribI1iEXTCommand,
    cwcglVertexAttribI1ivCommand,
    cwcglVertexAttribI1ivEXTCommand,
    cwcglVertexAttribI1uiCommand,
    cwcglVertexAttribI1uiEXTCommand,
    cwcglVertexAttribI1uivCommand,
    cwcglVertexAttribI1uivEXTCommand,
    cwcglVertexAttribI2iCommand,
    cwcglVertexAttribI2iEXTCommand,
    cwcglVertexAttribI2ivCommand,
    cwcglVertexAttribI2ivEXTCommand,
    cwcglVertexAttribI2uiCommand,
    cwcglVertexAttribI2uiEXTCommand,
    cwcglVertexAttribI2uivCommand,
    cwcglVertexAttribI2uivEXTCommand,
    cwcglVertexAttribI3iCommand,
    cwcglVertexAttribI3iEXTCommand,
    cwcglVertexAttribI3ivCommand,
    cwcglVertexAttribI3ivEXTCommand,
    cwcglVertexAttribI3uiCommand,
    cwcglVertexAttribI3uiEXTCommand,
    cwcglVertexAttribI3uivCommand,
    cwcglVertexAttribI3uivEXTCommand,
    cwcglVertexAttribI4bvCommand,
    cwcglVertexAttribI4bvEXTCommand,
    cwcglVertexAttribI4iCommand,
    cwcglVertexAttribI4iEXTCommand,
    cwcglVertexAttribI4ivCommand,
    cwcglVertexAttribI4ivEXTCommand,
    cwcglVertexAttribI4svCommand,
    cwcglVertexAttribI4svEXTCommand,
    cwcglVertexAttribI4ubvCommand,
    cwcglVertexAttribI4ubvEXTCommand,
    cwcglVertexAttribI4uiCommand,
    cwcglVertexAttribI4uiEXTCommand,
    cwcglVertexAttribI4uivCommand,
    cwcglVertexAttribI4uivEXTCommand,
    cwcglVertexAttribI4usvCommand,
    cwcglVertexAttribI4usvEXTCommand,
    cwcglVertexAttribIFormatCommand,
    cwcglVertexAttribIFormatNVCommand,
    cwcglVertexAttribIPointerCommand,
    cwcglVertexAttribIPointerEXTCommand,
    cwcglVertexAttribL1dCommand,
    cwcglVertexAttribL1dEXTCommand,
    cwcglVertexAttribL1dvCommand,
    cwcglVertexAttribL1dvEXTCommand,
    cwcglVertexAttribL1i64NVCommand,
    cwcglVertexAttribL1i64vNVCommand,
    cwcglVertexAttribL1ui64ARBCommand,
    cwcglVertexAttribL1ui64NVCommand,
    cwcglVertexAttribL1ui64vARBCommand,
    cwcglVertexAttribL1ui64vNVCommand,
    cwcglVertexAttribL2dCommand,
    cwcglVertexAttribL2dEXTCommand,
    cwcglVertexAttribL2dvCommand,
    cwcglVertexAttribL2dvEXTCommand,
    cwcglVertexAttribL2i64NVCommand,
    cwcglVertexAttribL2i64vNVCommand,
    cwcglVertexAttribL2ui64NVCommand,
    cwcglVertexAttribL2ui64vNVCommand,
    cwcglVertexAttribL3dCommand,
    cwcglVertexAttribL3dEXTCommand,
    cwcglVertexAttribL3dvCommand,
    cwcglVertexAttribL3dvEXTCommand,
    cwcglVertexAttribL3i64NVCommand,
    cwcglVertexAttribL3i64vNVCommand,
    cwcglVertexAttribL3ui64NVCommand,
    cwcglVertexAttribL3ui64vNVCommand,
    cwcglVertexAttribL4dCommand,
    cwcglVertexAttribL4dEXTCommand,
    cwcglVertexAttribL4dvCommand,
    cwcglVertexAttribL4dvEXTCommand,
    cwcglVertexAttribL4i64NVCommand,
    cwcglVertexAttribL4i64vNVCommand,
    cwcglVertexAttribL4ui64NVCommand,
    cwcglVertexAttribL4ui64vNVCommand,
    cwcglVertexAttribLFormatCommand,
    cwcglVertexAttribLFormatNVCommand,
    cwcglVertexAttribLPointerCommand,
    cwcglVertexAttribLPointerEXTCommand,
    cwcglVertexAttribP1uiCommand,
    cwcglVertexAttribP1uivCommand,
    cwcglVertexAttribP2uiCommand,
    cwcglVertexAttribP2uivCommand,
    cwcglVertexAttribP3uiCommand,
    cwcglVertexAttribP3uivCommand,
    cwcglVertexAttribP4uiCommand,
    cwcglVertexAttribP4uivCommand,
    cwcglVertexAttribParameteriAMDCommand,
    cwcglVertexAttribPointerCommand,
    cwcglVertexAttribPointerARBCommand,
    cwcglVertexAttribPointerNVCommand,
    cwcglVertexAttribs1dvNVCommand,
    cwcglVertexAttribs1fvNVCommand,
    cwcglVertexAttribs1hvNVCommand,
    cwcglVertexAttribs1svNVCommand,
    cwcglVertexAttribs2dvNVCommand,
    cwcglVertexAttribs2fvNVCommand,
    cwcglVertexAttribs2hvNVCommand,
    cwcglVertexAttribs2svNVCommand,
    cwcglVertexAttribs3dvNVCommand,
    cwcglVertexAttribs3fvNVCommand,
    cwcglVertexAttribs3hvNVCommand,
    cwcglVertexAttribs3svNVCommand,
    cwcglVertexAttribs4dvNVCommand,
    cwcglVertexAttribs4fvNVCommand,
    cwcglVertexAttribs4hvNVCommand,
    cwcglVertexAttribs4svNVCommand,
    cwcglVertexAttribs4ubvNVCommand,
    cwcglVertexBindingDivisorCommand,
    cwcglVertexBlendARBCommand,
    cwcglVertexBlendEnvfATICommand,
    cwcglVertexBlendEnviATICommand,
    cwcglVertexFormatNVCommand,
    cwcglVertexP2uiCommand,
    cwcglVertexP2uivCommand,
    cwcglVertexP3uiCommand,
    cwcglVertexP3uivCommand,
    cwcglVertexP4uiCommand,
    cwcglVertexP4uivCommand,
    cwcglVertexPointerCommand,
    cwcglVertexPointerEXTCommand,
    cwcglVertexPointerListIBMCommand,
    cwcglVertexPointervINTELCommand,
    cwcglVertexStream1dATICommand,
    cwcglVertexStream1dvATICommand,
    cwcglVertexStream1fATICommand,
    cwcglVertexStream1fvATICommand,
    cwcglVertexStream1iATICommand,
    cwcglVertexStream1ivATICommand,
    cwcglVertexStream1sATICommand,
    cwcglVertexStream1svATICommand,
    cwcglVertexStream2dATICommand,
    cwcglVertexStream2dvATICommand,
    cwcglVertexStream2fATICommand,
    cwcglVertexStream2fvATICommand,
    cwcglVertexStream2iATICommand,
    cwcglVertexStream2ivATICommand,
    cwcglVertexStream2sATICommand,
    cwcglVertexStream2svATICommand,
    cwcglVertexStream3dATICommand,
    cwcglVertexStream3dvATICommand,
    cwcglVertexStream3fATICommand,
    cwcglVertexStream3fvATICommand,
    cwcglVertexStream3iATICommand,
    cwcglVertexStream3ivATICommand,
    cwcglVertexStream3sATICommand,
    cwcglVertexStream3svATICommand,
    cwcglVertexStream4dATICommand,
    cwcglVertexStream4dvATICommand,
    cwcglVertexStream4fATICommand,
    cwcglVertexStream4fvATICommand,
    cwcglVertexStream4iATICommand,
    cwcglVertexStream4ivATICommand,
    cwcglVertexStream4sATICommand,
    cwcglVertexStream4svATICommand,
    cwcglVertexWeightPointerEXTCommand,
    cwcglVertexWeightfEXTCommand,
    cwcglVertexWeightfvEXTCommand,
    cwcglVertexWeighthNVCommand,
    cwcglVertexWeighthvNVCommand,
    cwcglVideoCaptureNVCommand,
    cwcglVideoCaptureStreamParameterdvNVCommand,
    cwcglVideoCaptureStreamParameterfvNVCommand,
    cwcglVideoCaptureStreamParameterivNVCommand,
    cwcglViewportCommand,
    cwcglViewportArrayvCommand,
    cwcglViewportArrayvNVCommand,
    cwcglViewportArrayvOESCommand,
    cwcglViewportIndexedfCommand,
    cwcglViewportIndexedfOESCommand,
    cwcglViewportIndexedfNVCommand,
    cwcglViewportIndexedfvCommand,
    cwcglViewportIndexedfvOESCommand,
    cwcglViewportIndexedfvNVCommand,
    cwcglViewportPositionWScaleNVCommand,
    cwcglViewportSwizzleNVCommand,
    cwcglWaitSemaphoreEXTCommand,
    cwcglWaitSemaphoreui64NVXCommand,
    cwcglWaitSyncCommand,
    cwcglWaitSyncAPPLECommand,
    cwcglWeightPathsNVCommand,
    cwcglWeightPointerARBCommand,
    cwcglWeightPointerOESCommand,
    cwcglWeightbvARBCommand,
    cwcglWeightdvARBCommand,
    cwcglWeightfvARBCommand,
    cwcglWeightivARBCommand,
    cwcglWeightsvARBCommand,
    cwcglWeightubvARBCommand,
    cwcglWeightuivARBCommand,
    cwcglWeightusvARBCommand,
    cwcglWindowPos2dCommand,
    cwcglWindowPos2dARBCommand,
    cwcglWindowPos2dMESACommand,
    cwcglWindowPos2dvCommand,
    cwcglWindowPos2dvARBCommand,
    cwcglWindowPos2dvMESACommand,
    cwcglWindowPos2fCommand,
    cwcglWindowPos2fARBCommand,
    cwcglWindowPos2fMESACommand,
    cwcglWindowPos2fvCommand,
    cwcglWindowPos2fvARBCommand,
    cwcglWindowPos2fvMESACommand,
    cwcglWindowPos2iCommand,
    cwcglWindowPos2iARBCommand,
    cwcglWindowPos2iMESACommand,
    cwcglWindowPos2ivCommand,
    cwcglWindowPos2ivARBCommand,
    cwcglWindowPos2ivMESACommand,
    cwcglWindowPos2sCommand,
    cwcglWindowPos2sARBCommand,
    cwcglWindowPos2sMESACommand,
    cwcglWindowPos2svCommand,
    cwcglWindowPos2svARBCommand,
    cwcglWindowPos2svMESACommand,
    cwcglWindowPos3dCommand,
    cwcglWindowPos3dARBCommand,
    cwcglWindowPos3dMESACommand,
    cwcglWindowPos3dvCommand,
    cwcglWindowPos3dvARBCommand,
    cwcglWindowPos3dvMESACommand,
    cwcglWindowPos3fCommand,
    cwcglWindowPos3fARBCommand,
    cwcglWindowPos3fMESACommand,
    cwcglWindowPos3fvCommand,
    cwcglWindowPos3fvARBCommand,
    cwcglWindowPos3fvMESACommand,
    cwcglWindowPos3iCommand,
    cwcglWindowPos3iARBCommand,
    cwcglWindowPos3iMESACommand,
    cwcglWindowPos3ivCommand,
    cwcglWindowPos3ivARBCommand,
    cwcglWindowPos3ivMESACommand,
    cwcglWindowPos3sCommand,
    cwcglWindowPos3sARBCommand,
    cwcglWindowPos3sMESACommand,
    cwcglWindowPos3svCommand,
    cwcglWindowPos3svARBCommand,
    cwcglWindowPos3svMESACommand,
    cwcglWindowPos4dMESACommand,
    cwcglWindowPos4dvMESACommand,
    cwcglWindowPos4fMESACommand,
    cwcglWindowPos4fvMESACommand,
    cwcglWindowPos4iMESACommand,
    cwcglWindowPos4ivMESACommand,
    cwcglWindowPos4sMESACommand,
    cwcglWindowPos4svMESACommand,
    cwcglWindowRectanglesEXTCommand,
    cwcglWriteMaskEXTCommand,
    cwcglDrawVkImageNVCommand,
    cwcglGetVkProcAddrNVCommand,
    cwcglWaitVkSemaphoreNVCommand,
    cwcglSignalVkSemaphoreNVCommand,
    cwcglSignalVkFenceNVCommand,
    cwcglFramebufferParameteriMESACommand,
    cwcglGetFramebufferParameterivMESACommand,
} GLcommandType;

typedef struct GLcommand {
    GLcommandType type;
    void *data;
    struct GLcommand *next, *prev;
} GLcommand;

typedef struct {
    GLcommand *front, *back;
} GLcontext;

#if CWCGL_VERSION >= GL_VERSION_1_0
EXPORT void cwcglCullFace(GLcontext *context, GLenum mode);
EXPORT void cwcglFrontFace(GLcontext *context, GLenum mode);
EXPORT void cwcglHint(GLcontext *context, GLenum target, GLenum mode);
EXPORT void cwcglLineWidth(GLcontext *context, GLfloat width);
EXPORT void cwcglPointSize(GLcontext *context, GLfloat size);
EXPORT void cwcglPolygonMode(GLcontext *context, GLenum face, GLenum mode);
EXPORT void cwcglScissor(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglTexParameterf(GLcontext *context, GLenum target, GLenum pname, GLfloat param);
EXPORT void cwcglTexParameterfv(GLcontext *context, GLenum target, GLenum pname, const GLfloat * params);
EXPORT void cwcglTexParameteri(GLcontext *context, GLenum target, GLenum pname, GLint param);
EXPORT void cwcglTexParameteriv(GLcontext *context, GLenum target, GLenum pname, const GLint * params);
EXPORT void cwcglTexImage1D(GLcontext *context, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTexImage2D(GLcontext *context, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglDrawBuffer(GLcontext *context, GLenum buf);
EXPORT void cwcglClear(GLcontext *context, GLbitfield mask);
EXPORT void cwcglClearColor(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglClearStencil(GLcontext *context, GLint s);
EXPORT void cwcglClearDepth(GLcontext *context, GLdouble depth);
EXPORT void cwcglStencilMask(GLcontext *context, GLuint mask);
EXPORT void cwcglColorMask(GLcontext *context, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
EXPORT void cwcglDepthMask(GLcontext *context, GLboolean flag);
EXPORT void cwcglDisable(GLcontext *context, GLenum cap);
EXPORT void cwcglEnable(GLcontext *context, GLenum cap);
EXPORT void cwcglFinish(GLcontext *context);
EXPORT void cwcglFlush(GLcontext *context);
EXPORT void cwcglBlendFunc(GLcontext *context, GLenum sfactor, GLenum dfactor);
EXPORT void cwcglLogicOp(GLcontext *context, GLenum opcode);
EXPORT void cwcglStencilFunc(GLcontext *context, GLenum func, GLint ref, GLuint mask);
EXPORT void cwcglStencilOp(GLcontext *context, GLenum fail, GLenum zfail, GLenum zpass);
EXPORT void cwcglDepthFunc(GLcontext *context, GLenum func);
EXPORT void cwcglPixelStoref(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglPixelStorei(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglReadBuffer(GLcontext *context, GLenum src);
EXPORT void cwcglReadPixels(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
EXPORT void cwcglGetBooleanv(GLcontext *context, GLenum pname, GLboolean * data);
EXPORT void cwcglGetDoublev(GLcontext *context, GLenum pname, GLdouble * data);
EXPORT void cwcglGetError(GLcontext *context, GLenum* return_value);
EXPORT void cwcglGetFloatv(GLcontext *context, GLenum pname, GLfloat * data);
EXPORT void cwcglGetIntegerv(GLcontext *context, GLenum pname, GLint * data);
EXPORT void cwcglGetString(GLcontext *context, GLenum name, const GLubyte ** return_value);
EXPORT void cwcglGetTexImage(GLcontext *context, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
EXPORT void cwcglGetTexParameterfv(GLcontext *context, GLenum target, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetTexLevelParameterfv(GLcontext *context, GLenum target, GLint level, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexLevelParameteriv(GLcontext *context, GLenum target, GLint level, GLenum pname, GLint * params);
EXPORT void cwcglIsEnabled(GLcontext *context, GLenum cap, GLboolean* return_value);
EXPORT void cwcglDepthRange(GLcontext *context, GLdouble n, GLdouble f);
EXPORT void cwcglViewport(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglNewList(GLcontext *context, GLuint list, GLenum mode);
EXPORT void cwcglEndList(GLcontext *context);
EXPORT void cwcglCallList(GLcontext *context, GLuint list);
EXPORT void cwcglCallLists(GLcontext *context, GLsizei n, GLenum type, const void * lists);
EXPORT void cwcglDeleteLists(GLcontext *context, GLuint list, GLsizei range);
EXPORT void cwcglGenLists(GLcontext *context, GLsizei range, GLuint* return_value);
EXPORT void cwcglListBase(GLcontext *context, GLuint base);
EXPORT void cwcglBegin(GLcontext *context, GLenum mode);
EXPORT void cwcglBitmap(GLcontext *context, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
EXPORT void cwcglColor3b(GLcontext *context, GLbyte red, GLbyte green, GLbyte blue);
EXPORT void cwcglColor3bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglColor3d(GLcontext *context, GLdouble red, GLdouble green, GLdouble blue);
EXPORT void cwcglColor3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglColor3f(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue);
EXPORT void cwcglColor3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglColor3i(GLcontext *context, GLint red, GLint green, GLint blue);
EXPORT void cwcglColor3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglColor3s(GLcontext *context, GLshort red, GLshort green, GLshort blue);
EXPORT void cwcglColor3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglColor3ub(GLcontext *context, GLubyte red, GLubyte green, GLubyte blue);
EXPORT void cwcglColor3ubv(GLcontext *context, const GLubyte * v);
EXPORT void cwcglColor3ui(GLcontext *context, GLuint red, GLuint green, GLuint blue);
EXPORT void cwcglColor3uiv(GLcontext *context, const GLuint * v);
EXPORT void cwcglColor3us(GLcontext *context, GLushort red, GLushort green, GLushort blue);
EXPORT void cwcglColor3usv(GLcontext *context, const GLushort * v);
EXPORT void cwcglColor4b(GLcontext *context, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
EXPORT void cwcglColor4bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglColor4d(GLcontext *context, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
EXPORT void cwcglColor4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglColor4f(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglColor4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglColor4i(GLcontext *context, GLint red, GLint green, GLint blue, GLint alpha);
EXPORT void cwcglColor4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglColor4s(GLcontext *context, GLshort red, GLshort green, GLshort blue, GLshort alpha);
EXPORT void cwcglColor4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglColor4ub(GLcontext *context, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
EXPORT void cwcglColor4ubv(GLcontext *context, const GLubyte * v);
EXPORT void cwcglColor4ui(GLcontext *context, GLuint red, GLuint green, GLuint blue, GLuint alpha);
EXPORT void cwcglColor4uiv(GLcontext *context, const GLuint * v);
EXPORT void cwcglColor4us(GLcontext *context, GLushort red, GLushort green, GLushort blue, GLushort alpha);
EXPORT void cwcglColor4usv(GLcontext *context, const GLushort * v);
EXPORT void cwcglEdgeFlag(GLcontext *context, GLboolean flag);
EXPORT void cwcglEdgeFlagv(GLcontext *context, const GLboolean * flag);
EXPORT void cwcglEnd(GLcontext *context);
EXPORT void cwcglIndexd(GLcontext *context, GLdouble c);
EXPORT void cwcglIndexdv(GLcontext *context, const GLdouble * c);
EXPORT void cwcglIndexf(GLcontext *context, GLfloat c);
EXPORT void cwcglIndexfv(GLcontext *context, const GLfloat * c);
EXPORT void cwcglIndexi(GLcontext *context, GLint c);
EXPORT void cwcglIndexiv(GLcontext *context, const GLint * c);
EXPORT void cwcglIndexs(GLcontext *context, GLshort c);
EXPORT void cwcglIndexsv(GLcontext *context, const GLshort * c);
EXPORT void cwcglNormal3b(GLcontext *context, GLbyte nx, GLbyte ny, GLbyte nz);
EXPORT void cwcglNormal3bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglNormal3d(GLcontext *context, GLdouble nx, GLdouble ny, GLdouble nz);
EXPORT void cwcglNormal3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglNormal3f(GLcontext *context, GLfloat nx, GLfloat ny, GLfloat nz);
EXPORT void cwcglNormal3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglNormal3i(GLcontext *context, GLint nx, GLint ny, GLint nz);
EXPORT void cwcglNormal3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglNormal3s(GLcontext *context, GLshort nx, GLshort ny, GLshort nz);
EXPORT void cwcglNormal3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRasterPos2d(GLcontext *context, GLdouble x, GLdouble y);
EXPORT void cwcglRasterPos2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglRasterPos2f(GLcontext *context, GLfloat x, GLfloat y);
EXPORT void cwcglRasterPos2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglRasterPos2i(GLcontext *context, GLint x, GLint y);
EXPORT void cwcglRasterPos2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglRasterPos2s(GLcontext *context, GLshort x, GLshort y);
EXPORT void cwcglRasterPos2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRasterPos3d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglRasterPos3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglRasterPos3f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglRasterPos3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglRasterPos3i(GLcontext *context, GLint x, GLint y, GLint z);
EXPORT void cwcglRasterPos3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglRasterPos3s(GLcontext *context, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglRasterPos3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRasterPos4d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglRasterPos4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglRasterPos4f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
EXPORT void cwcglRasterPos4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglRasterPos4i(GLcontext *context, GLint x, GLint y, GLint z, GLint w);
EXPORT void cwcglRasterPos4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglRasterPos4s(GLcontext *context, GLshort x, GLshort y, GLshort z, GLshort w);
EXPORT void cwcglRasterPos4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRectd(GLcontext *context, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
EXPORT void cwcglRectdv(GLcontext *context, const GLdouble * v1, const GLdouble * v2);
EXPORT void cwcglRectf(GLcontext *context, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
EXPORT void cwcglRectfv(GLcontext *context, const GLfloat * v1, const GLfloat * v2);
EXPORT void cwcglRecti(GLcontext *context, GLint x1, GLint y1, GLint x2, GLint y2);
EXPORT void cwcglRectiv(GLcontext *context, const GLint * v1, const GLint * v2);
EXPORT void cwcglRects(GLcontext *context, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
EXPORT void cwcglRectsv(GLcontext *context, const GLshort * v1, const GLshort * v2);
EXPORT void cwcglTexCoord1d(GLcontext *context, GLdouble s);
EXPORT void cwcglTexCoord1dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord1f(GLcontext *context, GLfloat s);
EXPORT void cwcglTexCoord1fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord1i(GLcontext *context, GLint s);
EXPORT void cwcglTexCoord1iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord1s(GLcontext *context, GLshort s);
EXPORT void cwcglTexCoord1sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglTexCoord2d(GLcontext *context, GLdouble s, GLdouble t);
EXPORT void cwcglTexCoord2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord2f(GLcontext *context, GLfloat s, GLfloat t);
EXPORT void cwcglTexCoord2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord2i(GLcontext *context, GLint s, GLint t);
EXPORT void cwcglTexCoord2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord2s(GLcontext *context, GLshort s, GLshort t);
EXPORT void cwcglTexCoord2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglTexCoord3d(GLcontext *context, GLdouble s, GLdouble t, GLdouble r);
EXPORT void cwcglTexCoord3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord3f(GLcontext *context, GLfloat s, GLfloat t, GLfloat r);
EXPORT void cwcglTexCoord3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord3i(GLcontext *context, GLint s, GLint t, GLint r);
EXPORT void cwcglTexCoord3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord3s(GLcontext *context, GLshort s, GLshort t, GLshort r);
EXPORT void cwcglTexCoord3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglTexCoord4d(GLcontext *context, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
EXPORT void cwcglTexCoord4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord4f(GLcontext *context, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
EXPORT void cwcglTexCoord4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord4i(GLcontext *context, GLint s, GLint t, GLint r, GLint q);
EXPORT void cwcglTexCoord4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord4s(GLcontext *context, GLshort s, GLshort t, GLshort r, GLshort q);
EXPORT void cwcglTexCoord4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglVertex2d(GLcontext *context, GLdouble x, GLdouble y);
EXPORT void cwcglVertex2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglVertex2f(GLcontext *context, GLfloat x, GLfloat y);
EXPORT void cwcglVertex2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglVertex2i(GLcontext *context, GLint x, GLint y);
EXPORT void cwcglVertex2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglVertex2s(GLcontext *context, GLshort x, GLshort y);
EXPORT void cwcglVertex2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglVertex3d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglVertex3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglVertex3f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglVertex3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglVertex3i(GLcontext *context, GLint x, GLint y, GLint z);
EXPORT void cwcglVertex3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglVertex3s(GLcontext *context, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglVertex3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglVertex4d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglVertex4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglVertex4f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
EXPORT void cwcglVertex4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglVertex4i(GLcontext *context, GLint x, GLint y, GLint z, GLint w);
EXPORT void cwcglVertex4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglVertex4s(GLcontext *context, GLshort x, GLshort y, GLshort z, GLshort w);
EXPORT void cwcglVertex4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglClipPlane(GLcontext *context, GLenum plane, const GLdouble * equation);
EXPORT void cwcglColorMaterial(GLcontext *context, GLenum face, GLenum mode);
EXPORT void cwcglFogf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglFogfv(GLcontext *context, GLenum pname, const GLfloat * params);
EXPORT void cwcglFogi(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglFogiv(GLcontext *context, GLenum pname, const GLint * params);
EXPORT void cwcglLightf(GLcontext *context, GLenum light, GLenum pname, GLfloat param);
EXPORT void cwcglLightfv(GLcontext *context, GLenum light, GLenum pname, const GLfloat * params);
EXPORT void cwcglLighti(GLcontext *context, GLenum light, GLenum pname, GLint param);
EXPORT void cwcglLightiv(GLcontext *context, GLenum light, GLenum pname, const GLint * params);
EXPORT void cwcglLightModelf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglLightModelfv(GLcontext *context, GLenum pname, const GLfloat * params);
EXPORT void cwcglLightModeli(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglLightModeliv(GLcontext *context, GLenum pname, const GLint * params);
EXPORT void cwcglLineStipple(GLcontext *context, GLint factor, GLushort pattern);
EXPORT void cwcglMaterialf(GLcontext *context, GLenum face, GLenum pname, GLfloat param);
EXPORT void cwcglMaterialfv(GLcontext *context, GLenum face, GLenum pname, const GLfloat * params);
EXPORT void cwcglMateriali(GLcontext *context, GLenum face, GLenum pname, GLint param);
EXPORT void cwcglMaterialiv(GLcontext *context, GLenum face, GLenum pname, const GLint * params);
EXPORT void cwcglPolygonStipple(GLcontext *context, const GLubyte * mask);
EXPORT void cwcglShadeModel(GLcontext *context, GLenum mode);
EXPORT void cwcglTexEnvf(GLcontext *context, GLenum target, GLenum pname, GLfloat param);
EXPORT void cwcglTexEnvfv(GLcontext *context, GLenum target, GLenum pname, const GLfloat * params);
EXPORT void cwcglTexEnvi(GLcontext *context, GLenum target, GLenum pname, GLint param);
EXPORT void cwcglTexEnviv(GLcontext *context, GLenum target, GLenum pname, const GLint * params);
EXPORT void cwcglTexGend(GLcontext *context, GLenum coord, GLenum pname, GLdouble param);
EXPORT void cwcglTexGendv(GLcontext *context, GLenum coord, GLenum pname, const GLdouble * params);
EXPORT void cwcglTexGenf(GLcontext *context, GLenum coord, GLenum pname, GLfloat param);
EXPORT void cwcglTexGenfv(GLcontext *context, GLenum coord, GLenum pname, const GLfloat * params);
EXPORT void cwcglTexGeni(GLcontext *context, GLenum coord, GLenum pname, GLint param);
EXPORT void cwcglTexGeniv(GLcontext *context, GLenum coord, GLenum pname, const GLint * params);
EXPORT void cwcglFeedbackBuffer(GLcontext *context, GLsizei size, GLenum type, GLfloat * buffer);
EXPORT void cwcglSelectBuffer(GLcontext *context, GLsizei size, GLuint * buffer);
EXPORT void cwcglRenderMode(GLcontext *context, GLenum mode, GLint* return_value);
EXPORT void cwcglInitNames(GLcontext *context);
EXPORT void cwcglLoadName(GLcontext *context, GLuint name);
EXPORT void cwcglPassThrough(GLcontext *context, GLfloat token);
EXPORT void cwcglPopName(GLcontext *context);
EXPORT void cwcglPushName(GLcontext *context, GLuint name);
EXPORT void cwcglClearAccum(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglClearIndex(GLcontext *context, GLfloat c);
EXPORT void cwcglIndexMask(GLcontext *context, GLuint mask);
EXPORT void cwcglAccum(GLcontext *context, GLenum op, GLfloat value);
EXPORT void cwcglPopAttrib(GLcontext *context);
EXPORT void cwcglPushAttrib(GLcontext *context, GLbitfield mask);
EXPORT void cwcglMap1d(GLcontext *context, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
EXPORT void cwcglMap1f(GLcontext *context, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
EXPORT void cwcglMap2d(GLcontext *context, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
EXPORT void cwcglMap2f(GLcontext *context, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
EXPORT void cwcglMapGrid1d(GLcontext *context, GLint un, GLdouble u1, GLdouble u2);
EXPORT void cwcglMapGrid1f(GLcontext *context, GLint un, GLfloat u1, GLfloat u2);
EXPORT void cwcglMapGrid2d(GLcontext *context, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
EXPORT void cwcglMapGrid2f(GLcontext *context, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
EXPORT void cwcglEvalCoord1d(GLcontext *context, GLdouble u);
EXPORT void cwcglEvalCoord1dv(GLcontext *context, const GLdouble * u);
EXPORT void cwcglEvalCoord1f(GLcontext *context, GLfloat u);
EXPORT void cwcglEvalCoord1fv(GLcontext *context, const GLfloat * u);
EXPORT void cwcglEvalCoord2d(GLcontext *context, GLdouble u, GLdouble v);
EXPORT void cwcglEvalCoord2dv(GLcontext *context, const GLdouble * u);
EXPORT void cwcglEvalCoord2f(GLcontext *context, GLfloat u, GLfloat v);
EXPORT void cwcglEvalCoord2fv(GLcontext *context, const GLfloat * u);
EXPORT void cwcglEvalMesh1(GLcontext *context, GLenum mode, GLint i1, GLint i2);
EXPORT void cwcglEvalPoint1(GLcontext *context, GLint i);
EXPORT void cwcglEvalMesh2(GLcontext *context, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
EXPORT void cwcglEvalPoint2(GLcontext *context, GLint i, GLint j);
EXPORT void cwcglAlphaFunc(GLcontext *context, GLenum func, GLfloat ref);
EXPORT void cwcglPixelZoom(GLcontext *context, GLfloat xfactor, GLfloat yfactor);
EXPORT void cwcglPixelTransferf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglPixelTransferi(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglPixelMapfv(GLcontext *context, GLenum map, GLsizei mapsize, const GLfloat * values);
EXPORT void cwcglPixelMapuiv(GLcontext *context, GLenum map, GLsizei mapsize, const GLuint * values);
EXPORT void cwcglPixelMapusv(GLcontext *context, GLenum map, GLsizei mapsize, const GLushort * values);
EXPORT void cwcglCopyPixels(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
EXPORT void cwcglDrawPixels(GLcontext *context, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglGetClipPlane(GLcontext *context, GLenum plane, GLdouble * equation);
EXPORT void cwcglGetLightfv(GLcontext *context, GLenum light, GLenum pname, GLfloat * params);
EXPORT void cwcglGetLightiv(GLcontext *context, GLenum light, GLenum pname, GLint * params);
EXPORT void cwcglGetMapdv(GLcontext *context, GLenum target, GLenum query, GLdouble * v);
EXPORT void cwcglGetMapfv(GLcontext *context, GLenum target, GLenum query, GLfloat * v);
EXPORT void cwcglGetMapiv(GLcontext *context, GLenum target, GLenum query, GLint * v);
EXPORT void cwcglGetMaterialfv(GLcontext *context, GLenum face, GLenum pname, GLfloat * params);
EXPORT void cwcglGetMaterialiv(GLcontext *context, GLenum face, GLenum pname, GLint * params);
EXPORT void cwcglGetPixelMapfv(GLcontext *context, GLenum map, GLfloat * values);
EXPORT void cwcglGetPixelMapuiv(GLcontext *context, GLenum map, GLuint * values);
EXPORT void cwcglGetPixelMapusv(GLcontext *context, GLenum map, GLushort * values);
EXPORT void cwcglGetPolygonStipple(GLcontext *context, GLubyte * mask);
EXPORT void cwcglGetTexEnvfv(GLcontext *context, GLenum target, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexEnviv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetTexGendv(GLcontext *context, GLenum coord, GLenum pname, GLdouble * params);
EXPORT void cwcglGetTexGenfv(GLcontext *context, GLenum coord, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexGeniv(GLcontext *context, GLenum coord, GLenum pname, GLint * params);
EXPORT void cwcglIsList(GLcontext *context, GLuint list, GLboolean* return_value);
EXPORT void cwcglFrustum(GLcontext *context, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
EXPORT void cwcglLoadIdentity(GLcontext *context);
EXPORT void cwcglLoadMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglLoadMatrixd(GLcontext *context, const GLdouble * m);
EXPORT void cwcglMatrixMode(GLcontext *context, GLenum mode);
EXPORT void cwcglMultMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglMultMatrixd(GLcontext *context, const GLdouble * m);
EXPORT void cwcglOrtho(GLcontext *context, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
EXPORT void cwcglPopMatrix(GLcontext *context);
EXPORT void cwcglPushMatrix(GLcontext *context);
EXPORT void cwcglRotated(GLcontext *context, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglRotatef(GLcontext *context, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglScaled(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglScalef(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglTranslated(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglTranslatef(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_1
EXPORT void cwcglDrawArrays(GLcontext *context, GLenum mode, GLint first, GLsizei count);
EXPORT void cwcglDrawElements(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices);
EXPORT void cwcglGetPointerv(GLcontext *context, GLenum pname, void ** params);
EXPORT void cwcglPolygonOffset(GLcontext *context, GLfloat factor, GLfloat units);
EXPORT void cwcglCopyTexImage1D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
EXPORT void cwcglCopyTexImage2D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
EXPORT void cwcglCopyTexSubImage1D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
EXPORT void cwcglCopyTexSubImage2D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglTexSubImage1D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTexSubImage2D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglBindTexture(GLcontext *context, GLenum target, GLuint texture);
EXPORT void cwcglDeleteTextures(GLcontext *context, GLsizei n, const GLuint * textures);
EXPORT void cwcglGenTextures(GLcontext *context, GLsizei n, GLuint * textures);
EXPORT void cwcglIsTexture(GLcontext *context, GLuint texture, GLboolean* return_value);
EXPORT void cwcglArrayElement(GLcontext *context, GLint i);
EXPORT void cwcglColorPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglDisableClientState(GLcontext *context, GLenum array);
EXPORT void cwcglEdgeFlagPointer(GLcontext *context, GLsizei stride, const void * pointer);
EXPORT void cwcglEnableClientState(GLcontext *context, GLenum array);
EXPORT void cwcglIndexPointer(GLcontext *context, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglInterleavedArrays(GLcontext *context, GLenum format, GLsizei stride, const void * pointer);
EXPORT void cwcglNormalPointer(GLcontext *context, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglTexCoordPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglVertexPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglAreTexturesResident(GLcontext *context, GLsizei n, const GLuint * textures, GLboolean * residences, GLboolean* return_value);
EXPORT void cwcglPrioritizeTextures(GLcontext *context, GLsizei n, const GLuint * textures, const GLfloat * priorities);
EXPORT void cwcglIndexub(GLcontext *context, GLubyte c);
EXPORT void cwcglIndexubv(GLcontext *context, const GLubyte * c);
EXPORT void cwcglPopClientAttrib(GLcontext *context);
EXPORT void cwcglPushClientAttrib(GLcontext *context, GLbitfield mask);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_2
EXPORT void cwcglDrawRangeElements(GLcontext *context, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
EXPORT void cwcglTexImage3D(GLcontext *context, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTexSubImage3D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglCopyTexSubImage3D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_3
EXPORT void cwcglActiveTexture(GLcontext *context, GLenum texture);
EXPORT void cwcglSampleCoverage(GLcontext *context, GLfloat value, GLboolean invert);
EXPORT void cwcglCompressedTexImage3D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexImage2D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexImage1D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexSubImage3D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexSubImage2D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexSubImage1D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglGetCompressedTexImage(GLcontext *context, GLenum target, GLint level, void * img);
EXPORT void cwcglClientActiveTexture(GLcontext *context, GLenum texture);
EXPORT void cwcglMultiTexCoord1d(GLcontext *context, GLenum target, GLdouble s);
EXPORT void cwcglMultiTexCoord1dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord1f(GLcontext *context, GLenum target, GLfloat s);
EXPORT void cwcglMultiTexCoord1fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord1i(GLcontext *context, GLenum target, GLint s);
EXPORT void cwcglMultiTexCoord1iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord1s(GLcontext *context, GLenum target, GLshort s);
EXPORT void cwcglMultiTexCoord1sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglMultiTexCoord2d(GLcontext *context, GLenum target, GLdouble s, GLdouble t);
EXPORT void cwcglMultiTexCoord2dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord2f(GLcontext *context, GLenum target, GLfloat s, GLfloat t);
EXPORT void cwcglMultiTexCoord2fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord2i(GLcontext *context, GLenum target, GLint s, GLint t);
EXPORT void cwcglMultiTexCoord2iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord2s(GLcontext *context, GLenum target, GLshort s, GLshort t);
EXPORT void cwcglMultiTexCoord2sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglMultiTexCoord3d(GLcontext *context, GLenum target, GLdouble s, GLdouble t, GLdouble r);
EXPORT void cwcglMultiTexCoord3dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord3f(GLcontext *context, GLenum target, GLfloat s, GLfloat t, GLfloat r);
EXPORT void cwcglMultiTexCoord3fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord3i(GLcontext *context, GLenum target, GLint s, GLint t, GLint r);
EXPORT void cwcglMultiTexCoord3iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord3s(GLcontext *context, GLenum target, GLshort s, GLshort t, GLshort r);
EXPORT void cwcglMultiTexCoord3sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglMultiTexCoord4d(GLcontext *context, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
EXPORT void cwcglMultiTexCoord4dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord4f(GLcontext *context, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
EXPORT void cwcglMultiTexCoord4fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord4i(GLcontext *context, GLenum target, GLint s, GLint t, GLint r, GLint q);
EXPORT void cwcglMultiTexCoord4iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord4s(GLcontext *context, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
EXPORT void cwcglMultiTexCoord4sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglLoadTransposeMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglLoadTransposeMatrixd(GLcontext *context, const GLdouble * m);
EXPORT void cwcglMultTransposeMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglMultTransposeMatrixd(GLcontext *context, const GLdouble * m);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_4
EXPORT void cwcglBlendFuncSeparate(GLcontext *context, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
EXPORT void cwcglMultiDrawArrays(GLcontext *context, GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
EXPORT void cwcglMultiDrawElements(GLcontext *context, GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
EXPORT void cwcglPointParameterf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglPointParameterfv(GLcontext *context, GLenum pname, const GLfloat * params);
EXPORT void cwcglPointParameteri(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglPointParameteriv(GLcontext *context, GLenum pname, const GLint * params);
EXPORT void cwcglFogCoordf(GLcontext *context, GLfloat coord);
EXPORT void cwcglFogCoordfv(GLcontext *context, const GLfloat * coord);
EXPORT void cwcglFogCoordd(GLcontext *context, GLdouble coord);
EXPORT void cwcglFogCoorddv(GLcontext *context, const GLdouble * coord);
EXPORT void cwcglFogCoordPointer(GLcontext *context, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglSecondaryColor3b(GLcontext *context, GLbyte red, GLbyte green, GLbyte blue);
EXPORT void cwcglSecondaryColor3bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglSecondaryColor3d(GLcontext *context, GLdouble red, GLdouble green, GLdouble blue);
EXPORT void cwcglSecondaryColor3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglSecondaryColor3f(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue);
EXPORT void cwcglSecondaryColor3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglSecondaryColor3i(GLcontext *context, GLint red, GLint green, GLint blue);
EXPORT void cwcglSecondaryColor3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglSecondaryColor3s(GLcontext *context, GLshort red, GLshort green, GLshort blue);
EXPORT void cwcglSecondaryColor3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglSecondaryColor3ub(GLcontext *context, GLubyte red, GLubyte green, GLubyte blue);
EXPORT void cwcglSecondaryColor3ubv(GLcontext *context, const GLubyte * v);
EXPORT void cwcglSecondaryColor3ui(GLcontext *context, GLuint red, GLuint green, GLuint blue);
EXPORT void cwcglSecondaryColor3uiv(GLcontext *context, const GLuint * v);
EXPORT void cwcglSecondaryColor3us(GLcontext *context, GLushort red, GLushort green, GLushort blue);
EXPORT void cwcglSecondaryColor3usv(GLcontext *context, const GLushort * v);
EXPORT void cwcglSecondaryColorPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglWindowPos2d(GLcontext *context, GLdouble x, GLdouble y);
EXPORT void cwcglWindowPos2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglWindowPos2f(GLcontext *context, GLfloat x, GLfloat y);
EXPORT void cwcglWindowPos2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglWindowPos2i(GLcontext *context, GLint x, GLint y);
EXPORT void cwcglWindowPos2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglWindowPos2s(GLcontext *context, GLshort x, GLshort y);
EXPORT void cwcglWindowPos2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglWindowPos3d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglWindowPos3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglWindowPos3f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglWindowPos3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglWindowPos3i(GLcontext *context, GLint x, GLint y, GLint z);
EXPORT void cwcglWindowPos3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglWindowPos3s(GLcontext *context, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglWindowPos3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglBlendColor(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglBlendEquation(GLcontext *context, GLenum mode);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_5
EXPORT void cwcglGenQueries(GLcontext *context, GLsizei n, GLuint * ids);
EXPORT void cwcglDeleteQueries(GLcontext *context, GLsizei n, const GLuint * ids);
EXPORT void cwcglIsQuery(GLcontext *context, GLuint id, GLboolean* return_value);
EXPORT void cwcglBeginQuery(GLcontext *context, GLenum target, GLuint id);
EXPORT void cwcglEndQuery(GLcontext *context, GLenum target);
EXPORT void cwcglGetQueryiv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetQueryObjectiv(GLcontext *context, GLuint id, GLenum pname, GLint * params);
EXPORT void cwcglGetQueryObjectuiv(GLcontext *context, GLuint id, GLenum pname, GLuint * params);
EXPORT void cwcglBindBuffer(GLcontext *context, GLenum target, GLuint buffer);
EXPORT void cwcglDeleteBuffers(GLcontext *context, GLsizei n, const GLuint * buffers);
EXPORT void cwcglGenBuffers(GLcontext *context, GLsizei n, GLuint * buffers);
EXPORT void cwcglIsBuffer(GLcontext *context, GLuint buffer, GLboolean* return_value);
EXPORT void cwcglBufferData(GLcontext *context, GLenum target, GLsizeiptr size, const void * data, GLenum usage);
EXPORT void cwcglBufferSubData(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
EXPORT void cwcglGetBufferSubData(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr size, void * data);
EXPORT void cwcglMapBuffer(GLcontext *context, GLenum target, GLenum access, void ** return_value);
EXPORT void cwcglUnmapBuffer(GLcontext *context, GLenum target, GLboolean* return_value);
EXPORT void cwcglGetBufferParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetBufferPointerv(GLcontext *context, GLenum target, GLenum pname, void ** params);
#endif
#if CWCGL_VERSION >= GL_VERSION_2_0
EXPORT void cwcglBlendEquationSeparate(GLcontext *context, GLenum modeRGB, GLenum modeAlpha);
EXPORT void cwcglDrawBuffers(GLcontext *context, GLsizei n, const GLenum * bufs);
EXPORT void cwcglStencilOpSeparate(GLcontext *context, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
EXPORT void cwcglStencilFuncSeparate(GLcontext *context, GLenum face, GLenum func, GLint ref, GLuint mask);
EXPORT void cwcglStencilMaskSeparate(GLcontext *context, GLenum face, GLuint mask);
EXPORT void cwcglAttachShader(GLcontext *context, GLuint program, GLuint shader);
EXPORT void cwcglBindAttribLocation(GLcontext *context, GLuint program, GLuint index, const GLchar * name);
EXPORT void cwcglCompileShader(GLcontext *context, GLuint shader);
EXPORT void cwcglCreateProgram(GLcontext *context, GLuint* return_value);
EXPORT void cwcglCreateShader(GLcontext *context, GLenum type, GLuint* return_value);
EXPORT void cwcglDeleteProgram(GLcontext *context, GLuint program);
EXPORT void cwcglDeleteShader(GLcontext *context, GLuint shader);
EXPORT void cwcglDetachShader(GLcontext *context, GLuint program, GLuint shader);
EXPORT void cwcglDisableVertexAttribArray(GLcontext *context, GLuint index);
EXPORT void cwcglEnableVertexAttribArray(GLcontext *context, GLuint index);
EXPORT void cwcglGetActiveAttrib(GLcontext *context, GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
EXPORT void cwcglGetActiveUniform(GLcontext *context, GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
EXPORT void cwcglGetAttachedShaders(GLcontext *context, GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
EXPORT void cwcglGetAttribLocation(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetProgramiv(GLcontext *context, GLuint program, GLenum pname, GLint * params);
EXPORT void cwcglGetProgramInfoLog(GLcontext *context, GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
EXPORT void cwcglGetShaderiv(GLcontext *context, GLuint shader, GLenum pname, GLint * params);
EXPORT void cwcglGetShaderInfoLog(GLcontext *context, GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
EXPORT void cwcglGetShaderSource(GLcontext *context, GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
EXPORT void cwcglGetUniformLocation(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetUniformfv(GLcontext *context, GLuint program, GLint location, GLfloat * params);
EXPORT void cwcglGetUniformiv(GLcontext *context, GLuint program, GLint location, GLint * params);
EXPORT void cwcglGetVertexAttribdv(GLcontext *context, GLuint index, GLenum pname, GLdouble * params);
EXPORT void cwcglGetVertexAttribfv(GLcontext *context, GLuint index, GLenum pname, GLfloat * params);
EXPORT void cwcglGetVertexAttribiv(GLcontext *context, GLuint index, GLenum pname, GLint * params);
EXPORT void cwcglGetVertexAttribPointerv(GLcontext *context, GLuint index, GLenum pname, void ** pointer);
EXPORT void cwcglIsProgram(GLcontext *context, GLuint program, GLboolean* return_value);
EXPORT void cwcglIsShader(GLcontext *context, GLuint shader, GLboolean* return_value);
EXPORT void cwcglLinkProgram(GLcontext *context, GLuint program);
EXPORT void cwcglShaderSource(GLcontext *context, GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
EXPORT void cwcglUseProgram(GLcontext *context, GLuint program);
EXPORT void cwcglUniform1f(GLcontext *context, GLint location, GLfloat v0);
EXPORT void cwcglUniform2f(GLcontext *context, GLint location, GLfloat v0, GLfloat v1);
EXPORT void cwcglUniform3f(GLcontext *context, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
EXPORT void cwcglUniform4f(GLcontext *context, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
EXPORT void cwcglUniform1i(GLcontext *context, GLint location, GLint v0);
EXPORT void cwcglUniform2i(GLcontext *context, GLint location, GLint v0, GLint v1);
EXPORT void cwcglUniform3i(GLcontext *context, GLint location, GLint v0, GLint v1, GLint v2);
EXPORT void cwcglUniform4i(GLcontext *context, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
EXPORT void cwcglUniform1fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform2fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform3fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform4fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform1iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniform2iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniform3iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniform4iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniformMatrix2fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix3fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix4fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglValidateProgram(GLcontext *context, GLuint program);
EXPORT void cwcglVertexAttrib1d(GLcontext *context, GLuint index, GLdouble x);
EXPORT void cwcglVertexAttrib1dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib1f(GLcontext *context, GLuint index, GLfloat x);
EXPORT void cwcglVertexAttrib1fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib1s(GLcontext *context, GLuint index, GLshort x);
EXPORT void cwcglVertexAttrib1sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib2d(GLcontext *context, GLuint index, GLdouble x, GLdouble y);
EXPORT void cwcglVertexAttrib2dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib2f(GLcontext *context, GLuint index, GLfloat x, GLfloat y);
EXPORT void cwcglVertexAttrib2fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib2s(GLcontext *context, GLuint index, GLshort x, GLshort y);
EXPORT void cwcglVertexAttrib2sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib3d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglVertexAttrib3dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib3f(GLcontext *context, GLuint index, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglVertexAttrib3fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib3s(GLcontext *context, GLuint index, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglVertexAttrib3sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib4Nbv(GLcontext *context, GLuint index, const GLbyte * v);
EXPORT void cwcglVertexAttrib4Niv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttrib4Nsv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib4Nub(GLcontext *context, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
EXPORT void cwcglVertexAttrib4Nubv(GLcontext *context, GLuint index, const GLubyte * v);
EXPORT void cwcglVertexAttrib4Nuiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttrib4Nusv(GLcontext *context, GLuint index, const GLushort * v);
EXPORT void cwcglVertexAttrib4bv(GLcontext *context, GLuint index, const GLbyte * v);
EXPORT void cwcglVertexAttrib4d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglVertexAttrib4dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib4f(GLcontext *context, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
EXPORT void cwcglVertexAttrib4fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib4iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttrib4s(GLcontext *context, GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
EXPORT void cwcglVertexAttrib4sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib4ubv(GLcontext *context, GLuint index, const GLubyte * v);
EXPORT void cwcglVertexAttrib4uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttrib4usv(GLcontext *context, GLuint index, const GLushort * v);
EXPORT void cwcglVertexAttribPointer(GLcontext *context, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
#endif
#if CWCGL_VERSION >= GL_VERSION_2_1
EXPORT void cwcglUniformMatrix2x3fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix3x2fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix2x4fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix4x2fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix3x4fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix4x3fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_0
EXPORT void cwcglColorMaski(GLcontext *context, GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
EXPORT void cwcglGetBooleani_v(GLcontext *context, GLenum target, GLuint index, GLboolean * data);
EXPORT void cwcglGetIntegeri_v(GLcontext *context, GLenum target, GLuint index, GLint * data);
EXPORT void cwcglEnablei(GLcontext *context, GLenum target, GLuint index);
EXPORT void cwcglDisablei(GLcontext *context, GLenum target, GLuint index);
EXPORT void cwcglIsEnabledi(GLcontext *context, GLenum target, GLuint index, GLboolean* return_value);
EXPORT void cwcglBeginTransformFeedback(GLcontext *context, GLenum primitiveMode);
EXPORT void cwcglEndTransformFeedback(GLcontext *context);
EXPORT void cwcglBindBufferRange(GLcontext *context, GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglBindBufferBase(GLcontext *context, GLenum target, GLuint index, GLuint buffer);
EXPORT void cwcglTransformFeedbackVaryings(GLcontext *context, GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
EXPORT void cwcglGetTransformFeedbackVarying(GLcontext *context, GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
EXPORT void cwcglClampColor(GLcontext *context, GLenum target, GLenum clamp);
EXPORT void cwcglBeginConditionalRender(GLcontext *context, GLuint id, GLenum mode);
EXPORT void cwcglEndConditionalRender(GLcontext *context);
EXPORT void cwcglVertexAttribIPointer(GLcontext *context, GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglGetVertexAttribIiv(GLcontext *context, GLuint index, GLenum pname, GLint * params);
EXPORT void cwcglGetVertexAttribIuiv(GLcontext *context, GLuint index, GLenum pname, GLuint * params);
EXPORT void cwcglVertexAttribI1i(GLcontext *context, GLuint index, GLint x);
EXPORT void cwcglVertexAttribI2i(GLcontext *context, GLuint index, GLint x, GLint y);
EXPORT void cwcglVertexAttribI3i(GLcontext *context, GLuint index, GLint x, GLint y, GLint z);
EXPORT void cwcglVertexAttribI4i(GLcontext *context, GLuint index, GLint x, GLint y, GLint z, GLint w);
EXPORT void cwcglVertexAttribI1ui(GLcontext *context, GLuint index, GLuint x);
EXPORT void cwcglVertexAttribI2ui(GLcontext *context, GLuint index, GLuint x, GLuint y);
EXPORT void cwcglVertexAttribI3ui(GLcontext *context, GLuint index, GLuint x, GLuint y, GLuint z);
EXPORT void cwcglVertexAttribI4ui(GLcontext *context, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
EXPORT void cwcglVertexAttribI1iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI2iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI3iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI4iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI1uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI2uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI3uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI4uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI4bv(GLcontext *context, GLuint index, const GLbyte * v);
EXPORT void cwcglVertexAttribI4sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttribI4ubv(GLcontext *context, GLuint index, const GLubyte * v);
EXPORT void cwcglVertexAttribI4usv(GLcontext *context, GLuint index, const GLushort * v);
EXPORT void cwcglGetUniformuiv(GLcontext *context, GLuint program, GLint location, GLuint * params);
EXPORT void cwcglBindFragDataLocation(GLcontext *context, GLuint program, GLuint color, const GLchar * name);
EXPORT void cwcglGetFragDataLocation(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglUniform1ui(GLcontext *context, GLint location, GLuint v0);
EXPORT void cwcglUniform2ui(GLcontext *context, GLint location, GLuint v0, GLuint v1);
EXPORT void cwcglUniform3ui(GLcontext *context, GLint location, GLuint v0, GLuint v1, GLuint v2);
EXPORT void cwcglUniform4ui(GLcontext *context, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
EXPORT void cwcglUniform1uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglUniform2uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglUniform3uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglUniform4uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglTexParameterIiv(GLcontext *context, GLenum target, GLenum pname, const GLint * params);
EXPORT void cwcglTexParameterIuiv(GLcontext *context, GLenum target, GLenum pname, const GLuint * params);
EXPORT void cwcglGetTexParameterIiv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetTexParameterIuiv(GLcontext *context, GLenum target, GLenum pname, GLuint * params);
EXPORT void cwcglClearBufferiv(GLcontext *context, GLenum buffer, GLint drawbuffer, const GLint * value);
EXPORT void cwcglClearBufferuiv(GLcontext *context, GLenum buffer, GLint drawbuffer, const GLuint * value);
EXPORT void cwcglClearBufferfv(GLcontext *context, GLenum buffer, GLint drawbuffer, const GLfloat * value);
EXPORT void cwcglClearBufferfi(GLcontext *context, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
EXPORT void cwcglGetStringi(GLcontext *context, GLenum name, GLuint index, const GLubyte ** return_value);
EXPORT void cwcglIsRenderbuffer(GLcontext *context, GLuint renderbuffer, GLboolean* return_value);
EXPORT void cwcglBindRenderbuffer(GLcontext *context, GLenum target, GLuint renderbuffer);
EXPORT void cwcglDeleteRenderbuffers(GLcontext *context, GLsizei n, const GLuint * renderbuffers);
EXPORT void cwcglGenRenderbuffers(GLcontext *context, GLsizei n, GLuint * renderbuffers);
EXPORT void cwcglRenderbufferStorage(GLcontext *context, GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglGetRenderbufferParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglIsFramebuffer(GLcontext *context, GLuint framebuffer, GLboolean* return_value);
EXPORT void cwcglBindFramebuffer(GLcontext *context, GLenum target, GLuint framebuffer);
EXPORT void cwcglDeleteFramebuffers(GLcontext *context, GLsizei n, const GLuint * framebuffers);
EXPORT void cwcglGenFramebuffers(GLcontext *context, GLsizei n, GLuint * framebuffers);
EXPORT void cwcglCheckFramebufferStatus(GLcontext *context, GLenum target, GLenum* return_value);
EXPORT void cwcglFramebufferTexture1D(GLcontext *context, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
EXPORT void cwcglFramebufferTexture2D(GLcontext *context, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
EXPORT void cwcglFramebufferTexture3D(GLcontext *context, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
EXPORT void cwcglFramebufferRenderbuffer(GLcontext *context, GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
EXPORT void cwcglGetFramebufferAttachmentParameteriv(GLcontext *context, GLenum target, GLenum attachment, GLenum pname, GLint * params);
EXPORT void cwcglGenerateMipmap(GLcontext *context, GLenum target);
EXPORT void cwcglBlitFramebuffer(GLcontext *context, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
EXPORT void cwcglRenderbufferStorageMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglFramebufferTextureLayer(GLcontext *context, GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
EXPORT void cwcglMapBufferRange(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access, void ** return_value);
EXPORT void cwcglFlushMappedBufferRange(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr length);
EXPORT void cwcglBindVertexArray(GLcontext *context, GLuint array);
EXPORT void cwcglDeleteVertexArrays(GLcontext *context, GLsizei n, const GLuint * arrays);
EXPORT void cwcglGenVertexArrays(GLcontext *context, GLsizei n, GLuint * arrays);
EXPORT void cwcglIsVertexArray(GLcontext *context, GLuint array, GLboolean* return_value);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_1
EXPORT void cwcglDrawArraysInstanced(GLcontext *context, GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
EXPORT void cwcglDrawElementsInstanced(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
EXPORT void cwcglTexBuffer(GLcontext *context, GLenum target, GLenum internalformat, GLuint buffer);
EXPORT void cwcglPrimitiveRestartIndex(GLcontext *context, GLuint index);
EXPORT void cwcglCopyBufferSubData(GLcontext *context, GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
EXPORT void cwcglGetUniformIndices(GLcontext *context, GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
EXPORT void cwcglGetActiveUniformsiv(GLcontext *context, GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
EXPORT void cwcglGetActiveUniformName(GLcontext *context, GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
EXPORT void cwcglGetUniformBlockIndex(GLcontext *context, GLuint program, const GLchar * uniformBlockName, GLuint* return_value);
EXPORT void cwcglGetActiveUniformBlockiv(GLcontext *context, GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
EXPORT void cwcglGetActiveUniformBlockName(GLcontext *context, GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
EXPORT void cwcglUniformBlockBinding(GLcontext *context, GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_2
EXPORT void cwcglDrawElementsBaseVertex(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
EXPORT void cwcglDrawRangeElementsBaseVertex(GLcontext *context, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
EXPORT void cwcglDrawElementsInstancedBaseVertex(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
EXPORT void cwcglMultiDrawElementsBaseVertex(GLcontext *context, GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
EXPORT void cwcglProvokingVertex(GLcontext *context, GLenum mode);
EXPORT void cwcglFenceSync(GLcontext *context, GLenum condition, GLbitfield flags, GLsync* return_value);
EXPORT void cwcglIsSync(GLcontext *context, GLsync sync, GLboolean* return_value);
EXPORT void cwcglDeleteSync(GLcontext *context, GLsync sync);
EXPORT void cwcglClientWaitSync(GLcontext *context, GLsync sync, GLbitfield flags, GLuint64 timeout, GLenum* return_value);
EXPORT void cwcglWaitSync(GLcontext *context, GLsync sync, GLbitfield flags, GLuint64 timeout);
EXPORT void cwcglGetInteger64v(GLcontext *context, GLenum pname, GLint64 * data);
EXPORT void cwcglGetSynciv(GLcontext *context, GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
EXPORT void cwcglGetInteger64i_v(GLcontext *context, GLenum target, GLuint index, GLint64 * data);
EXPORT void cwcglGetBufferParameteri64v(GLcontext *context, GLenum target, GLenum pname, GLint64 * params);
EXPORT void cwcglFramebufferTexture(GLcontext *context, GLenum target, GLenum attachment, GLuint texture, GLint level);
EXPORT void cwcglTexImage2DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
EXPORT void cwcglTexImage3DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
EXPORT void cwcglGetMultisamplefv(GLcontext *context, GLenum pname, GLuint index, GLfloat * val);
EXPORT void cwcglSampleMaski(GLcontext *context, GLuint maskNumber, GLbitfield mask);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_3
EXPORT void cwcglBindFragDataLocationIndexed(GLcontext *context, GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
EXPORT void cwcglGetFragDataIndex(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglGenSamplers(GLcontext *context, GLsizei count, GLuint * samplers);
EXPORT void cwcglDeleteSamplers(GLcontext *context, GLsizei count, const GLuint * samplers);
EXPORT void cwcglIsSampler(GLcontext *context, GLuint sampler, GLboolean* return_value);
EXPORT void cwcglBindSampler(GLcontext *context, GLuint unit, GLuint sampler);
EXPORT void cwcglSamplerParameteri(GLcontext *context, GLuint sampler, GLenum pname, GLint param);
EXPORT void cwcglSamplerParameteriv(GLcontext *context, GLuint sampler, GLenum pname, const GLint * param);
EXPORT void cwcglSamplerParameterf(GLcontext *context, GLuint sampler, GLenum pname, GLfloat param);
EXPORT void cwcglSamplerParameterfv(GLcontext *context, GLuint sampler, GLenum pname, const GLfloat * param);
EXPORT void cwcglSamplerParameterIiv(GLcontext *context, GLuint sampler, GLenum pname, const GLint * param);
EXPORT void cwcglSamplerParameterIuiv(GLcontext *context, GLuint sampler, GLenum pname, const GLuint * param);
EXPORT void cwcglGetSamplerParameteriv(GLcontext *context, GLuint sampler, GLenum pname, GLint * params);
EXPORT void cwcglGetSamplerParameterIiv(GLcontext *context, GLuint sampler, GLenum pname, GLint * params);
EXPORT void cwcglGetSamplerParameterfv(GLcontext *context, GLuint sampler, GLenum pname, GLfloat * params);
EXPORT void cwcglGetSamplerParameterIuiv(GLcontext *context, GLuint sampler, GLenum pname, GLuint * params);
EXPORT void cwcglQueryCounter(GLcontext *context, GLuint id, GLenum target);
EXPORT void cwcglGetQueryObjecti64v(GLcontext *context, GLuint id, GLenum pname, GLint64 * params);
EXPORT void cwcglGetQueryObjectui64v(GLcontext *context, GLuint id, GLenum pname, GLuint64 * params);
EXPORT void cwcglVertexAttribDivisor(GLcontext *context, GLuint index, GLuint divisor);
EXPORT void cwcglVertexAttribP1ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP1uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexAttribP2ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP2uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexAttribP3ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP3uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexAttribP4ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP4uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexP2ui(GLcontext *context, GLenum type, GLuint value);
EXPORT void cwcglVertexP2uiv(GLcontext *context, GLenum type, const GLuint * value);
EXPORT void cwcglVertexP3ui(GLcontext *context, GLenum type, GLuint value);
EXPORT void cwcglVertexP3uiv(GLcontext *context, GLenum type, const GLuint * value);
EXPORT void cwcglVertexP4ui(GLcontext *context, GLenum type, GLuint value);
EXPORT void cwcglVertexP4uiv(GLcontext *context, GLenum type, const GLuint * value);
EXPORT void cwcglTexCoordP1ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP1uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglTexCoordP2ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP2uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglTexCoordP3ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP3uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglTexCoordP4ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP4uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP1ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP1uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP2ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP2uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP3ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP3uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP4ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP4uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglNormalP3ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglNormalP3uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglColorP3ui(GLcontext *context, GLenum type, GLuint color);
EXPORT void cwcglColorP3uiv(GLcontext *context, GLenum type, const GLuint * color);
EXPORT void cwcglColorP4ui(GLcontext *context, GLenum type, GLuint color);
EXPORT void cwcglColorP4uiv(GLcontext *context, GLenum type, const GLuint * color);
EXPORT void cwcglSecondaryColorP3ui(GLcontext *context, GLenum type, GLuint color);
EXPORT void cwcglSecondaryColorP3uiv(GLcontext *context, GLenum type, const GLuint * color);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_0
EXPORT void cwcglMinSampleShading(GLcontext *context, GLfloat value);
EXPORT void cwcglBlendEquationi(GLcontext *context, GLuint buf, GLenum mode);
EXPORT void cwcglBlendEquationSeparatei(GLcontext *context, GLuint buf, GLenum modeRGB, GLenum modeAlpha);
EXPORT void cwcglBlendFunci(GLcontext *context, GLuint buf, GLenum src, GLenum dst);
EXPORT void cwcglBlendFuncSeparatei(GLcontext *context, GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
EXPORT void cwcglDrawArraysIndirect(GLcontext *context, GLenum mode, const void * indirect);
EXPORT void cwcglDrawElementsIndirect(GLcontext *context, GLenum mode, GLenum type, const void * indirect);
EXPORT void cwcglUniform1d(GLcontext *context, GLint location, GLdouble x);
EXPORT void cwcglUniform2d(GLcontext *context, GLint location, GLdouble x, GLdouble y);
EXPORT void cwcglUniform3d(GLcontext *context, GLint location, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglUniform4d(GLcontext *context, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglUniform1dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniform2dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniform3dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniform4dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniformMatrix2dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix3dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix4dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix2x3dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix2x4dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix3x2dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix3x4dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix4x2dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix4x3dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglGetUniformdv(GLcontext *context, GLuint program, GLint location, GLdouble * params);
EXPORT void cwcglGetSubroutineUniformLocation(GLcontext *context, GLuint program, GLenum shadertype, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetSubroutineIndex(GLcontext *context, GLuint program, GLenum shadertype, const GLchar * name, GLuint* return_value);
EXPORT void cwcglGetActiveSubroutineUniformiv(GLcontext *context, GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
EXPORT void cwcglGetActiveSubroutineUniformName(GLcontext *context, GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
EXPORT void cwcglGetActiveSubroutineName(GLcontext *context, GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
EXPORT void cwcglUniformSubroutinesuiv(GLcontext *context, GLenum shadertype, GLsizei count, const GLuint * indices);
EXPORT void cwcglGetUniformSubroutineuiv(GLcontext *context, GLenum shadertype, GLint location, GLuint * params);
EXPORT void cwcglGetProgramStageiv(GLcontext *context, GLuint program, GLenum shadertype, GLenum pname, GLint * values);
EXPORT void cwcglPatchParameteri(GLcontext *context, GLenum pname, GLint value);
EXPORT void cwcglPatchParameterfv(GLcontext *context, GLenum pname, const GLfloat * values);
EXPORT void cwcglBindTransformFeedback(GLcontext *context, GLenum target, GLuint id);
EXPORT void cwcglDeleteTransformFeedbacks(GLcontext *context, GLsizei n, const GLuint * ids);
EXPORT void cwcglGenTransformFeedbacks(GLcontext *context, GLsizei n, GLuint * ids);
EXPORT void cwcglIsTransformFeedback(GLcontext *context, GLuint id, GLboolean* return_value);
EXPORT void cwcglPauseTransformFeedback(GLcontext *context);
EXPORT void cwcglResumeTransformFeedback(GLcontext *context);
EXPORT void cwcglDrawTransformFeedback(GLcontext *context, GLenum mode, GLuint id);
EXPORT void cwcglDrawTransformFeedbackStream(GLcontext *context, GLenum mode, GLuint id, GLuint stream);
EXPORT void cwcglBeginQueryIndexed(GLcontext *context, GLenum target, GLuint index, GLuint id);
EXPORT void cwcglEndQueryIndexed(GLcontext *context, GLenum target, GLuint index);
EXPORT void cwcglGetQueryIndexediv(GLcontext *context, GLenum target, GLuint index, GLenum pname, GLint * params);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_1
EXPORT void cwcglReleaseShaderCompiler(GLcontext *context);
EXPORT void cwcglShaderBinary(GLcontext *context, GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
EXPORT void cwcglGetShaderPrecisionFormat(GLcontext *context, GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
EXPORT void cwcglDepthRangef(GLcontext *context, GLfloat n, GLfloat f);
EXPORT void cwcglClearDepthf(GLcontext *context, GLfloat d);
EXPORT void cwcglGetProgramBinary(GLcontext *context, GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
EXPORT void cwcglProgramBinary(GLcontext *context, GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
EXPORT void cwcglProgramParameteri(GLcontext *context, GLuint program, GLenum pname, GLint value);
EXPORT void cwcglUseProgramStages(GLcontext *context, GLuint pipeline, GLbitfield stages, GLuint program);
EXPORT void cwcglActiveShaderProgram(GLcontext *context, GLuint pipeline, GLuint program);
EXPORT void cwcglCreateShaderProgramv(GLcontext *context, GLenum type, GLsizei count, const GLchar *const* strings, GLuint* return_value);
EXPORT void cwcglBindProgramPipeline(GLcontext *context, GLuint pipeline);
EXPORT void cwcglDeleteProgramPipelines(GLcontext *context, GLsizei n, const GLuint * pipelines);
EXPORT void cwcglGenProgramPipelines(GLcontext *context, GLsizei n, GLuint * pipelines);
EXPORT void cwcglIsProgramPipeline(GLcontext *context, GLuint pipeline, GLboolean* return_value);
EXPORT void cwcglGetProgramPipelineiv(GLcontext *context, GLuint pipeline, GLenum pname, GLint * params);
EXPORT void cwcglProgramUniform1i(GLcontext *context, GLuint program, GLint location, GLint v0);
EXPORT void cwcglProgramUniform1iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform1f(GLcontext *context, GLuint program, GLint location, GLfloat v0);
EXPORT void cwcglProgramUniform1fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform1d(GLcontext *context, GLuint program, GLint location, GLdouble v0);
EXPORT void cwcglProgramUniform1dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform1ui(GLcontext *context, GLuint program, GLint location, GLuint v0);
EXPORT void cwcglProgramUniform1uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniform2i(GLcontext *context, GLuint program, GLint location, GLint v0, GLint v1);
EXPORT void cwcglProgramUniform2iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform2f(GLcontext *context, GLuint program, GLint location, GLfloat v0, GLfloat v1);
EXPORT void cwcglProgramUniform2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform2d(GLcontext *context, GLuint program, GLint location, GLdouble v0, GLdouble v1);
EXPORT void cwcglProgramUniform2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform2ui(GLcontext *context, GLuint program, GLint location, GLuint v0, GLuint v1);
EXPORT void cwcglProgramUniform2uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniform3i(GLcontext *context, GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
EXPORT void cwcglProgramUniform3iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform3f(GLcontext *context, GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
EXPORT void cwcglProgramUniform3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform3d(GLcontext *context, GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
EXPORT void cwcglProgramUniform3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform3ui(GLcontext *context, GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
EXPORT void cwcglProgramUniform3uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniform4i(GLcontext *context, GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
EXPORT void cwcglProgramUniform4iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform4f(GLcontext *context, GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
EXPORT void cwcglProgramUniform4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform4d(GLcontext *context, GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
EXPORT void cwcglProgramUniform4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform4ui(GLcontext *context, GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
EXPORT void cwcglProgramUniform4uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniformMatrix2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix2x3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix3x2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix2x4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix4x2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix3x4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix4x3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix2x3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix3x2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix2x4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix4x2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix3x4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix4x3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglValidateProgramPipeline(GLcontext *context, GLuint pipeline);
EXPORT void cwcglGetProgramPipelineInfoLog(GLcontext *context, GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
EXPORT void cwcglVertexAttribL1d(GLcontext *context, GLuint index, GLdouble x);
EXPORT void cwcglVertexAttribL2d(GLcontext *context, GLuint index, GLdouble x, GLdouble y);
EXPORT void cwcglVertexAttribL3d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglVertexAttribL4d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglVertexAttribL1dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribL2dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribL3dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribL4dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribLPointer(GLcontext *context, GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglGetVertexAttribLdv(GLcontext *context, GLuint index, GLenum pname, GLdouble * params);
EXPORT void cwcglViewportArrayv(GLcontext *context, GLuint first, GLsizei count, const GLfloat * v);
EXPORT void cwcglViewportIndexedf(GLcontext *context, GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
EXPORT void cwcglViewportIndexedfv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglScissorArrayv(GLcontext *context, GLuint first, GLsizei count, const GLint * v);
EXPORT void cwcglScissorIndexed(GLcontext *context, GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
EXPORT void cwcglScissorIndexedv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglDepthRangeArrayv(GLcontext *context, GLuint first, GLsizei count, const GLdouble * v);
EXPORT void cwcglDepthRangeIndexed(GLcontext *context, GLuint index, GLdouble n, GLdouble f);
EXPORT void cwcglGetFloati_v(GLcontext *context, GLenum target, GLuint index, GLfloat * data);
EXPORT void cwcglGetDoublei_v(GLcontext *context, GLenum target, GLuint index, GLdouble * data);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_2
EXPORT void cwcglDrawArraysInstancedBaseInstance(GLcontext *context, GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
EXPORT void cwcglDrawElementsInstancedBaseInstance(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
EXPORT void cwcglDrawElementsInstancedBaseVertexBaseInstance(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
EXPORT void cwcglGetInternalformativ(GLcontext *context, GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
EXPORT void cwcglGetActiveAtomicCounterBufferiv(GLcontext *context, GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
EXPORT void cwcglBindImageTexture(GLcontext *context, GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
EXPORT void cwcglMemoryBarrier(GLcontext *context, GLbitfield barriers);
EXPORT void cwcglTexStorage1D(GLcontext *context, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
EXPORT void cwcglTexStorage2D(GLcontext *context, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglTexStorage3D(GLcontext *context, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
EXPORT void cwcglDrawTransformFeedbackInstanced(GLcontext *context, GLenum mode, GLuint id, GLsizei instancecount);
EXPORT void cwcglDrawTransformFeedbackStreamInstanced(GLcontext *context, GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_3
EXPORT void cwcglClearBufferData(GLcontext *context, GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
EXPORT void cwcglClearBufferSubData(GLcontext *context, GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
EXPORT void cwcglDispatchCompute(GLcontext *context, GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
EXPORT void cwcglDispatchComputeIndirect(GLcontext *context, GLintptr indirect);
EXPORT void cwcglCopyImageSubData(GLcontext *context, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
EXPORT void cwcglFramebufferParameteri(GLcontext *context, GLenum target, GLenum pname, GLint param);
EXPORT void cwcglGetFramebufferParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetInternalformati64v(GLcontext *context, GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
EXPORT void cwcglInvalidateTexSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
EXPORT void cwcglInvalidateTexImage(GLcontext *context, GLuint texture, GLint level);
EXPORT void cwcglInvalidateBufferSubData(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr length);
EXPORT void cwcglInvalidateBufferData(GLcontext *context, GLuint buffer);
EXPORT void cwcglInvalidateFramebuffer(GLcontext *context, GLenum target, GLsizei numAttachments, const GLenum * attachments);
EXPORT void cwcglInvalidateSubFramebuffer(GLcontext *context, GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglMultiDrawArraysIndirect(GLcontext *context, GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
EXPORT void cwcglMultiDrawElementsIndirect(GLcontext *context, GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
EXPORT void cwcglGetProgramInterfaceiv(GLcontext *context, GLuint program, GLenum programInterface, GLenum pname, GLint * params);
EXPORT void cwcglGetProgramResourceIndex(GLcontext *context, GLuint program, GLenum programInterface, const GLchar * name, GLuint* return_value);
EXPORT void cwcglGetProgramResourceName(GLcontext *context, GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
EXPORT void cwcglGetProgramResourceiv(GLcontext *context, GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
EXPORT void cwcglGetProgramResourceLocation(GLcontext *context, GLuint program, GLenum programInterface, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetProgramResourceLocationIndex(GLcontext *context, GLuint program, GLenum programInterface, const GLchar * name, GLint* return_value);
EXPORT void cwcglShaderStorageBlockBinding(GLcontext *context, GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
EXPORT void cwcglTexBufferRange(GLcontext *context, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglTexStorage2DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
EXPORT void cwcglTexStorage3DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
EXPORT void cwcglTextureView(GLcontext *context, GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
EXPORT void cwcglBindVertexBuffer(GLcontext *context, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
EXPORT void cwcglVertexAttribFormat(GLcontext *context, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
EXPORT void cwcglVertexAttribIFormat(GLcontext *context, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexAttribLFormat(GLcontext *context, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexAttribBinding(GLcontext *context, GLuint attribindex, GLuint bindingindex);
EXPORT void cwcglVertexBindingDivisor(GLcontext *context, GLuint bindingindex, GLuint divisor);
EXPORT void cwcglDebugMessageControl(GLcontext *context, GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
EXPORT void cwcglDebugMessageInsert(GLcontext *context, GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
EXPORT void cwcglDebugMessageCallback(GLcontext *context, GLDEBUGPROC callback, const void * userParam);
EXPORT void cwcglGetDebugMessageLog(GLcontext *context, GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog, GLuint* return_value);
EXPORT void cwcglPushDebugGroup(GLcontext *context, GLenum source, GLuint id, GLsizei length, const GLchar * message);
EXPORT void cwcglPopDebugGroup(GLcontext *context);
EXPORT void cwcglObjectLabel(GLcontext *context, GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
EXPORT void cwcglGetObjectLabel(GLcontext *context, GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
EXPORT void cwcglObjectPtrLabel(GLcontext *context, const void * ptr, GLsizei length, const GLchar * label);
EXPORT void cwcglGetObjectPtrLabel(GLcontext *context, const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_4
EXPORT void cwcglBufferStorage(GLcontext *context, GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
EXPORT void cwcglClearTexImage(GLcontext *context, GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
EXPORT void cwcglClearTexSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
EXPORT void cwcglBindBuffersBase(GLcontext *context, GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
EXPORT void cwcglBindBuffersRange(GLcontext *context, GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
EXPORT void cwcglBindTextures(GLcontext *context, GLuint first, GLsizei count, const GLuint * textures);
EXPORT void cwcglBindSamplers(GLcontext *context, GLuint first, GLsizei count, const GLuint * samplers);
EXPORT void cwcglBindImageTextures(GLcontext *context, GLuint first, GLsizei count, const GLuint * textures);
EXPORT void cwcglBindVertexBuffers(GLcontext *context, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_5
EXPORT void cwcglClipControl(GLcontext *context, GLenum origin, GLenum depth);
EXPORT void cwcglCreateTransformFeedbacks(GLcontext *context, GLsizei n, GLuint * ids);
EXPORT void cwcglTransformFeedbackBufferBase(GLcontext *context, GLuint xfb, GLuint index, GLuint buffer);
EXPORT void cwcglTransformFeedbackBufferRange(GLcontext *context, GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglGetTransformFeedbackiv(GLcontext *context, GLuint xfb, GLenum pname, GLint * param);
EXPORT void cwcglGetTransformFeedbacki_v(GLcontext *context, GLuint xfb, GLenum pname, GLuint index, GLint * param);
EXPORT void cwcglGetTransformFeedbacki64_v(GLcontext *context, GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
EXPORT void cwcglCreateBuffers(GLcontext *context, GLsizei n, GLuint * buffers);
EXPORT void cwcglNamedBufferStorage(GLcontext *context, GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
EXPORT void cwcglNamedBufferData(GLcontext *context, GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
EXPORT void cwcglNamedBufferSubData(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
EXPORT void cwcglCopyNamedBufferSubData(GLcontext *context, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
EXPORT void cwcglClearNamedBufferData(GLcontext *context, GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
EXPORT void cwcglClearNamedBufferSubData(GLcontext *context, GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
EXPORT void cwcglMapNamedBuffer(GLcontext *context, GLuint buffer, GLenum access, void ** return_value);
EXPORT void cwcglMapNamedBufferRange(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access, void ** return_value);
EXPORT void cwcglUnmapNamedBuffer(GLcontext *context, GLuint buffer, GLboolean* return_value);
EXPORT void cwcglFlushMappedNamedBufferRange(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr length);
EXPORT void cwcglGetNamedBufferParameteriv(GLcontext *context, GLuint buffer, GLenum pname, GLint * params);
EXPORT void cwcglGetNamedBufferParameteri64v(GLcontext *context, GLuint buffer, GLenum pname, GLint64 * params);
EXPORT void cwcglGetNamedBufferPointerv(GLcontext *context, GLuint buffer, GLenum pname, void ** params);
EXPORT void cwcglGetNamedBufferSubData(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
EXPORT void cwcglCreateFramebuffers(GLcontext *context, GLsizei n, GLuint * framebuffers);
EXPORT void cwcglNamedFramebufferRenderbuffer(GLcontext *context, GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
EXPORT void cwcglNamedFramebufferParameteri(GLcontext *context, GLuint framebuffer, GLenum pname, GLint param);
EXPORT void cwcglNamedFramebufferTexture(GLcontext *context, GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
EXPORT void cwcglNamedFramebufferTextureLayer(GLcontext *context, GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
EXPORT void cwcglNamedFramebufferDrawBuffer(GLcontext *context, GLuint framebuffer, GLenum buf);
EXPORT void cwcglNamedFramebufferDrawBuffers(GLcontext *context, GLuint framebuffer, GLsizei n, const GLenum * bufs);
EXPORT void cwcglNamedFramebufferReadBuffer(GLcontext *context, GLuint framebuffer, GLenum src);
EXPORT void cwcglInvalidateNamedFramebufferData(GLcontext *context, GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
EXPORT void cwcglInvalidateNamedFramebufferSubData(GLcontext *context, GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglClearNamedFramebufferiv(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
EXPORT void cwcglClearNamedFramebufferuiv(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
EXPORT void cwcglClearNamedFramebufferfv(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
EXPORT void cwcglClearNamedFramebufferfi(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
EXPORT void cwcglBlitNamedFramebuffer(GLcontext *context, GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
EXPORT void cwcglCheckNamedFramebufferStatus(GLcontext *context, GLuint framebuffer, GLenum target, GLenum* return_value);
EXPORT void cwcglGetNamedFramebufferParameteriv(GLcontext *context, GLuint framebuffer, GLenum pname, GLint * param);
EXPORT void cwcglGetNamedFramebufferAttachmentParameteriv(GLcontext *context, GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
EXPORT void cwcglCreateRenderbuffers(GLcontext *context, GLsizei n, GLuint * renderbuffers);
EXPORT void cwcglNamedRenderbufferStorage(GLcontext *context, GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglNamedRenderbufferStorageMultisample(GLcontext *context, GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglGetNamedRenderbufferParameteriv(GLcontext *context, GLuint renderbuffer, GLenum pname, GLint * params);
EXPORT void cwcglCreateTextures(GLcontext *context, GLenum target, GLsizei n, GLuint * textures);
EXPORT void cwcglTextureBuffer(GLcontext *context, GLuint texture, GLenum internalformat, GLuint buffer);
EXPORT void cwcglTextureBufferRange(GLcontext *context, GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglTextureStorage1D(GLcontext *context, GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
EXPORT void cwcglTextureStorage2D(GLcontext *context, GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglTextureStorage3D(GLcontext *context, GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
EXPORT void cwcglTextureStorage2DMultisample(GLcontext *context, GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
EXPORT void cwcglTextureStorage3DMultisample(GLcontext *context, GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
EXPORT void cwcglTextureSubImage1D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTextureSubImage2D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTextureSubImage3D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglCompressedTextureSubImage1D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTextureSubImage2D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTextureSubImage3D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCopyTextureSubImage1D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
EXPORT void cwcglCopyTextureSubImage2D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglCopyTextureSubImage3D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglTextureParameterf(GLcontext *context, GLuint texture, GLenum pname, GLfloat param);
EXPORT void cwcglTextureParameterfv(GLcontext *context, GLuint texture, GLenum pname, const GLfloat * param);
EXPORT void cwcglTextureParameteri(GLcontext *context, GLuint texture, GLenum pname, GLint param);
EXPORT void cwcglTextureParameterIiv(GLcontext *context, GLuint texture, GLenum pname, const GLint * params);
EXPORT void cwcglTextureParameterIuiv(GLcontext *context, GLuint texture, GLenum pname, const GLuint * params);
EXPORT void cwcglTextureParameteriv(GLcontext *context, GLuint texture, GLenum pname, const GLint * param);
EXPORT void cwcglGenerateTextureMipmap(GLcontext *context, GLuint texture);
EXPORT void cwcglBindTextureUnit(GLcontext *context, GLuint unit, GLuint texture);
EXPORT void cwcglGetTextureImage(GLcontext *context, GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetCompressedTextureImage(GLcontext *context, GLuint texture, GLint level, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetTextureLevelParameterfv(GLcontext *context, GLuint texture, GLint level, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTextureLevelParameteriv(GLcontext *context, GLuint texture, GLint level, GLenum pname, GLint * params);
EXPORT void cwcglGetTextureParameterfv(GLcontext *context, GLuint texture, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTextureParameterIiv(GLcontext *context, GLuint texture, GLenum pname, GLint * params);
EXPORT void cwcglGetTextureParameterIuiv(GLcontext *context, GLuint texture, GLenum pname, GLuint * params);
EXPORT void cwcglGetTextureParameteriv(GLcontext *context, GLuint texture, GLenum pname, GLint * params);
EXPORT void cwcglCreateVertexArrays(GLcontext *context, GLsizei n, GLuint * arrays);
EXPORT void cwcglDisableVertexArrayAttrib(GLcontext *context, GLuint vaobj, GLuint index);
EXPORT void cwcglEnableVertexArrayAttrib(GLcontext *context, GLuint vaobj, GLuint index);
EXPORT void cwcglVertexArrayElementBuffer(GLcontext *context, GLuint vaobj, GLuint buffer);
EXPORT void cwcglVertexArrayVertexBuffer(GLcontext *context, GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
EXPORT void cwcglVertexArrayVertexBuffers(GLcontext *context, GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
EXPORT void cwcglVertexArrayAttribBinding(GLcontext *context, GLuint vaobj, GLuint attribindex, GLuint bindingindex);
EXPORT void cwcglVertexArrayAttribFormat(GLcontext *context, GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
EXPORT void cwcglVertexArrayAttribIFormat(GLcontext *context, GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexArrayAttribLFormat(GLcontext *context, GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexArrayBindingDivisor(GLcontext *context, GLuint vaobj, GLuint bindingindex, GLuint divisor);
EXPORT void cwcglGetVertexArrayiv(GLcontext *context, GLuint vaobj, GLenum pname, GLint * param);
EXPORT void cwcglGetVertexArrayIndexediv(GLcontext *context, GLuint vaobj, GLuint index, GLenum pname, GLint * param);
EXPORT void cwcglGetVertexArrayIndexed64iv(GLcontext *context, GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
EXPORT void cwcglCreateSamplers(GLcontext *context, GLsizei n, GLuint * samplers);
EXPORT void cwcglCreateProgramPipelines(GLcontext *context, GLsizei n, GLuint * pipelines);
EXPORT void cwcglCreateQueries(GLcontext *context, GLenum target, GLsizei n, GLuint * ids);
EXPORT void cwcglGetQueryBufferObjecti64v(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglGetQueryBufferObjectiv(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglGetQueryBufferObjectui64v(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglGetQueryBufferObjectuiv(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglMemoryBarrierByRegion(GLcontext *context, GLbitfield barriers);
EXPORT void cwcglGetTextureSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetCompressedTextureSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetGraphicsResetStatus(GLcontext *context, GLenum* return_value);
EXPORT void cwcglGetnCompressedTexImage(GLcontext *context, GLenum target, GLint lod, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetnTexImage(GLcontext *context, GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetnUniformdv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
EXPORT void cwcglGetnUniformfv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
EXPORT void cwcglGetnUniformiv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLint * params);
EXPORT void cwcglGetnUniformuiv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLuint * params);
EXPORT void cwcglReadnPixels(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
EXPORT void cwcglGetnMapdv(GLcontext *context, GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
EXPORT void cwcglGetnMapfv(GLcontext *context, GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
EXPORT void cwcglGetnMapiv(GLcontext *context, GLenum target, GLenum query, GLsizei bufSize, GLint * v);
EXPORT void cwcglGetnPixelMapfv(GLcontext *context, GLenum map, GLsizei bufSize, GLfloat * values);
EXPORT void cwcglGetnPixelMapuiv(GLcontext *context, GLenum map, GLsizei bufSize, GLuint * values);
EXPORT void cwcglGetnPixelMapusv(GLcontext *context, GLenum map, GLsizei bufSize, GLushort * values);
EXPORT void cwcglGetnPolygonStipple(GLcontext *context, GLsizei bufSize, GLubyte * pattern);
EXPORT void cwcglGetnColorTable(GLcontext *context, GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
EXPORT void cwcglGetnConvolutionFilter(GLcontext *context, GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
EXPORT void cwcglGetnSeparableFilter(GLcontext *context, GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
EXPORT void cwcglGetnHistogram(GLcontext *context, GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
EXPORT void cwcglGetnMinmax(GLcontext *context, GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
EXPORT void cwcglTextureBarrier(GLcontext *context);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_6
EXPORT void cwcglSpecializeShader(GLcontext *context, GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
EXPORT void cwcglMultiDrawArraysIndirectCount(GLcontext *context, GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
EXPORT void cwcglMultiDrawElementsIndirectCount(GLcontext *context, GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
EXPORT void cwcglPolygonOffsetClamp(GLcontext *context, GLfloat factor, GLfloat units, GLfloat clamp);
#endif
EXPORT int InitOpenGL(void);

#ifdef __cplusplus
}
#endif
#endif // CWCGL_WRAPPER_HEADER
