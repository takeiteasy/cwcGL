/*

 This file was generated by https://github.com/takeiteasy/cwcGL/blob/master/tools/gl.rb

 The MIT License (MIT)

 Copyright (c) 2022 George Watson

 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation
 files (the "Software"), to deal in the Software without restriction,
 including without limitation the rights to use, copy, modify, merge,
 publish, distribute, sublicense, and/or sell copies of the Software,
 and to permit persons to whom the Software is furnished to do so,
 subject to the following conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

#ifndef CWCGL_WRAPPER_HEADER
#define CWCGL_WRAPPER_HEADER
#ifdef __cplusplus
extern "C" {
#endif

#define __gl_glcorearb_h_ 1  /* Khronos core */
#define __gl_glext_h_ 1      /* Khronos compatibility */
#define __gl_h_ 1            /* Windows/Linux */
#define __GL_H__ 1           /* Windows */
#define __gl3_h_ 1           /* Mac */

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN 1
#endif
#include <windows.h>
#define APIENTRY __stdcall
#endif

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif
#ifndef GLAPI
#if defined(GLAD_GLAPI_EXPORT)
#if defined(_WIN32) || defined(__CYGWIN__)
#if defined(GLAD_GLAPI_EXPORT_BUILD)
#if defined(__GNUC__)
#define GLAPI __attribute__ ((dllexport)) extern
#else
#define GLAPI __declspec(dllexport) extern
#endif
#else
#if defined(__GNUC__)
#define GLAPI __attribute__ ((dllimport)) extern
#else
#define GLAPI __declspec(dllimport) extern
#endif
#endif
#elif defined(__GNUC__) && defined(GLAD_GLAPI_EXPORT_BUILD)
#define GLAPI __attribute__ ((visibility ("default"))) extern
#else
#define GLAPI extern
#endif
#else
#define GLAPI extern
#endif
#endif

#if !defined(EXPORT)
#if defined(CWCGL_WINDOWS)
#define EXPORT __declspec(dllexport)
#elif defined(CWCGL_EMSCRIPTEN)
#define EXPORT EMSCRIPTEN_KEEPALIVE
#else
#define EXPORT
#endif
#endif

#if !defined(CWCGL_VERSION)
#define CWCGL_VERSION 1000
#endif
#define GL_VERSION_1_0 1000
#define GL_VERSION_1_1 1010
#define GL_VERSION_1_2 1020
#define GL_VERSION_1_3 1030
#define GL_VERSION_1_4 1040
#define GL_VERSION_1_5 1050
#define GL_VERSION_2_0 2000
#define GL_VERSION_2_1 2010
#define GL_VERSION_3_0 3000
#define GL_VERSION_3_1 3010
#define GL_VERSION_3_2 3020
#define GL_VERSION_3_3 3030
#define GL_VERSION_4_0 4000
#define GL_VERSION_4_1 4010
#define GL_VERSION_4_2 4020
#define GL_VERSION_4_3 4030
#define GL_VERSION_4_4 4040
#define GL_VERSION_4_5 4050
#define GL_VERSION_4_6 4060

/* khrplatform.h -- [https://registry.khronos.org/EGL/api/KHR/khrplatform.h]
** Copyright (c) 2008-2018 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/

/* Khronos platform-specific types and definitions.
 *
 * The master copy of khrplatform.h is maintained in the Khronos EGL
 * Registry repository at https://github.com/KhronosGroup/EGL-Registry
 * The last semantic modification to khrplatform.h was at commit ID:
 *      67a3e0864c2d75ea5287b9f3d2eb74a745936692
 *
 * Adopters may modify this file to suit their platform. Adopters are
 * encouraged to submit platform specific modifications to the Khronos
 * group so that they can be included in future versions of this file.
 * Please submit changes by filing pull requests or issues on
 * the EGL Registry repository linked above.
 *
 *
 * See the Implementer's Guidelines for information about where this file
 * should be located on your system and for more details of its use:
 *    http://www.khronos.org/registry/implementers_guide.pdf
 *
 * This file should be included as
 *        #include <KHR/khrplatform.h>
 * by Khronos client API header files that use its types and defines.
 *
 * The types in khrplatform.h should only be used to define API-specific types.
 *
 * Types defined in khrplatform.h:
 *    khronos_int8_t              signed   8  bit
 *    khronos_uint8_t             unsigned 8  bit
 *    khronos_int16_t             signed   16 bit
 *    khronos_uint16_t            unsigned 16 bit
 *    khronos_int32_t             signed   32 bit
 *    khronos_uint32_t            unsigned 32 bit
 *    khronos_int64_t             signed   64 bit
 *    khronos_uint64_t            unsigned 64 bit
 *    khronos_intptr_t            signed   same number of bits as a pointer
 *    khronos_uintptr_t           unsigned same number of bits as a pointer
 *    khronos_ssize_t             signed   size
 *    khronos_usize_t             unsigned size
 *    khronos_float_t             signed   32 bit floating point
 *    khronos_time_ns_t           unsigned 64 bit time in nanoseconds
 *    khronos_utime_nanoseconds_t unsigned time interval or absolute time in
 *                                         nanoseconds
 *    khronos_stime_nanoseconds_t signed time interval in nanoseconds
 *    khronos_boolean_enum_t      enumerated boolean type. This should
 *      only be used as a base type when a client API's boolean type is
 *      an enum. Client APIs which use an integer or other type for
 *      booleans cannot use this as the base type for their boolean.
 *
 * Tokens defined in khrplatform.h:
 *
 *    KHRONOS_FALSE, KHRONOS_TRUE Enumerated boolean false/true values.
 *
 *    KHRONOS_SUPPORT_INT64 is 1 if 64 bit integers are supported; otherwise 0.
 *    KHRONOS_SUPPORT_FLOAT is 1 if floats are supported; otherwise 0.
 *
 * Calling convention macros defined in this file:
 *    KHRONOS_APICALL
 *    KHRONOS_APIENTRY
 *    KHRONOS_APIATTRIBUTES
 *
 * These may be used in function prototypes as:
 *
 *      KHRONOS_APICALL void KHRONOS_APIENTRY funcname(
 *                                  int arg1,
 *                                  int arg2) KHRONOS_APIATTRIBUTES;
 */

#if defined(__SCITECH_SNAP__) && !defined(KHRONOS_STATIC)
#   define KHRONOS_STATIC 1
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APICALL
 *-------------------------------------------------------------------------
 * This precedes the return type of the function in the function prototype.
 */
#if defined(KHRONOS_STATIC)
    /* If the preprocessor constant KHRONOS_STATIC is defined, make the
     * header compatible with static linking. */
#   define KHRONOS_APICALL
#elif defined(_WIN32)
#   define KHRONOS_APICALL __declspec(dllimport)
#elif defined (__SYMBIAN32__)
#   define KHRONOS_APICALL IMPORT_C
#elif defined(__ANDROID__)
#   define KHRONOS_APICALL __attribute__((visibility("default")))
#else
#   define KHRONOS_APICALL
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APIENTRY
 *-------------------------------------------------------------------------
 * This follows the return type of the function  and precedes the function
 * name in the function prototype.
 */
#if defined(_WIN32) && !defined(_WIN32_WCE) && !defined(__SCITECH_SNAP__)
    /* Win32 but not WinCE */
#   define KHRONOS_APIENTRY __stdcall
#else
#   define KHRONOS_APIENTRY
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APIATTRIBUTES
 *-------------------------------------------------------------------------
 * This follows the closing parenthesis of the function prototype arguments.
 */
#if defined (__ARMCC_2__)
#define KHRONOS_APIATTRIBUTES __softfp
#else
#define KHRONOS_APIATTRIBUTES
#endif

/*-------------------------------------------------------------------------
 * basic type definitions
 *-----------------------------------------------------------------------*/
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || defined(__GNUC__) || defined(__SCO__) || defined(__USLC__)


/*
 * Using <stdint.h>
 */
#include <stdint.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1
/*
 * To support platform where unsigned long cannot be used interchangeably with
 * inptr_t (e.g. CHERI-extended ISAs), we can use the stdint.h intptr_t.
 * Ideally, we could just use (u)intptr_t everywhere, but this could result in
 * ABI breakage if khronos_uintptr_t is changed from unsigned long to
 * unsigned long long or similar (this results in different C++ name mangling).
 * To avoid changes for existing platforms, we restrict usage of intptr_t to
 * platforms where the size of a pointer is larger than the size of long.
 */
#if defined(__SIZEOF_LONG__) && defined(__SIZEOF_POINTER__)
#if __SIZEOF_POINTER__ > __SIZEOF_LONG__
#define KHRONOS_USE_INTPTR_T
#endif
#endif

#elif defined(__VMS ) || defined(__sgi)

/*
 * Using <inttypes.h>
 */
#include <inttypes.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif defined(_WIN32) && !defined(__SCITECH_SNAP__)

/*
 * Win32
 */
typedef __int32                 khronos_int32_t;
typedef unsigned __int32        khronos_uint32_t;
typedef __int64                 khronos_int64_t;
typedef unsigned __int64        khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif defined(__sun__) || defined(__digital__)

/*
 * Sun or Digital
 */
typedef int                     khronos_int32_t;
typedef unsigned int            khronos_uint32_t;
#if defined(__arch64__) || defined(_LP64)
typedef long int                khronos_int64_t;
typedef unsigned long int       khronos_uint64_t;
#else
typedef long long int           khronos_int64_t;
typedef unsigned long long int  khronos_uint64_t;
#endif /* __arch64__ */
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#elif 0

/*
 * Hypothetical platform with no float or int64 support
 */
typedef int                     khronos_int32_t;
typedef unsigned int            khronos_uint32_t;
#define KHRONOS_SUPPORT_INT64   0
#define KHRONOS_SUPPORT_FLOAT   0

#else

/*
 * Generic fallback
 */
#include <stdint.h>
typedef int32_t                 khronos_int32_t;
typedef uint32_t                khronos_uint32_t;
typedef int64_t                 khronos_int64_t;
typedef uint64_t                khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64   1
#define KHRONOS_SUPPORT_FLOAT   1

#endif


/*
 * Types that are (so far) the same on all platforms
 */
typedef signed   char          khronos_int8_t;
typedef unsigned char          khronos_uint8_t;
typedef signed   short int     khronos_int16_t;
typedef unsigned short int     khronos_uint16_t;

/*
 * Types that differ between LLP64 and LP64 architectures - in LLP64,
 * pointers are 64 bits, but 'long' is still 32 bits. Win64 appears
 * to be the only LLP64 architecture in current use.
 */
#ifdef KHRONOS_USE_INTPTR_T
typedef intptr_t               khronos_intptr_t;
typedef uintptr_t              khronos_uintptr_t;
#elif defined(_WIN64)
typedef signed   long long int khronos_intptr_t;
typedef unsigned long long int khronos_uintptr_t;
#else
typedef signed   long  int     khronos_intptr_t;
typedef unsigned long  int     khronos_uintptr_t;
#endif

#if defined(_WIN64)
typedef signed   long long int khronos_ssize_t;
typedef unsigned long long int khronos_usize_t;
#else
typedef signed   long  int     khronos_ssize_t;
typedef unsigned long  int     khronos_usize_t;
#endif

#if KHRONOS_SUPPORT_FLOAT
/*
 * Float type
 */
typedef          float         khronos_float_t;
#endif

#if KHRONOS_SUPPORT_INT64
/* Time types
 *
 * These types can be used to represent a time interval in nanoseconds or
 * an absolute Unadjusted System Time.  Unadjusted System Time is the number
 * of nanoseconds since some arbitrary system event (e.g. since the last
 * time the system booted).  The Unadjusted System Time is an unsigned
 * 64 bit value that wraps back to 0 every 584 years.  Time intervals
 * may be either signed or unsigned.
 */
typedef khronos_uint64_t       khronos_utime_nanoseconds_t;
typedef khronos_int64_t        khronos_stime_nanoseconds_t;
#endif

/*
 * Dummy value used to pad enum types to 32 bits.
 */
#ifndef KHRONOS_MAX_ENUM
#define KHRONOS_MAX_ENUM 0x7FFFFFFF
#endif

/*
 * Enumerated boolean type
 *
 * Values other than zero should be considered to be true.  Therefore
 * comparisons should not be made against KHRONOS_TRUE.
 */
typedef enum {
    KHRONOS_FALSE = 0,
    KHRONOS_TRUE  = 1,
    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM
} khronos_boolean_enum_t;
/* end of khrplatform.h */

typedef unsigned int GLenum;
typedef khronos_float_t GLfloat;
typedef int GLint;
typedef int GLsizei;
typedef unsigned int GLbitfield;
typedef double GLdouble;
typedef unsigned int GLuint;
typedef unsigned char GLboolean;
typedef khronos_uint8_t GLubyte;
typedef khronos_int8_t GLbyte;
typedef khronos_int16_t GLshort;
typedef khronos_uint16_t GLushort;
#if CWCGL_VERSION >= GL_VERSION_1_0
typedef void GLvoid;
#endif
#if CWCGL_VERSION >= GL_VERSION_1_1
typedef khronos_float_t GLclampf;
typedef double GLclampd;
#endif
typedef khronos_ssize_t GLsizeiptr;
typedef khronos_intptr_t GLintptr;
typedef char GLchar;
#if CWCGL_VERSION >= GL_VERSION_3_0
typedef khronos_uint16_t GLhalf;
#endif
typedef struct __GLsync *GLsync;
typedef khronos_uint64_t GLuint64;
typedef khronos_int64_t GLint64;
typedef void ( *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef khronos_intptr_t GLintptr;
typedef void GLvoid;
typedef khronos_int32_t GLclampx;
typedef khronos_float_t GLclampf;
typedef double GLclampd;
typedef void *GLeglClientBufferEXT;
typedef void *GLeglImageOES;
typedef char GLcharARB;
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t GLfixed;
typedef khronos_intptr_t GLintptrARB;
typedef khronos_ssize_t GLsizeiptrARB;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64EXT;
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif

typedef enum {
    cwcglAccumCommand,
    cwcglAccumxOESCommand,
    cwcglActiveProgramEXTCommand,
    cwcglActiveShaderProgramCommand,
    cwcglActiveShaderProgramEXTCommand,
    cwcglActiveStencilFaceEXTCommand,
    cwcglActiveTextureCommand,
    cwcglActiveTextureARBCommand,
    cwcglActiveVaryingNVCommand,
    cwcglAlphaFragmentOp1ATICommand,
    cwcglAlphaFragmentOp2ATICommand,
    cwcglAlphaFragmentOp3ATICommand,
    cwcglAlphaFuncCommand,
    cwcglAlphaFuncQCOMCommand,
    cwcglAlphaFuncxCommand,
    cwcglAlphaFuncxOESCommand,
    cwcglAlphaToCoverageDitherControlNVCommand,
    cwcglApplyFramebufferAttachmentCMAAINTELCommand,
    cwcglApplyTextureEXTCommand,
    cwcglAcquireKeyedMutexWin32EXTCommand,
    cwcglAreProgramsResidentNVCommand,
    cwcglAreTexturesResidentCommand,
    cwcglAreTexturesResidentEXTCommand,
    cwcglArrayElementCommand,
    cwcglArrayElementEXTCommand,
    cwcglArrayObjectATICommand,
    cwcglAsyncCopyBufferSubDataNVXCommand,
    cwcglAsyncCopyImageSubDataNVXCommand,
    cwcglAsyncMarkerSGIXCommand,
    cwcglAttachObjectARBCommand,
    cwcglAttachShaderCommand,
    cwcglBeginCommand,
    cwcglBeginConditionalRenderCommand,
    cwcglBeginConditionalRenderNVCommand,
    cwcglBeginConditionalRenderNVXCommand,
    cwcglBeginFragmentShaderATICommand,
    cwcglBeginOcclusionQueryNVCommand,
    cwcglBeginPerfMonitorAMDCommand,
    cwcglBeginPerfQueryINTELCommand,
    cwcglBeginQueryCommand,
    cwcglBeginQueryARBCommand,
    cwcglBeginQueryEXTCommand,
    cwcglBeginQueryIndexedCommand,
    cwcglBeginTransformFeedbackCommand,
    cwcglBeginTransformFeedbackEXTCommand,
    cwcglBeginTransformFeedbackNVCommand,
    cwcglBeginVertexShaderEXTCommand,
    cwcglBeginVideoCaptureNVCommand,
    cwcglBindAttribLocationCommand,
    cwcglBindAttribLocationARBCommand,
    cwcglBindBufferCommand,
    cwcglBindBufferARBCommand,
    cwcglBindBufferBaseCommand,
    cwcglBindBufferBaseEXTCommand,
    cwcglBindBufferBaseNVCommand,
    cwcglBindBufferOffsetEXTCommand,
    cwcglBindBufferOffsetNVCommand,
    cwcglBindBufferRangeCommand,
    cwcglBindBufferRangeEXTCommand,
    cwcglBindBufferRangeNVCommand,
    cwcglBindBuffersBaseCommand,
    cwcglBindBuffersRangeCommand,
    cwcglBindFragDataLocationCommand,
    cwcglBindFragDataLocationEXTCommand,
    cwcglBindFragDataLocationIndexedCommand,
    cwcglBindFragDataLocationIndexedEXTCommand,
    cwcglBindFragmentShaderATICommand,
    cwcglBindFramebufferCommand,
    cwcglBindFramebufferEXTCommand,
    cwcglBindFramebufferOESCommand,
    cwcglBindImageTextureCommand,
    cwcglBindImageTextureEXTCommand,
    cwcglBindImageTexturesCommand,
    cwcglBindLightParameterEXTCommand,
    cwcglBindMaterialParameterEXTCommand,
    cwcglBindMultiTextureEXTCommand,
    cwcglBindParameterEXTCommand,
    cwcglBindProgramARBCommand,
    cwcglBindProgramNVCommand,
    cwcglBindProgramPipelineCommand,
    cwcglBindProgramPipelineEXTCommand,
    cwcglBindRenderbufferCommand,
    cwcglBindRenderbufferEXTCommand,
    cwcglBindRenderbufferOESCommand,
    cwcglBindSamplerCommand,
    cwcglBindSamplersCommand,
    cwcglBindShadingRateImageNVCommand,
    cwcglBindTexGenParameterEXTCommand,
    cwcglBindTextureCommand,
    cwcglBindTextureEXTCommand,
    cwcglBindTextureUnitCommand,
    cwcglBindTextureUnitParameterEXTCommand,
    cwcglBindTexturesCommand,
    cwcglBindTransformFeedbackCommand,
    cwcglBindTransformFeedbackNVCommand,
    cwcglBindVertexArrayCommand,
    cwcglBindVertexArrayAPPLECommand,
    cwcglBindVertexArrayOESCommand,
    cwcglBindVertexBufferCommand,
    cwcglBindVertexBuffersCommand,
    cwcglBindVertexShaderEXTCommand,
    cwcglBindVideoCaptureStreamBufferNVCommand,
    cwcglBindVideoCaptureStreamTextureNVCommand,
    cwcglBinormal3bEXTCommand,
    cwcglBinormal3bvEXTCommand,
    cwcglBinormal3dEXTCommand,
    cwcglBinormal3dvEXTCommand,
    cwcglBinormal3fEXTCommand,
    cwcglBinormal3fvEXTCommand,
    cwcglBinormal3iEXTCommand,
    cwcglBinormal3ivEXTCommand,
    cwcglBinormal3sEXTCommand,
    cwcglBinormal3svEXTCommand,
    cwcglBinormalPointerEXTCommand,
    cwcglBitmapCommand,
    cwcglBitmapxOESCommand,
    cwcglBlendBarrierCommand,
    cwcglBlendBarrierKHRCommand,
    cwcglBlendBarrierNVCommand,
    cwcglBlendColorCommand,
    cwcglBlendColorEXTCommand,
    cwcglBlendColorxOESCommand,
    cwcglBlendEquationCommand,
    cwcglBlendEquationEXTCommand,
    cwcglBlendEquationIndexedAMDCommand,
    cwcglBlendEquationOESCommand,
    cwcglBlendEquationSeparateCommand,
    cwcglBlendEquationSeparateEXTCommand,
    cwcglBlendEquationSeparateIndexedAMDCommand,
    cwcglBlendEquationSeparateOESCommand,
    cwcglBlendEquationSeparateiCommand,
    cwcglBlendEquationSeparateiARBCommand,
    cwcglBlendEquationSeparateiEXTCommand,
    cwcglBlendEquationSeparateiOESCommand,
    cwcglBlendEquationiCommand,
    cwcglBlendEquationiARBCommand,
    cwcglBlendEquationiEXTCommand,
    cwcglBlendEquationiOESCommand,
    cwcglBlendFuncCommand,
    cwcglBlendFuncIndexedAMDCommand,
    cwcglBlendFuncSeparateCommand,
    cwcglBlendFuncSeparateEXTCommand,
    cwcglBlendFuncSeparateINGRCommand,
    cwcglBlendFuncSeparateIndexedAMDCommand,
    cwcglBlendFuncSeparateOESCommand,
    cwcglBlendFuncSeparateiCommand,
    cwcglBlendFuncSeparateiARBCommand,
    cwcglBlendFuncSeparateiEXTCommand,
    cwcglBlendFuncSeparateiOESCommand,
    cwcglBlendFunciCommand,
    cwcglBlendFunciARBCommand,
    cwcglBlendFunciEXTCommand,
    cwcglBlendFunciOESCommand,
    cwcglBlendParameteriNVCommand,
    cwcglBlitFramebufferCommand,
    cwcglBlitFramebufferANGLECommand,
    cwcglBlitFramebufferEXTCommand,
    cwcglBlitFramebufferLayerEXTCommand,
    cwcglBlitFramebufferLayersEXTCommand,
    cwcglBlitFramebufferNVCommand,
    cwcglBlitNamedFramebufferCommand,
    cwcglBufferAddressRangeNVCommand,
    cwcglBufferAttachMemoryNVCommand,
    cwcglBufferDataCommand,
    cwcglBufferDataARBCommand,
    cwcglBufferPageCommitmentARBCommand,
    cwcglBufferPageCommitmentMemNVCommand,
    cwcglBufferParameteriAPPLECommand,
    cwcglBufferStorageCommand,
    cwcglBufferStorageEXTCommand,
    cwcglBufferStorageExternalEXTCommand,
    cwcglBufferStorageMemEXTCommand,
    cwcglBufferSubDataCommand,
    cwcglBufferSubDataARBCommand,
    cwcglCallCommandListNVCommand,
    cwcglCallListCommand,
    cwcglCallListsCommand,
    cwcglCheckFramebufferStatusCommand,
    cwcglCheckFramebufferStatusEXTCommand,
    cwcglCheckFramebufferStatusOESCommand,
    cwcglCheckNamedFramebufferStatusCommand,
    cwcglCheckNamedFramebufferStatusEXTCommand,
    cwcglClampColorCommand,
    cwcglClampColorARBCommand,
    cwcglClearCommand,
    cwcglClearAccumCommand,
    cwcglClearAccumxOESCommand,
    cwcglClearBufferDataCommand,
    cwcglClearBufferSubDataCommand,
    cwcglClearBufferfiCommand,
    cwcglClearBufferfvCommand,
    cwcglClearBufferivCommand,
    cwcglClearBufferuivCommand,
    cwcglClearColorCommand,
    cwcglClearColorIiEXTCommand,
    cwcglClearColorIuiEXTCommand,
    cwcglClearColorxCommand,
    cwcglClearColorxOESCommand,
    cwcglClearDepthCommand,
    cwcglClearDepthdNVCommand,
    cwcglClearDepthfCommand,
    cwcglClearDepthfOESCommand,
    cwcglClearDepthxCommand,
    cwcglClearDepthxOESCommand,
    cwcglClearIndexCommand,
    cwcglClearNamedBufferDataCommand,
    cwcglClearNamedBufferDataEXTCommand,
    cwcglClearNamedBufferSubDataCommand,
    cwcglClearNamedBufferSubDataEXTCommand,
    cwcglClearNamedFramebufferfiCommand,
    cwcglClearNamedFramebufferfvCommand,
    cwcglClearNamedFramebufferivCommand,
    cwcglClearNamedFramebufferuivCommand,
    cwcglClearPixelLocalStorageuiEXTCommand,
    cwcglClearStencilCommand,
    cwcglClearTexImageCommand,
    cwcglClearTexImageEXTCommand,
    cwcglClearTexSubImageCommand,
    cwcglClearTexSubImageEXTCommand,
    cwcglClientActiveTextureCommand,
    cwcglClientActiveTextureARBCommand,
    cwcglClientActiveVertexStreamATICommand,
    cwcglClientAttribDefaultEXTCommand,
    cwcglClientWaitSemaphoreui64NVXCommand,
    cwcglClientWaitSyncCommand,
    cwcglClientWaitSyncAPPLECommand,
    cwcglClipControlCommand,
    cwcglClipControlEXTCommand,
    cwcglClipPlaneCommand,
    cwcglClipPlanefCommand,
    cwcglClipPlanefIMGCommand,
    cwcglClipPlanefOESCommand,
    cwcglClipPlanexCommand,
    cwcglClipPlanexIMGCommand,
    cwcglClipPlanexOESCommand,
    cwcglColor3bCommand,
    cwcglColor3bvCommand,
    cwcglColor3dCommand,
    cwcglColor3dvCommand,
    cwcglColor3fCommand,
    cwcglColor3fVertex3fSUNCommand,
    cwcglColor3fVertex3fvSUNCommand,
    cwcglColor3fvCommand,
    cwcglColor3hNVCommand,
    cwcglColor3hvNVCommand,
    cwcglColor3iCommand,
    cwcglColor3ivCommand,
    cwcglColor3sCommand,
    cwcglColor3svCommand,
    cwcglColor3ubCommand,
    cwcglColor3ubvCommand,
    cwcglColor3uiCommand,
    cwcglColor3uivCommand,
    cwcglColor3usCommand,
    cwcglColor3usvCommand,
    cwcglColor3xOESCommand,
    cwcglColor3xvOESCommand,
    cwcglColor4bCommand,
    cwcglColor4bvCommand,
    cwcglColor4dCommand,
    cwcglColor4dvCommand,
    cwcglColor4fCommand,
    cwcglColor4fNormal3fVertex3fSUNCommand,
    cwcglColor4fNormal3fVertex3fvSUNCommand,
    cwcglColor4fvCommand,
    cwcglColor4hNVCommand,
    cwcglColor4hvNVCommand,
    cwcglColor4iCommand,
    cwcglColor4ivCommand,
    cwcglColor4sCommand,
    cwcglColor4svCommand,
    cwcglColor4ubCommand,
    cwcglColor4ubVertex2fSUNCommand,
    cwcglColor4ubVertex2fvSUNCommand,
    cwcglColor4ubVertex3fSUNCommand,
    cwcglColor4ubVertex3fvSUNCommand,
    cwcglColor4ubvCommand,
    cwcglColor4uiCommand,
    cwcglColor4uivCommand,
    cwcglColor4usCommand,
    cwcglColor4usvCommand,
    cwcglColor4xCommand,
    cwcglColor4xOESCommand,
    cwcglColor4xvOESCommand,
    cwcglColorFormatNVCommand,
    cwcglColorFragmentOp1ATICommand,
    cwcglColorFragmentOp2ATICommand,
    cwcglColorFragmentOp3ATICommand,
    cwcglColorMaskCommand,
    cwcglColorMaskIndexedEXTCommand,
    cwcglColorMaskiCommand,
    cwcglColorMaskiEXTCommand,
    cwcglColorMaskiOESCommand,
    cwcglColorMaterialCommand,
    cwcglColorP3uiCommand,
    cwcglColorP3uivCommand,
    cwcglColorP4uiCommand,
    cwcglColorP4uivCommand,
    cwcglColorPointerCommand,
    cwcglColorPointerEXTCommand,
    cwcglColorPointerListIBMCommand,
    cwcglColorPointervINTELCommand,
    cwcglColorSubTableCommand,
    cwcglColorSubTableEXTCommand,
    cwcglColorTableCommand,
    cwcglColorTableEXTCommand,
    cwcglColorTableParameterfvCommand,
    cwcglColorTableParameterfvSGICommand,
    cwcglColorTableParameterivCommand,
    cwcglColorTableParameterivSGICommand,
    cwcglColorTableSGICommand,
    cwcglCombinerInputNVCommand,
    cwcglCombinerOutputNVCommand,
    cwcglCombinerParameterfNVCommand,
    cwcglCombinerParameterfvNVCommand,
    cwcglCombinerParameteriNVCommand,
    cwcglCombinerParameterivNVCommand,
    cwcglCombinerStageParameterfvNVCommand,
    cwcglCommandListSegmentsNVCommand,
    cwcglCompileCommandListNVCommand,
    cwcglCompileShaderCommand,
    cwcglCompileShaderARBCommand,
    cwcglCompileShaderIncludeARBCommand,
    cwcglCompressedMultiTexImage1DEXTCommand,
    cwcglCompressedMultiTexImage2DEXTCommand,
    cwcglCompressedMultiTexImage3DEXTCommand,
    cwcglCompressedMultiTexSubImage1DEXTCommand,
    cwcglCompressedMultiTexSubImage2DEXTCommand,
    cwcglCompressedMultiTexSubImage3DEXTCommand,
    cwcglCompressedTexImage1DCommand,
    cwcglCompressedTexImage1DARBCommand,
    cwcglCompressedTexImage2DCommand,
    cwcglCompressedTexImage2DARBCommand,
    cwcglCompressedTexImage3DCommand,
    cwcglCompressedTexImage3DARBCommand,
    cwcglCompressedTexImage3DOESCommand,
    cwcglCompressedTexSubImage1DCommand,
    cwcglCompressedTexSubImage1DARBCommand,
    cwcglCompressedTexSubImage2DCommand,
    cwcglCompressedTexSubImage2DARBCommand,
    cwcglCompressedTexSubImage3DCommand,
    cwcglCompressedTexSubImage3DARBCommand,
    cwcglCompressedTexSubImage3DOESCommand,
    cwcglCompressedTextureImage1DEXTCommand,
    cwcglCompressedTextureImage2DEXTCommand,
    cwcglCompressedTextureImage3DEXTCommand,
    cwcglCompressedTextureSubImage1DCommand,
    cwcglCompressedTextureSubImage1DEXTCommand,
    cwcglCompressedTextureSubImage2DCommand,
    cwcglCompressedTextureSubImage2DEXTCommand,
    cwcglCompressedTextureSubImage3DCommand,
    cwcglCompressedTextureSubImage3DEXTCommand,
    cwcglConservativeRasterParameterfNVCommand,
    cwcglConservativeRasterParameteriNVCommand,
    cwcglConvolutionFilter1DCommand,
    cwcglConvolutionFilter1DEXTCommand,
    cwcglConvolutionFilter2DCommand,
    cwcglConvolutionFilter2DEXTCommand,
    cwcglConvolutionParameterfCommand,
    cwcglConvolutionParameterfEXTCommand,
    cwcglConvolutionParameterfvCommand,
    cwcglConvolutionParameterfvEXTCommand,
    cwcglConvolutionParameteriCommand,
    cwcglConvolutionParameteriEXTCommand,
    cwcglConvolutionParameterivCommand,
    cwcglConvolutionParameterivEXTCommand,
    cwcglConvolutionParameterxOESCommand,
    cwcglConvolutionParameterxvOESCommand,
    cwcglCopyBufferSubDataCommand,
    cwcglCopyBufferSubDataNVCommand,
    cwcglCopyColorSubTableCommand,
    cwcglCopyColorSubTableEXTCommand,
    cwcglCopyColorTableCommand,
    cwcglCopyColorTableSGICommand,
    cwcglCopyConvolutionFilter1DCommand,
    cwcglCopyConvolutionFilter1DEXTCommand,
    cwcglCopyConvolutionFilter2DCommand,
    cwcglCopyConvolutionFilter2DEXTCommand,
    cwcglCopyImageSubDataCommand,
    cwcglCopyImageSubDataEXTCommand,
    cwcglCopyImageSubDataNVCommand,
    cwcglCopyImageSubDataOESCommand,
    cwcglCopyMultiTexImage1DEXTCommand,
    cwcglCopyMultiTexImage2DEXTCommand,
    cwcglCopyMultiTexSubImage1DEXTCommand,
    cwcglCopyMultiTexSubImage2DEXTCommand,
    cwcglCopyMultiTexSubImage3DEXTCommand,
    cwcglCopyNamedBufferSubDataCommand,
    cwcglCopyPathNVCommand,
    cwcglCopyPixelsCommand,
    cwcglCopyTexImage1DCommand,
    cwcglCopyTexImage1DEXTCommand,
    cwcglCopyTexImage2DCommand,
    cwcglCopyTexImage2DEXTCommand,
    cwcglCopyTexSubImage1DCommand,
    cwcglCopyTexSubImage1DEXTCommand,
    cwcglCopyTexSubImage2DCommand,
    cwcglCopyTexSubImage2DEXTCommand,
    cwcglCopyTexSubImage3DCommand,
    cwcglCopyTexSubImage3DEXTCommand,
    cwcglCopyTexSubImage3DOESCommand,
    cwcglCopyTextureImage1DEXTCommand,
    cwcglCopyTextureImage2DEXTCommand,
    cwcglCopyTextureLevelsAPPLECommand,
    cwcglCopyTextureSubImage1DCommand,
    cwcglCopyTextureSubImage1DEXTCommand,
    cwcglCopyTextureSubImage2DCommand,
    cwcglCopyTextureSubImage2DEXTCommand,
    cwcglCopyTextureSubImage3DCommand,
    cwcglCopyTextureSubImage3DEXTCommand,
    cwcglCoverFillPathInstancedNVCommand,
    cwcglCoverFillPathNVCommand,
    cwcglCoverStrokePathInstancedNVCommand,
    cwcglCoverStrokePathNVCommand,
    cwcglCoverageMaskNVCommand,
    cwcglCoverageModulationNVCommand,
    cwcglCoverageModulationTableNVCommand,
    cwcglCoverageOperationNVCommand,
    cwcglCreateBuffersCommand,
    cwcglCreateCommandListsNVCommand,
    cwcglCreateFramebuffersCommand,
    cwcglCreateMemoryObjectsEXTCommand,
    cwcglCreatePerfQueryINTELCommand,
    cwcglCreateProgramCommand,
    cwcglCreateProgramObjectARBCommand,
    cwcglCreateProgramPipelinesCommand,
    cwcglCreateProgressFenceNVXCommand,
    cwcglCreateQueriesCommand,
    cwcglCreateRenderbuffersCommand,
    cwcglCreateSamplersCommand,
    cwcglCreateSemaphoresNVCommand,
    cwcglCreateShaderCommand,
    cwcglCreateShaderObjectARBCommand,
    cwcglCreateShaderProgramEXTCommand,
    cwcglCreateShaderProgramvCommand,
    cwcglCreateShaderProgramvEXTCommand,
    cwcglCreateStatesNVCommand,
    cwcglCreateSyncFromCLeventARBCommand,
    cwcglCreateTexturesCommand,
    cwcglCreateTransformFeedbacksCommand,
    cwcglCreateVertexArraysCommand,
    cwcglCullFaceCommand,
    cwcglCullParameterdvEXTCommand,
    cwcglCullParameterfvEXTCommand,
    cwcglCurrentPaletteMatrixARBCommand,
    cwcglCurrentPaletteMatrixOESCommand,
    cwcglDebugMessageCallbackCommand,
    cwcglDebugMessageCallbackAMDCommand,
    cwcglDebugMessageCallbackARBCommand,
    cwcglDebugMessageCallbackKHRCommand,
    cwcglDebugMessageControlCommand,
    cwcglDebugMessageControlARBCommand,
    cwcglDebugMessageControlKHRCommand,
    cwcglDebugMessageEnableAMDCommand,
    cwcglDebugMessageInsertCommand,
    cwcglDebugMessageInsertAMDCommand,
    cwcglDebugMessageInsertARBCommand,
    cwcglDebugMessageInsertKHRCommand,
    cwcglDeformSGIXCommand,
    cwcglDeformationMap3dSGIXCommand,
    cwcglDeformationMap3fSGIXCommand,
    cwcglDeleteAsyncMarkersSGIXCommand,
    cwcglDeleteBuffersCommand,
    cwcglDeleteBuffersARBCommand,
    cwcglDeleteCommandListsNVCommand,
    cwcglDeleteFencesAPPLECommand,
    cwcglDeleteFencesNVCommand,
    cwcglDeleteFragmentShaderATICommand,
    cwcglDeleteFramebuffersCommand,
    cwcglDeleteFramebuffersEXTCommand,
    cwcglDeleteFramebuffersOESCommand,
    cwcglDeleteListsCommand,
    cwcglDeleteMemoryObjectsEXTCommand,
    cwcglDeleteNamedStringARBCommand,
    cwcglDeleteNamesAMDCommand,
    cwcglDeleteObjectARBCommand,
    cwcglDeleteOcclusionQueriesNVCommand,
    cwcglDeletePathsNVCommand,
    cwcglDeletePerfMonitorsAMDCommand,
    cwcglDeletePerfQueryINTELCommand,
    cwcglDeleteProgramCommand,
    cwcglDeleteProgramPipelinesCommand,
    cwcglDeleteProgramPipelinesEXTCommand,
    cwcglDeleteProgramsARBCommand,
    cwcglDeleteProgramsNVCommand,
    cwcglDeleteQueriesCommand,
    cwcglDeleteQueriesARBCommand,
    cwcglDeleteQueriesEXTCommand,
    cwcglDeleteQueryResourceTagNVCommand,
    cwcglDeleteRenderbuffersCommand,
    cwcglDeleteRenderbuffersEXTCommand,
    cwcglDeleteRenderbuffersOESCommand,
    cwcglDeleteSamplersCommand,
    cwcglDeleteSemaphoresEXTCommand,
    cwcglDeleteShaderCommand,
    cwcglDeleteStatesNVCommand,
    cwcglDeleteSyncCommand,
    cwcglDeleteSyncAPPLECommand,
    cwcglDeleteTexturesCommand,
    cwcglDeleteTexturesEXTCommand,
    cwcglDeleteTransformFeedbacksCommand,
    cwcglDeleteTransformFeedbacksNVCommand,
    cwcglDeleteVertexArraysCommand,
    cwcglDeleteVertexArraysAPPLECommand,
    cwcglDeleteVertexArraysOESCommand,
    cwcglDeleteVertexShaderEXTCommand,
    cwcglDepthBoundsEXTCommand,
    cwcglDepthBoundsdNVCommand,
    cwcglDepthFuncCommand,
    cwcglDepthMaskCommand,
    cwcglDepthRangeCommand,
    cwcglDepthRangeArraydvNVCommand,
    cwcglDepthRangeArrayfvNVCommand,
    cwcglDepthRangeArrayfvOESCommand,
    cwcglDepthRangeArrayvCommand,
    cwcglDepthRangeIndexedCommand,
    cwcglDepthRangeIndexeddNVCommand,
    cwcglDepthRangeIndexedfNVCommand,
    cwcglDepthRangeIndexedfOESCommand,
    cwcglDepthRangedNVCommand,
    cwcglDepthRangefCommand,
    cwcglDepthRangefOESCommand,
    cwcglDepthRangexCommand,
    cwcglDepthRangexOESCommand,
    cwcglDetachObjectARBCommand,
    cwcglDetachShaderCommand,
    cwcglDetailTexFuncSGISCommand,
    cwcglDisableCommand,
    cwcglDisableClientStateCommand,
    cwcglDisableClientStateIndexedEXTCommand,
    cwcglDisableClientStateiEXTCommand,
    cwcglDisableDriverControlQCOMCommand,
    cwcglDisableIndexedEXTCommand,
    cwcglDisableVariantClientStateEXTCommand,
    cwcglDisableVertexArrayAttribCommand,
    cwcglDisableVertexArrayAttribEXTCommand,
    cwcglDisableVertexArrayEXTCommand,
    cwcglDisableVertexAttribAPPLECommand,
    cwcglDisableVertexAttribArrayCommand,
    cwcglDisableVertexAttribArrayARBCommand,
    cwcglDisableiCommand,
    cwcglDisableiEXTCommand,
    cwcglDisableiNVCommand,
    cwcglDisableiOESCommand,
    cwcglDiscardFramebufferEXTCommand,
    cwcglDispatchComputeCommand,
    cwcglDispatchComputeGroupSizeARBCommand,
    cwcglDispatchComputeIndirectCommand,
    cwcglDrawArraysCommand,
    cwcglDrawArraysEXTCommand,
    cwcglDrawArraysIndirectCommand,
    cwcglDrawArraysInstancedCommand,
    cwcglDrawArraysInstancedANGLECommand,
    cwcglDrawArraysInstancedARBCommand,
    cwcglDrawArraysInstancedBaseInstanceCommand,
    cwcglDrawArraysInstancedBaseInstanceEXTCommand,
    cwcglDrawArraysInstancedEXTCommand,
    cwcglDrawArraysInstancedNVCommand,
    cwcglDrawBufferCommand,
    cwcglDrawBuffersCommand,
    cwcglDrawBuffersARBCommand,
    cwcglDrawBuffersATICommand,
    cwcglDrawBuffersEXTCommand,
    cwcglDrawBuffersIndexedEXTCommand,
    cwcglDrawBuffersNVCommand,
    cwcglDrawCommandsAddressNVCommand,
    cwcglDrawCommandsNVCommand,
    cwcglDrawCommandsStatesAddressNVCommand,
    cwcglDrawCommandsStatesNVCommand,
    cwcglDrawElementArrayAPPLECommand,
    cwcglDrawElementArrayATICommand,
    cwcglDrawElementsCommand,
    cwcglDrawElementsBaseVertexCommand,
    cwcglDrawElementsBaseVertexEXTCommand,
    cwcglDrawElementsBaseVertexOESCommand,
    cwcglDrawElementsIndirectCommand,
    cwcglDrawElementsInstancedCommand,
    cwcglDrawElementsInstancedANGLECommand,
    cwcglDrawElementsInstancedARBCommand,
    cwcglDrawElementsInstancedBaseInstanceCommand,
    cwcglDrawElementsInstancedBaseInstanceEXTCommand,
    cwcglDrawElementsInstancedBaseVertexCommand,
    cwcglDrawElementsInstancedBaseVertexBaseInstanceCommand,
    cwcglDrawElementsInstancedBaseVertexBaseInstanceEXTCommand,
    cwcglDrawElementsInstancedBaseVertexEXTCommand,
    cwcglDrawElementsInstancedBaseVertexOESCommand,
    cwcglDrawElementsInstancedEXTCommand,
    cwcglDrawElementsInstancedNVCommand,
    cwcglDrawMeshArraysSUNCommand,
    cwcglDrawMeshTasksNVCommand,
    cwcglDrawMeshTasksIndirectNVCommand,
    cwcglDrawPixelsCommand,
    cwcglDrawRangeElementArrayAPPLECommand,
    cwcglDrawRangeElementArrayATICommand,
    cwcglDrawRangeElementsCommand,
    cwcglDrawRangeElementsBaseVertexCommand,
    cwcglDrawRangeElementsBaseVertexEXTCommand,
    cwcglDrawRangeElementsBaseVertexOESCommand,
    cwcglDrawRangeElementsEXTCommand,
    cwcglDrawTexfOESCommand,
    cwcglDrawTexfvOESCommand,
    cwcglDrawTexiOESCommand,
    cwcglDrawTexivOESCommand,
    cwcglDrawTexsOESCommand,
    cwcglDrawTexsvOESCommand,
    cwcglDrawTextureNVCommand,
    cwcglDrawTexxOESCommand,
    cwcglDrawTexxvOESCommand,
    cwcglDrawTransformFeedbackCommand,
    cwcglDrawTransformFeedbackEXTCommand,
    cwcglDrawTransformFeedbackInstancedCommand,
    cwcglDrawTransformFeedbackInstancedEXTCommand,
    cwcglDrawTransformFeedbackNVCommand,
    cwcglDrawTransformFeedbackStreamCommand,
    cwcglDrawTransformFeedbackStreamInstancedCommand,
    cwcglEGLImageTargetRenderbufferStorageOESCommand,
    cwcglEGLImageTargetTexStorageEXTCommand,
    cwcglEGLImageTargetTexture2DOESCommand,
    cwcglEGLImageTargetTextureStorageEXTCommand,
    cwcglEdgeFlagCommand,
    cwcglEdgeFlagFormatNVCommand,
    cwcglEdgeFlagPointerCommand,
    cwcglEdgeFlagPointerEXTCommand,
    cwcglEdgeFlagPointerListIBMCommand,
    cwcglEdgeFlagvCommand,
    cwcglElementPointerAPPLECommand,
    cwcglElementPointerATICommand,
    cwcglEnableCommand,
    cwcglEnableClientStateCommand,
    cwcglEnableClientStateIndexedEXTCommand,
    cwcglEnableClientStateiEXTCommand,
    cwcglEnableDriverControlQCOMCommand,
    cwcglEnableIndexedEXTCommand,
    cwcglEnableVariantClientStateEXTCommand,
    cwcglEnableVertexArrayAttribCommand,
    cwcglEnableVertexArrayAttribEXTCommand,
    cwcglEnableVertexArrayEXTCommand,
    cwcglEnableVertexAttribAPPLECommand,
    cwcglEnableVertexAttribArrayCommand,
    cwcglEnableVertexAttribArrayARBCommand,
    cwcglEnableiCommand,
    cwcglEnableiEXTCommand,
    cwcglEnableiNVCommand,
    cwcglEnableiOESCommand,
    cwcglEndCommand,
    cwcglEndConditionalRenderCommand,
    cwcglEndConditionalRenderNVCommand,
    cwcglEndConditionalRenderNVXCommand,
    cwcglEndFragmentShaderATICommand,
    cwcglEndListCommand,
    cwcglEndOcclusionQueryNVCommand,
    cwcglEndPerfMonitorAMDCommand,
    cwcglEndPerfQueryINTELCommand,
    cwcglEndQueryCommand,
    cwcglEndQueryARBCommand,
    cwcglEndQueryEXTCommand,
    cwcglEndQueryIndexedCommand,
    cwcglEndTilingQCOMCommand,
    cwcglEndTransformFeedbackCommand,
    cwcglEndTransformFeedbackEXTCommand,
    cwcglEndTransformFeedbackNVCommand,
    cwcglEndVertexShaderEXTCommand,
    cwcglEndVideoCaptureNVCommand,
    cwcglEvalCoord1dCommand,
    cwcglEvalCoord1dvCommand,
    cwcglEvalCoord1fCommand,
    cwcglEvalCoord1fvCommand,
    cwcglEvalCoord1xOESCommand,
    cwcglEvalCoord1xvOESCommand,
    cwcglEvalCoord2dCommand,
    cwcglEvalCoord2dvCommand,
    cwcglEvalCoord2fCommand,
    cwcglEvalCoord2fvCommand,
    cwcglEvalCoord2xOESCommand,
    cwcglEvalCoord2xvOESCommand,
    cwcglEvalMapsNVCommand,
    cwcglEvalMesh1Command,
    cwcglEvalMesh2Command,
    cwcglEvalPoint1Command,
    cwcglEvalPoint2Command,
    cwcglEvaluateDepthValuesARBCommand,
    cwcglExecuteProgramNVCommand,
    cwcglExtGetBufferPointervQCOMCommand,
    cwcglExtGetBuffersQCOMCommand,
    cwcglExtGetFramebuffersQCOMCommand,
    cwcglExtGetProgramBinarySourceQCOMCommand,
    cwcglExtGetProgramsQCOMCommand,
    cwcglExtGetRenderbuffersQCOMCommand,
    cwcglExtGetShadersQCOMCommand,
    cwcglExtGetTexLevelParameterivQCOMCommand,
    cwcglExtGetTexSubImageQCOMCommand,
    cwcglExtGetTexturesQCOMCommand,
    cwcglExtIsProgramBinaryQCOMCommand,
    cwcglExtTexObjectStateOverrideiQCOMCommand,
    cwcglExtractComponentEXTCommand,
    cwcglFeedbackBufferCommand,
    cwcglFeedbackBufferxOESCommand,
    cwcglFenceSyncCommand,
    cwcglFenceSyncAPPLECommand,
    cwcglFinalCombinerInputNVCommand,
    cwcglFinishCommand,
    cwcglFinishAsyncSGIXCommand,
    cwcglFinishFenceAPPLECommand,
    cwcglFinishFenceNVCommand,
    cwcglFinishObjectAPPLECommand,
    cwcglFinishTextureSUNXCommand,
    cwcglFlushCommand,
    cwcglFlushMappedBufferRangeCommand,
    cwcglFlushMappedBufferRangeAPPLECommand,
    cwcglFlushMappedBufferRangeEXTCommand,
    cwcglFlushMappedNamedBufferRangeCommand,
    cwcglFlushMappedNamedBufferRangeEXTCommand,
    cwcglFlushPixelDataRangeNVCommand,
    cwcglFlushRasterSGIXCommand,
    cwcglFlushStaticDataIBMCommand,
    cwcglFlushVertexArrayRangeAPPLECommand,
    cwcglFlushVertexArrayRangeNVCommand,
    cwcglFogCoordFormatNVCommand,
    cwcglFogCoordPointerCommand,
    cwcglFogCoordPointerEXTCommand,
    cwcglFogCoordPointerListIBMCommand,
    cwcglFogCoorddCommand,
    cwcglFogCoorddEXTCommand,
    cwcglFogCoorddvCommand,
    cwcglFogCoorddvEXTCommand,
    cwcglFogCoordfCommand,
    cwcglFogCoordfEXTCommand,
    cwcglFogCoordfvCommand,
    cwcglFogCoordfvEXTCommand,
    cwcglFogCoordhNVCommand,
    cwcglFogCoordhvNVCommand,
    cwcglFogFuncSGISCommand,
    cwcglFogfCommand,
    cwcglFogfvCommand,
    cwcglFogiCommand,
    cwcglFogivCommand,
    cwcglFogxCommand,
    cwcglFogxOESCommand,
    cwcglFogxvCommand,
    cwcglFogxvOESCommand,
    cwcglFragmentColorMaterialSGIXCommand,
    cwcglFragmentCoverageColorNVCommand,
    cwcglFragmentLightModelfSGIXCommand,
    cwcglFragmentLightModelfvSGIXCommand,
    cwcglFragmentLightModeliSGIXCommand,
    cwcglFragmentLightModelivSGIXCommand,
    cwcglFragmentLightfSGIXCommand,
    cwcglFragmentLightfvSGIXCommand,
    cwcglFragmentLightiSGIXCommand,
    cwcglFragmentLightivSGIXCommand,
    cwcglFragmentMaterialfSGIXCommand,
    cwcglFragmentMaterialfvSGIXCommand,
    cwcglFragmentMaterialiSGIXCommand,
    cwcglFragmentMaterialivSGIXCommand,
    cwcglFrameTerminatorGREMEDYCommand,
    cwcglFrameZoomSGIXCommand,
    cwcglFramebufferDrawBufferEXTCommand,
    cwcglFramebufferDrawBuffersEXTCommand,
    cwcglFramebufferFetchBarrierEXTCommand,
    cwcglFramebufferFetchBarrierQCOMCommand,
    cwcglFramebufferFoveationConfigQCOMCommand,
    cwcglFramebufferFoveationParametersQCOMCommand,
    cwcglFramebufferParameteriCommand,
    cwcglFramebufferPixelLocalStorageSizeEXTCommand,
    cwcglFramebufferReadBufferEXTCommand,
    cwcglFramebufferRenderbufferCommand,
    cwcglFramebufferRenderbufferEXTCommand,
    cwcglFramebufferRenderbufferOESCommand,
    cwcglFramebufferSampleLocationsfvARBCommand,
    cwcglFramebufferSampleLocationsfvNVCommand,
    cwcglFramebufferSamplePositionsfvAMDCommand,
    cwcglFramebufferShadingRateEXTCommand,
    cwcglFramebufferTextureCommand,
    cwcglFramebufferTexture1DCommand,
    cwcglFramebufferTexture1DEXTCommand,
    cwcglFramebufferTexture2DCommand,
    cwcglFramebufferTexture2DEXTCommand,
    cwcglFramebufferTexture2DDownsampleIMGCommand,
    cwcglFramebufferTexture2DMultisampleEXTCommand,
    cwcglFramebufferTexture2DMultisampleIMGCommand,
    cwcglFramebufferTexture2DOESCommand,
    cwcglFramebufferTexture3DCommand,
    cwcglFramebufferTexture3DEXTCommand,
    cwcglFramebufferTexture3DOESCommand,
    cwcglFramebufferTextureARBCommand,
    cwcglFramebufferTextureEXTCommand,
    cwcglFramebufferTextureFaceARBCommand,
    cwcglFramebufferTextureFaceEXTCommand,
    cwcglFramebufferTextureLayerCommand,
    cwcglFramebufferTextureLayerARBCommand,
    cwcglFramebufferTextureLayerEXTCommand,
    cwcglFramebufferTextureLayerDownsampleIMGCommand,
    cwcglFramebufferTextureMultisampleMultiviewOVRCommand,
    cwcglFramebufferTextureMultiviewOVRCommand,
    cwcglFramebufferTextureOESCommand,
    cwcglFreeObjectBufferATICommand,
    cwcglFrontFaceCommand,
    cwcglFrustumCommand,
    cwcglFrustumfCommand,
    cwcglFrustumfOESCommand,
    cwcglFrustumxCommand,
    cwcglFrustumxOESCommand,
    cwcglGenAsyncMarkersSGIXCommand,
    cwcglGenBuffersCommand,
    cwcglGenBuffersARBCommand,
    cwcglGenFencesAPPLECommand,
    cwcglGenFencesNVCommand,
    cwcglGenFragmentShadersATICommand,
    cwcglGenFramebuffersCommand,
    cwcglGenFramebuffersEXTCommand,
    cwcglGenFramebuffersOESCommand,
    cwcglGenListsCommand,
    cwcglGenNamesAMDCommand,
    cwcglGenOcclusionQueriesNVCommand,
    cwcglGenPathsNVCommand,
    cwcglGenPerfMonitorsAMDCommand,
    cwcglGenProgramPipelinesCommand,
    cwcglGenProgramPipelinesEXTCommand,
    cwcglGenProgramsARBCommand,
    cwcglGenProgramsNVCommand,
    cwcglGenQueriesCommand,
    cwcglGenQueriesARBCommand,
    cwcglGenQueriesEXTCommand,
    cwcglGenQueryResourceTagNVCommand,
    cwcglGenRenderbuffersCommand,
    cwcglGenRenderbuffersEXTCommand,
    cwcglGenRenderbuffersOESCommand,
    cwcglGenSamplersCommand,
    cwcglGenSemaphoresEXTCommand,
    cwcglGenSymbolsEXTCommand,
    cwcglGenTexturesCommand,
    cwcglGenTexturesEXTCommand,
    cwcglGenTransformFeedbacksCommand,
    cwcglGenTransformFeedbacksNVCommand,
    cwcglGenVertexArraysCommand,
    cwcglGenVertexArraysAPPLECommand,
    cwcglGenVertexArraysOESCommand,
    cwcglGenVertexShadersEXTCommand,
    cwcglGenerateMipmapCommand,
    cwcglGenerateMipmapEXTCommand,
    cwcglGenerateMipmapOESCommand,
    cwcglGenerateMultiTexMipmapEXTCommand,
    cwcglGenerateTextureMipmapCommand,
    cwcglGenerateTextureMipmapEXTCommand,
    cwcglGetActiveAtomicCounterBufferivCommand,
    cwcglGetActiveAttribCommand,
    cwcglGetActiveAttribARBCommand,
    cwcglGetActiveSubroutineNameCommand,
    cwcglGetActiveSubroutineUniformNameCommand,
    cwcglGetActiveSubroutineUniformivCommand,
    cwcglGetActiveUniformCommand,
    cwcglGetActiveUniformARBCommand,
    cwcglGetActiveUniformBlockNameCommand,
    cwcglGetActiveUniformBlockivCommand,
    cwcglGetActiveUniformNameCommand,
    cwcglGetActiveUniformsivCommand,
    cwcglGetActiveVaryingNVCommand,
    cwcglGetArrayObjectfvATICommand,
    cwcglGetArrayObjectivATICommand,
    cwcglGetAttachedObjectsARBCommand,
    cwcglGetAttachedShadersCommand,
    cwcglGetAttribLocationCommand,
    cwcglGetAttribLocationARBCommand,
    cwcglGetBooleanIndexedvEXTCommand,
    cwcglGetBooleani_vCommand,
    cwcglGetBooleanvCommand,
    cwcglGetBufferParameteri64vCommand,
    cwcglGetBufferParameterivCommand,
    cwcglGetBufferParameterivARBCommand,
    cwcglGetBufferParameterui64vNVCommand,
    cwcglGetBufferPointervCommand,
    cwcglGetBufferPointervARBCommand,
    cwcglGetBufferPointervOESCommand,
    cwcglGetBufferSubDataCommand,
    cwcglGetBufferSubDataARBCommand,
    cwcglGetClipPlaneCommand,
    cwcglGetClipPlanefCommand,
    cwcglGetClipPlanefOESCommand,
    cwcglGetClipPlanexCommand,
    cwcglGetClipPlanexOESCommand,
    cwcglGetColorTableCommand,
    cwcglGetColorTableEXTCommand,
    cwcglGetColorTableParameterfvCommand,
    cwcglGetColorTableParameterfvEXTCommand,
    cwcglGetColorTableParameterfvSGICommand,
    cwcglGetColorTableParameterivCommand,
    cwcglGetColorTableParameterivEXTCommand,
    cwcglGetColorTableParameterivSGICommand,
    cwcglGetColorTableSGICommand,
    cwcglGetCombinerInputParameterfvNVCommand,
    cwcglGetCombinerInputParameterivNVCommand,
    cwcglGetCombinerOutputParameterfvNVCommand,
    cwcglGetCombinerOutputParameterivNVCommand,
    cwcglGetCombinerStageParameterfvNVCommand,
    cwcglGetCommandHeaderNVCommand,
    cwcglGetCompressedMultiTexImageEXTCommand,
    cwcglGetCompressedTexImageCommand,
    cwcglGetCompressedTexImageARBCommand,
    cwcglGetCompressedTextureImageCommand,
    cwcglGetCompressedTextureImageEXTCommand,
    cwcglGetCompressedTextureSubImageCommand,
    cwcglGetConvolutionFilterCommand,
    cwcglGetConvolutionFilterEXTCommand,
    cwcglGetConvolutionParameterfvCommand,
    cwcglGetConvolutionParameterfvEXTCommand,
    cwcglGetConvolutionParameterivCommand,
    cwcglGetConvolutionParameterivEXTCommand,
    cwcglGetConvolutionParameterxvOESCommand,
    cwcglGetCoverageModulationTableNVCommand,
    cwcglGetDebugMessageLogCommand,
    cwcglGetDebugMessageLogAMDCommand,
    cwcglGetDebugMessageLogARBCommand,
    cwcglGetDebugMessageLogKHRCommand,
    cwcglGetDetailTexFuncSGISCommand,
    cwcglGetDoubleIndexedvEXTCommand,
    cwcglGetDoublei_vCommand,
    cwcglGetDoublei_vEXTCommand,
    cwcglGetDoublevCommand,
    cwcglGetDriverControlStringQCOMCommand,
    cwcglGetDriverControlsQCOMCommand,
    cwcglGetErrorCommand,
    cwcglGetFenceivNVCommand,
    cwcglGetFinalCombinerInputParameterfvNVCommand,
    cwcglGetFinalCombinerInputParameterivNVCommand,
    cwcglGetFirstPerfQueryIdINTELCommand,
    cwcglGetFixedvCommand,
    cwcglGetFixedvOESCommand,
    cwcglGetFloatIndexedvEXTCommand,
    cwcglGetFloati_vCommand,
    cwcglGetFloati_vEXTCommand,
    cwcglGetFloati_vNVCommand,
    cwcglGetFloati_vOESCommand,
    cwcglGetFloatvCommand,
    cwcglGetFogFuncSGISCommand,
    cwcglGetFragDataIndexCommand,
    cwcglGetFragDataIndexEXTCommand,
    cwcglGetFragDataLocationCommand,
    cwcglGetFragDataLocationEXTCommand,
    cwcglGetFragmentLightfvSGIXCommand,
    cwcglGetFragmentLightivSGIXCommand,
    cwcglGetFragmentMaterialfvSGIXCommand,
    cwcglGetFragmentMaterialivSGIXCommand,
    cwcglGetFragmentShadingRatesEXTCommand,
    cwcglGetFramebufferAttachmentParameterivCommand,
    cwcglGetFramebufferAttachmentParameterivEXTCommand,
    cwcglGetFramebufferAttachmentParameterivOESCommand,
    cwcglGetFramebufferParameterfvAMDCommand,
    cwcglGetFramebufferParameterivCommand,
    cwcglGetFramebufferParameterivEXTCommand,
    cwcglGetFramebufferPixelLocalStorageSizeEXTCommand,
    cwcglGetGraphicsResetStatusCommand,
    cwcglGetGraphicsResetStatusARBCommand,
    cwcglGetGraphicsResetStatusEXTCommand,
    cwcglGetGraphicsResetStatusKHRCommand,
    cwcglGetHandleARBCommand,
    cwcglGetHistogramCommand,
    cwcglGetHistogramEXTCommand,
    cwcglGetHistogramParameterfvCommand,
    cwcglGetHistogramParameterfvEXTCommand,
    cwcglGetHistogramParameterivCommand,
    cwcglGetHistogramParameterivEXTCommand,
    cwcglGetHistogramParameterxvOESCommand,
    cwcglGetImageHandleARBCommand,
    cwcglGetImageHandleNVCommand,
    cwcglGetImageTransformParameterfvHPCommand,
    cwcglGetImageTransformParameterivHPCommand,
    cwcglGetInfoLogARBCommand,
    cwcglGetInstrumentsSGIXCommand,
    cwcglGetInteger64i_vCommand,
    cwcglGetInteger64vCommand,
    cwcglGetInteger64vAPPLECommand,
    cwcglGetInteger64vEXTCommand,
    cwcglGetIntegerIndexedvEXTCommand,
    cwcglGetIntegeri_vCommand,
    cwcglGetIntegeri_vEXTCommand,
    cwcglGetIntegerui64i_vNVCommand,
    cwcglGetIntegerui64vNVCommand,
    cwcglGetIntegervCommand,
    cwcglGetInternalformatSampleivNVCommand,
    cwcglGetInternalformati64vCommand,
    cwcglGetInternalformativCommand,
    cwcglGetInvariantBooleanvEXTCommand,
    cwcglGetInvariantFloatvEXTCommand,
    cwcglGetInvariantIntegervEXTCommand,
    cwcglGetLightfvCommand,
    cwcglGetLightivCommand,
    cwcglGetLightxOESCommand,
    cwcglGetLightxvCommand,
    cwcglGetLightxvOESCommand,
    cwcglGetListParameterfvSGIXCommand,
    cwcglGetListParameterivSGIXCommand,
    cwcglGetLocalConstantBooleanvEXTCommand,
    cwcglGetLocalConstantFloatvEXTCommand,
    cwcglGetLocalConstantIntegervEXTCommand,
    cwcglGetMapAttribParameterfvNVCommand,
    cwcglGetMapAttribParameterivNVCommand,
    cwcglGetMapControlPointsNVCommand,
    cwcglGetMapParameterfvNVCommand,
    cwcglGetMapParameterivNVCommand,
    cwcglGetMapdvCommand,
    cwcglGetMapfvCommand,
    cwcglGetMapivCommand,
    cwcglGetMapxvOESCommand,
    cwcglGetMaterialfvCommand,
    cwcglGetMaterialivCommand,
    cwcglGetMaterialxOESCommand,
    cwcglGetMaterialxvCommand,
    cwcglGetMaterialxvOESCommand,
    cwcglGetMemoryObjectDetachedResourcesuivNVCommand,
    cwcglGetMemoryObjectParameterivEXTCommand,
    cwcglGetMinmaxCommand,
    cwcglGetMinmaxEXTCommand,
    cwcglGetMinmaxParameterfvCommand,
    cwcglGetMinmaxParameterfvEXTCommand,
    cwcglGetMinmaxParameterivCommand,
    cwcglGetMinmaxParameterivEXTCommand,
    cwcglGetMultiTexEnvfvEXTCommand,
    cwcglGetMultiTexEnvivEXTCommand,
    cwcglGetMultiTexGendvEXTCommand,
    cwcglGetMultiTexGenfvEXTCommand,
    cwcglGetMultiTexGenivEXTCommand,
    cwcglGetMultiTexImageEXTCommand,
    cwcglGetMultiTexLevelParameterfvEXTCommand,
    cwcglGetMultiTexLevelParameterivEXTCommand,
    cwcglGetMultiTexParameterIivEXTCommand,
    cwcglGetMultiTexParameterIuivEXTCommand,
    cwcglGetMultiTexParameterfvEXTCommand,
    cwcglGetMultiTexParameterivEXTCommand,
    cwcglGetMultisamplefvCommand,
    cwcglGetMultisamplefvNVCommand,
    cwcglGetNamedBufferParameteri64vCommand,
    cwcglGetNamedBufferParameterivCommand,
    cwcglGetNamedBufferParameterivEXTCommand,
    cwcglGetNamedBufferParameterui64vNVCommand,
    cwcglGetNamedBufferPointervCommand,
    cwcglGetNamedBufferPointervEXTCommand,
    cwcglGetNamedBufferSubDataCommand,
    cwcglGetNamedBufferSubDataEXTCommand,
    cwcglGetNamedFramebufferParameterfvAMDCommand,
    cwcglGetNamedFramebufferAttachmentParameterivCommand,
    cwcglGetNamedFramebufferAttachmentParameterivEXTCommand,
    cwcglGetNamedFramebufferParameterivCommand,
    cwcglGetNamedFramebufferParameterivEXTCommand,
    cwcglGetNamedProgramLocalParameterIivEXTCommand,
    cwcglGetNamedProgramLocalParameterIuivEXTCommand,
    cwcglGetNamedProgramLocalParameterdvEXTCommand,
    cwcglGetNamedProgramLocalParameterfvEXTCommand,
    cwcglGetNamedProgramStringEXTCommand,
    cwcglGetNamedProgramivEXTCommand,
    cwcglGetNamedRenderbufferParameterivCommand,
    cwcglGetNamedRenderbufferParameterivEXTCommand,
    cwcglGetNamedStringARBCommand,
    cwcglGetNamedStringivARBCommand,
    cwcglGetNextPerfQueryIdINTELCommand,
    cwcglGetObjectBufferfvATICommand,
    cwcglGetObjectBufferivATICommand,
    cwcglGetObjectLabelCommand,
    cwcglGetObjectLabelEXTCommand,
    cwcglGetObjectLabelKHRCommand,
    cwcglGetObjectParameterfvARBCommand,
    cwcglGetObjectParameterivAPPLECommand,
    cwcglGetObjectParameterivARBCommand,
    cwcglGetObjectPtrLabelCommand,
    cwcglGetObjectPtrLabelKHRCommand,
    cwcglGetOcclusionQueryivNVCommand,
    cwcglGetOcclusionQueryuivNVCommand,
    cwcglGetPathColorGenfvNVCommand,
    cwcglGetPathColorGenivNVCommand,
    cwcglGetPathCommandsNVCommand,
    cwcglGetPathCoordsNVCommand,
    cwcglGetPathDashArrayNVCommand,
    cwcglGetPathLengthNVCommand,
    cwcglGetPathMetricRangeNVCommand,
    cwcglGetPathMetricsNVCommand,
    cwcglGetPathParameterfvNVCommand,
    cwcglGetPathParameterivNVCommand,
    cwcglGetPathSpacingNVCommand,
    cwcglGetPathTexGenfvNVCommand,
    cwcglGetPathTexGenivNVCommand,
    cwcglGetPerfCounterInfoINTELCommand,
    cwcglGetPerfMonitorCounterDataAMDCommand,
    cwcglGetPerfMonitorCounterInfoAMDCommand,
    cwcglGetPerfMonitorCounterStringAMDCommand,
    cwcglGetPerfMonitorCountersAMDCommand,
    cwcglGetPerfMonitorGroupStringAMDCommand,
    cwcglGetPerfMonitorGroupsAMDCommand,
    cwcglGetPerfQueryDataINTELCommand,
    cwcglGetPerfQueryIdByNameINTELCommand,
    cwcglGetPerfQueryInfoINTELCommand,
    cwcglGetPixelMapfvCommand,
    cwcglGetPixelMapuivCommand,
    cwcglGetPixelMapusvCommand,
    cwcglGetPixelMapxvCommand,
    cwcglGetPixelTexGenParameterfvSGISCommand,
    cwcglGetPixelTexGenParameterivSGISCommand,
    cwcglGetPixelTransformParameterfvEXTCommand,
    cwcglGetPixelTransformParameterivEXTCommand,
    cwcglGetPointerIndexedvEXTCommand,
    cwcglGetPointeri_vEXTCommand,
    cwcglGetPointervCommand,
    cwcglGetPointervEXTCommand,
    cwcglGetPointervKHRCommand,
    cwcglGetPolygonStippleCommand,
    cwcglGetProgramBinaryCommand,
    cwcglGetProgramBinaryOESCommand,
    cwcglGetProgramEnvParameterIivNVCommand,
    cwcglGetProgramEnvParameterIuivNVCommand,
    cwcglGetProgramEnvParameterdvARBCommand,
    cwcglGetProgramEnvParameterfvARBCommand,
    cwcglGetProgramInfoLogCommand,
    cwcglGetProgramInterfaceivCommand,
    cwcglGetProgramLocalParameterIivNVCommand,
    cwcglGetProgramLocalParameterIuivNVCommand,
    cwcglGetProgramLocalParameterdvARBCommand,
    cwcglGetProgramLocalParameterfvARBCommand,
    cwcglGetProgramNamedParameterdvNVCommand,
    cwcglGetProgramNamedParameterfvNVCommand,
    cwcglGetProgramParameterdvNVCommand,
    cwcglGetProgramParameterfvNVCommand,
    cwcglGetProgramPipelineInfoLogCommand,
    cwcglGetProgramPipelineInfoLogEXTCommand,
    cwcglGetProgramPipelineivCommand,
    cwcglGetProgramPipelineivEXTCommand,
    cwcglGetProgramResourceIndexCommand,
    cwcglGetProgramResourceLocationCommand,
    cwcglGetProgramResourceLocationIndexCommand,
    cwcglGetProgramResourceLocationIndexEXTCommand,
    cwcglGetProgramResourceNameCommand,
    cwcglGetProgramResourcefvNVCommand,
    cwcglGetProgramResourceivCommand,
    cwcglGetProgramStageivCommand,
    cwcglGetProgramStringARBCommand,
    cwcglGetProgramStringNVCommand,
    cwcglGetProgramSubroutineParameteruivNVCommand,
    cwcglGetProgramivCommand,
    cwcglGetProgramivARBCommand,
    cwcglGetProgramivNVCommand,
    cwcglGetQueryBufferObjecti64vCommand,
    cwcglGetQueryBufferObjectivCommand,
    cwcglGetQueryBufferObjectui64vCommand,
    cwcglGetQueryBufferObjectuivCommand,
    cwcglGetQueryIndexedivCommand,
    cwcglGetQueryObjecti64vCommand,
    cwcglGetQueryObjecti64vEXTCommand,
    cwcglGetQueryObjectivCommand,
    cwcglGetQueryObjectivARBCommand,
    cwcglGetQueryObjectivEXTCommand,
    cwcglGetQueryObjectui64vCommand,
    cwcglGetQueryObjectui64vEXTCommand,
    cwcglGetQueryObjectuivCommand,
    cwcglGetQueryObjectuivARBCommand,
    cwcglGetQueryObjectuivEXTCommand,
    cwcglGetQueryivCommand,
    cwcglGetQueryivARBCommand,
    cwcglGetQueryivEXTCommand,
    cwcglGetRenderbufferParameterivCommand,
    cwcglGetRenderbufferParameterivEXTCommand,
    cwcglGetRenderbufferParameterivOESCommand,
    cwcglGetSamplerParameterIivCommand,
    cwcglGetSamplerParameterIivEXTCommand,
    cwcglGetSamplerParameterIivOESCommand,
    cwcglGetSamplerParameterIuivCommand,
    cwcglGetSamplerParameterIuivEXTCommand,
    cwcglGetSamplerParameterIuivOESCommand,
    cwcglGetSamplerParameterfvCommand,
    cwcglGetSamplerParameterivCommand,
    cwcglGetSemaphoreParameterivNVCommand,
    cwcglGetSemaphoreParameterui64vEXTCommand,
    cwcglGetSeparableFilterCommand,
    cwcglGetSeparableFilterEXTCommand,
    cwcglGetShaderInfoLogCommand,
    cwcglGetShaderPrecisionFormatCommand,
    cwcglGetShaderSourceCommand,
    cwcglGetShaderSourceARBCommand,
    cwcglGetShaderivCommand,
    cwcglGetShadingRateImagePaletteNVCommand,
    cwcglGetShadingRateSampleLocationivNVCommand,
    cwcglGetSharpenTexFuncSGISCommand,
    cwcglGetStageIndexNVCommand,
    cwcCommand,
    cwcglGetStringCommand,
    cwcglGetStringiCommand,
    cwcglGetSubroutineIndexCommand,
    cwcglGetSubroutineUniformLocationCommand,
    cwcglGetSyncivCommand,
    cwcglGetSyncivAPPLECommand,
    cwcglGetTexBumpParameterfvATICommand,
    cwcglGetTexBumpParameterivATICommand,
    cwcglGetTexEnvfvCommand,
    cwcglGetTexEnvivCommand,
    cwcglGetTexEnvxvCommand,
    cwcglGetTexEnvxvOESCommand,
    cwcglGetTexFilterFuncSGISCommand,
    cwcglGetTexGendvCommand,
    cwcglGetTexGenfvCommand,
    cwcglGetTexGenfvOESCommand,
    cwcglGetTexGenivCommand,
    cwcglGetTexGenivOESCommand,
    cwcglGetTexGenxvOESCommand,
    cwcglGetTexImageCommand,
    cwcglGetTexLevelParameterfvCommand,
    cwcglGetTexLevelParameterivCommand,
    cwcglGetTexLevelParameterxvOESCommand,
    cwcglGetTexParameterIivCommand,
    cwcglGetTexParameterIivEXTCommand,
    cwcglGetTexParameterIivOESCommand,
    cwcglGetTexParameterIuivCommand,
    cwcglGetTexParameterIuivEXTCommand,
    cwcglGetTexParameterIuivOESCommand,
    cwcglGetTexParameterPointervAPPLECommand,
    cwcglGetTexParameterfvCommand,
    cwcglGetTexParameterivCommand,
    cwcglGetTexParameterxvCommand,
    cwcglGetTexParameterxvOESCommand,
    cwcglGetTextureHandleARBCommand,
    cwcglGetTextureHandleIMGCommand,
    cwcglGetTextureHandleNVCommand,
    cwcglGetTextureImageCommand,
    cwcglGetTextureImageEXTCommand,
    cwcglGetTextureLevelParameterfvCommand,
    cwcglGetTextureLevelParameterfvEXTCommand,
    cwcglGetTextureLevelParameterivCommand,
    cwcglGetTextureLevelParameterivEXTCommand,
    cwcglGetTextureParameterIivCommand,
    cwcglGetTextureParameterIivEXTCommand,
    cwcglGetTextureParameterIuivCommand,
    cwcglGetTextureParameterIuivEXTCommand,
    cwcglGetTextureParameterfvCommand,
    cwcglGetTextureParameterfvEXTCommand,
    cwcglGetTextureParameterivCommand,
    cwcglGetTextureParameterivEXTCommand,
    cwcglGetTextureSamplerHandleARBCommand,
    cwcglGetTextureSamplerHandleIMGCommand,
    cwcglGetTextureSamplerHandleNVCommand,
    cwcglGetTextureSubImageCommand,
    cwcglGetTrackMatrixivNVCommand,
    cwcglGetTransformFeedbackVaryingCommand,
    cwcglGetTransformFeedbackVaryingEXTCommand,
    cwcglGetTransformFeedbackVaryingNVCommand,
    cwcglGetTransformFeedbacki64_vCommand,
    cwcglGetTransformFeedbacki_vCommand,
    cwcglGetTransformFeedbackivCommand,
    cwcglGetTranslatedShaderSourceANGLECommand,
    cwcglGetUniformBlockIndexCommand,
    cwcglGetUniformBufferSizeEXTCommand,
    cwcglGetUniformIndicesCommand,
    cwcglGetUniformLocationCommand,
    cwcglGetUniformLocationARBCommand,
    cwcglGetUniformOffsetEXTCommand,
    cwcglGetUniformSubroutineuivCommand,
    cwcglGetUniformdvCommand,
    cwcglGetUniformfvCommand,
    cwcglGetUniformfvARBCommand,
    cwcglGetUniformi64vARBCommand,
    cwcglGetUniformi64vNVCommand,
    cwcglGetUniformivCommand,
    cwcglGetUniformivARBCommand,
    cwcglGetUniformui64vARBCommand,
    cwcglGetUniformui64vNVCommand,
    cwcglGetUniformuivCommand,
    cwcglGetUniformuivEXTCommand,
    cwcglGetUnsignedBytevEXTCommand,
    cwcglGetUnsignedBytei_vEXTCommand,
    cwcglGetVariantArrayObjectfvATICommand,
    cwcglGetVariantArrayObjectivATICommand,
    cwcglGetVariantBooleanvEXTCommand,
    cwcglGetVariantFloatvEXTCommand,
    cwcglGetVariantIntegervEXTCommand,
    cwcglGetVariantPointervEXTCommand,
    cwcglGetVaryingLocationNVCommand,
    cwcglGetVertexArrayIndexed64ivCommand,
    cwcglGetVertexArrayIndexedivCommand,
    cwcglGetVertexArrayIntegeri_vEXTCommand,
    cwcglGetVertexArrayIntegervEXTCommand,
    cwcglGetVertexArrayPointeri_vEXTCommand,
    cwcglGetVertexArrayPointervEXTCommand,
    cwcglGetVertexArrayivCommand,
    cwcglGetVertexAttribArrayObjectfvATICommand,
    cwcglGetVertexAttribArrayObjectivATICommand,
    cwcglGetVertexAttribIivCommand,
    cwcglGetVertexAttribIivEXTCommand,
    cwcglGetVertexAttribIuivCommand,
    cwcglGetVertexAttribIuivEXTCommand,
    cwcglGetVertexAttribLdvCommand,
    cwcglGetVertexAttribLdvEXTCommand,
    cwcglGetVertexAttribLi64vNVCommand,
    cwcglGetVertexAttribLui64vARBCommand,
    cwcglGetVertexAttribLui64vNVCommand,
    cwcglGetVertexAttribPointervCommand,
    cwcglGetVertexAttribPointervARBCommand,
    cwcglGetVertexAttribPointervNVCommand,
    cwcglGetVertexAttribdvCommand,
    cwcglGetVertexAttribdvARBCommand,
    cwcglGetVertexAttribdvNVCommand,
    cwcglGetVertexAttribfvCommand,
    cwcglGetVertexAttribfvARBCommand,
    cwcglGetVertexAttribfvNVCommand,
    cwcglGetVertexAttribivCommand,
    cwcglGetVertexAttribivARBCommand,
    cwcglGetVertexAttribivNVCommand,
    cwcglGetVideoCaptureStreamdvNVCommand,
    cwcglGetVideoCaptureStreamfvNVCommand,
    cwcglGetVideoCaptureStreamivNVCommand,
    cwcglGetVideoCaptureivNVCommand,
    cwcglGetVideoi64vNVCommand,
    cwcglGetVideoivNVCommand,
    cwcglGetVideoui64vNVCommand,
    cwcglGetVideouivNVCommand,
    cwcglGetnColorTableCommand,
    cwcglGetnColorTableARBCommand,
    cwcglGetnCompressedTexImageCommand,
    cwcglGetnCompressedTexImageARBCommand,
    cwcglGetnConvolutionFilterCommand,
    cwcglGetnConvolutionFilterARBCommand,
    cwcglGetnHistogramCommand,
    cwcglGetnHistogramARBCommand,
    cwcglGetnMapdvCommand,
    cwcglGetnMapdvARBCommand,
    cwcglGetnMapfvCommand,
    cwcglGetnMapfvARBCommand,
    cwcglGetnMapivCommand,
    cwcglGetnMapivARBCommand,
    cwcglGetnMinmaxCommand,
    cwcglGetnMinmaxARBCommand,
    cwcglGetnPixelMapfvCommand,
    cwcglGetnPixelMapfvARBCommand,
    cwcglGetnPixelMapuivCommand,
    cwcglGetnPixelMapuivARBCommand,
    cwcglGetnPixelMapusvCommand,
    cwcglGetnPixelMapusvARBCommand,
    cwcglGetnPolygonStippleCommand,
    cwcglGetnPolygonStippleARBCommand,
    cwcglGetnSeparableFilterCommand,
    cwcglGetnSeparableFilterARBCommand,
    cwcglGetnTexImageCommand,
    cwcglGetnTexImageARBCommand,
    cwcglGetnUniformdvCommand,
    cwcglGetnUniformdvARBCommand,
    cwcglGetnUniformfvCommand,
    cwcglGetnUniformfvARBCommand,
    cwcglGetnUniformfvEXTCommand,
    cwcglGetnUniformfvKHRCommand,
    cwcglGetnUniformi64vARBCommand,
    cwcglGetnUniformivCommand,
    cwcglGetnUniformivARBCommand,
    cwcglGetnUniformivEXTCommand,
    cwcglGetnUniformivKHRCommand,
    cwcglGetnUniformui64vARBCommand,
    cwcglGetnUniformuivCommand,
    cwcglGetnUniformuivARBCommand,
    cwcglGetnUniformuivKHRCommand,
    cwcglGlobalAlphaFactorbSUNCommand,
    cwcglGlobalAlphaFactordSUNCommand,
    cwcglGlobalAlphaFactorfSUNCommand,
    cwcglGlobalAlphaFactoriSUNCommand,
    cwcglGlobalAlphaFactorsSUNCommand,
    cwcglGlobalAlphaFactorubSUNCommand,
    cwcglGlobalAlphaFactoruiSUNCommand,
    cwcglGlobalAlphaFactorusSUNCommand,
    cwcglHintCommand,
    cwcglHintPGICommand,
    cwcglHistogramCommand,
    cwcglHistogramEXTCommand,
    cwcglIglooInterfaceSGIXCommand,
    cwcglImageTransformParameterfHPCommand,
    cwcglImageTransformParameterfvHPCommand,
    cwcglImageTransformParameteriHPCommand,
    cwcglImageTransformParameterivHPCommand,
    cwcglImportMemoryFdEXTCommand,
    cwcglImportMemoryWin32HandleEXTCommand,
    cwcglImportMemoryWin32NameEXTCommand,
    cwcglImportSemaphoreFdEXTCommand,
    cwcglImportSemaphoreWin32HandleEXTCommand,
    cwcglImportSemaphoreWin32NameEXTCommand,
    cwcglImportSyncEXTCommand,
    cwcglIndexFormatNVCommand,
    cwcglIndexFuncEXTCommand,
    cwcglIndexMaskCommand,
    cwcglIndexMaterialEXTCommand,
    cwcglIndexPointerCommand,
    cwcglIndexPointerEXTCommand,
    cwcglIndexPointerListIBMCommand,
    cwcglIndexdCommand,
    cwcglIndexdvCommand,
    cwcglIndexfCommand,
    cwcglIndexfvCommand,
    cwcglIndexiCommand,
    cwcglIndexivCommand,
    cwcglIndexsCommand,
    cwcglIndexsvCommand,
    cwcglIndexubCommand,
    cwcglIndexubvCommand,
    cwcglIndexxOESCommand,
    cwcglIndexxvOESCommand,
    cwcglInitNamesCommand,
    cwcglInsertComponentEXTCommand,
    cwcglInsertEventMarkerEXTCommand,
    cwcglInstrumentsBufferSGIXCommand,
    cwcglInterleavedArraysCommand,
    cwcglInterpolatePathsNVCommand,
    cwcglInvalidateBufferDataCommand,
    cwcglInvalidateBufferSubDataCommand,
    cwcglInvalidateFramebufferCommand,
    cwcglInvalidateNamedFramebufferDataCommand,
    cwcglInvalidateNamedFramebufferSubDataCommand,
    cwcglInvalidateSubFramebufferCommand,
    cwcglInvalidateTexImageCommand,
    cwcglInvalidateTexSubImageCommand,
    cwcglIsAsyncMarkerSGIXCommand,
    cwcglIsBufferCommand,
    cwcglIsBufferARBCommand,
    cwcglIsBufferResidentNVCommand,
    cwcglIsCommandListNVCommand,
    cwcglIsEnabledCommand,
    cwcglIsEnabledIndexedEXTCommand,
    cwcglIsEnablediCommand,
    cwcglIsEnablediEXTCommand,
    cwcglIsEnablediNVCommand,
    cwcglIsEnablediOESCommand,
    cwcglIsFenceAPPLECommand,
    cwcglIsFenceNVCommand,
    cwcglIsFramebufferCommand,
    cwcglIsFramebufferEXTCommand,
    cwcglIsFramebufferOESCommand,
    cwcglIsImageHandleResidentARBCommand,
    cwcglIsImageHandleResidentNVCommand,
    cwcglIsListCommand,
    cwcglIsMemoryObjectEXTCommand,
    cwcglIsNameAMDCommand,
    cwcglIsNamedBufferResidentNVCommand,
    cwcglIsNamedStringARBCommand,
    cwcglIsObjectBufferATICommand,
    cwcglIsOcclusionQueryNVCommand,
    cwcglIsPathNVCommand,
    cwcglIsPointInFillPathNVCommand,
    cwcglIsPointInStrokePathNVCommand,
    cwcglIsProgramCommand,
    cwcglIsProgramARBCommand,
    cwcglIsProgramNVCommand,
    cwcglIsProgramPipelineCommand,
    cwcglIsProgramPipelineEXTCommand,
    cwcglIsQueryCommand,
    cwcglIsQueryARBCommand,
    cwcglIsQueryEXTCommand,
    cwcglIsRenderbufferCommand,
    cwcglIsRenderbufferEXTCommand,
    cwcglIsRenderbufferOESCommand,
    cwcglIsSemaphoreEXTCommand,
    cwcglIsSamplerCommand,
    cwcglIsShaderCommand,
    cwcglIsStateNVCommand,
    cwcglIsSyncCommand,
    cwcglIsSyncAPPLECommand,
    cwcglIsTextureCommand,
    cwcglIsTextureEXTCommand,
    cwcglIsTextureHandleResidentARBCommand,
    cwcglIsTextureHandleResidentNVCommand,
    cwcglIsTransformFeedbackCommand,
    cwcglIsTransformFeedbackNVCommand,
    cwcglIsVariantEnabledEXTCommand,
    cwcglIsVertexArrayCommand,
    cwcglIsVertexArrayAPPLECommand,
    cwcglIsVertexArrayOESCommand,
    cwcglIsVertexAttribEnabledAPPLECommand,
    cwcglLGPUCopyImageSubDataNVXCommand,
    cwcglLGPUInterlockNVXCommand,
    cwcglLGPUNamedBufferSubDataNVXCommand,
    cwcglLabelObjectEXTCommand,
    cwcglLightEnviSGIXCommand,
    cwcglLightModelfCommand,
    cwcglLightModelfvCommand,
    cwcglLightModeliCommand,
    cwcglLightModelivCommand,
    cwcglLightModelxCommand,
    cwcglLightModelxOESCommand,
    cwcglLightModelxvCommand,
    cwcglLightModelxvOESCommand,
    cwcglLightfCommand,
    cwcglLightfvCommand,
    cwcglLightiCommand,
    cwcglLightivCommand,
    cwcglLightxCommand,
    cwcglLightxOESCommand,
    cwcglLightxvCommand,
    cwcglLightxvOESCommand,
    cwcglLineStippleCommand,
    cwcglLineWidthCommand,
    cwcglLineWidthxCommand,
    cwcglLineWidthxOESCommand,
    cwcglLinkProgramCommand,
    cwcglLinkProgramARBCommand,
    cwcglListBaseCommand,
    cwcglListDrawCommandsStatesClientNVCommand,
    cwcglListParameterfSGIXCommand,
    cwcglListParameterfvSGIXCommand,
    cwcglListParameteriSGIXCommand,
    cwcglListParameterivSGIXCommand,
    cwcglLoadIdentityCommand,
    cwcglLoadIdentityDeformationMapSGIXCommand,
    cwcglLoadMatrixdCommand,
    cwcglLoadMatrixfCommand,
    cwcglLoadMatrixxCommand,
    cwcglLoadMatrixxOESCommand,
    cwcglLoadNameCommand,
    cwcglLoadPaletteFromModelViewMatrixOESCommand,
    cwcglLoadProgramNVCommand,
    cwcglLoadTransposeMatrixdCommand,
    cwcglLoadTransposeMatrixdARBCommand,
    cwcglLoadTransposeMatrixfCommand,
    cwcglLoadTransposeMatrixfARBCommand,
    cwcglLoadTransposeMatrixxOESCommand,
    cwcglLockArraysEXTCommand,
    cwcglLogicOpCommand,
    cwcglMakeBufferNonResidentNVCommand,
    cwcglMakeBufferResidentNVCommand,
    cwcglMakeImageHandleNonResidentARBCommand,
    cwcglMakeImageHandleNonResidentNVCommand,
    cwcglMakeImageHandleResidentARBCommand,
    cwcglMakeImageHandleResidentNVCommand,
    cwcglMakeNamedBufferNonResidentNVCommand,
    cwcglMakeNamedBufferResidentNVCommand,
    cwcglMakeTextureHandleNonResidentARBCommand,
    cwcglMakeTextureHandleNonResidentNVCommand,
    cwcglMakeTextureHandleResidentARBCommand,
    cwcglMakeTextureHandleResidentNVCommand,
    cwcglMap1dCommand,
    cwcglMap1fCommand,
    cwcglMap1xOESCommand,
    cwcglMap2dCommand,
    cwcglMap2fCommand,
    cwcglMap2xOESCommand,
    cwcglMapBufferCommand,
    cwcglMapBufferARBCommand,
    cwcglMapBufferOESCommand,
    cwcglMapBufferRangeCommand,
    cwcglMapBufferRangeEXTCommand,
    cwcglMapControlPointsNVCommand,
    cwcglMapGrid1dCommand,
    cwcglMapGrid1fCommand,
    cwcglMapGrid1xOESCommand,
    cwcglMapGrid2dCommand,
    cwcglMapGrid2fCommand,
    cwcglMapGrid2xOESCommand,
    cwcglMapNamedBufferCommand,
    cwcglMapNamedBufferEXTCommand,
    cwcglMapNamedBufferRangeCommand,
    cwcglMapNamedBufferRangeEXTCommand,
    cwcglMapObjectBufferATICommand,
    cwcglMapParameterfvNVCommand,
    cwcglMapParameterivNVCommand,
    cwcglMapTexture2DINTELCommand,
    cwcglMapVertexAttrib1dAPPLECommand,
    cwcglMapVertexAttrib1fAPPLECommand,
    cwcglMapVertexAttrib2dAPPLECommand,
    cwcglMapVertexAttrib2fAPPLECommand,
    cwcglMaterialfCommand,
    cwcglMaterialfvCommand,
    cwcglMaterialiCommand,
    cwcglMaterialivCommand,
    cwcglMaterialxCommand,
    cwcglMaterialxOESCommand,
    cwcglMaterialxvCommand,
    cwcglMaterialxvOESCommand,
    cwcglMatrixFrustumEXTCommand,
    cwcglMatrixIndexPointerARBCommand,
    cwcglMatrixIndexPointerOESCommand,
    cwcglMatrixIndexubvARBCommand,
    cwcglMatrixIndexuivARBCommand,
    cwcglMatrixIndexusvARBCommand,
    cwcglMatrixLoad3x2fNVCommand,
    cwcglMatrixLoad3x3fNVCommand,
    cwcglMatrixLoadIdentityEXTCommand,
    cwcglMatrixLoadTranspose3x3fNVCommand,
    cwcglMatrixLoadTransposedEXTCommand,
    cwcglMatrixLoadTransposefEXTCommand,
    cwcglMatrixLoaddEXTCommand,
    cwcglMatrixLoadfEXTCommand,
    cwcglMatrixModeCommand,
    cwcglMatrixMult3x2fNVCommand,
    cwcglMatrixMult3x3fNVCommand,
    cwcglMatrixMultTranspose3x3fNVCommand,
    cwcglMatrixMultTransposedEXTCommand,
    cwcglMatrixMultTransposefEXTCommand,
    cwcglMatrixMultdEXTCommand,
    cwcglMatrixMultfEXTCommand,
    cwcglMatrixOrthoEXTCommand,
    cwcglMatrixPopEXTCommand,
    cwcglMatrixPushEXTCommand,
    cwcglMatrixRotatedEXTCommand,
    cwcglMatrixRotatefEXTCommand,
    cwcglMatrixScaledEXTCommand,
    cwcglMatrixScalefEXTCommand,
    cwcglMatrixTranslatedEXTCommand,
    cwcglMatrixTranslatefEXTCommand,
    cwcglMaxShaderCompilerThreadsKHRCommand,
    cwcglMaxShaderCompilerThreadsARBCommand,
    cwcglMemoryBarrierCommand,
    cwcglMemoryBarrierByRegionCommand,
    cwcglMemoryBarrierEXTCommand,
    cwcglMemoryObjectParameterivEXTCommand,
    cwcglMinSampleShadingCommand,
    cwcglMinSampleShadingARBCommand,
    cwcglMinSampleShadingOESCommand,
    cwcglMinmaxCommand,
    cwcglMinmaxEXTCommand,
    cwcglMultMatrixdCommand,
    cwcglMultMatrixfCommand,
    cwcglMultMatrixxCommand,
    cwcglMultMatrixxOESCommand,
    cwcglMultTransposeMatrixdCommand,
    cwcglMultTransposeMatrixdARBCommand,
    cwcglMultTransposeMatrixfCommand,
    cwcglMultTransposeMatrixfARBCommand,
    cwcglMultTransposeMatrixxOESCommand,
    cwcglMultiDrawArraysCommand,
    cwcglMultiDrawArraysEXTCommand,
    cwcglMultiDrawArraysIndirectCommand,
    cwcglMultiDrawArraysIndirectAMDCommand,
    cwcglMultiDrawArraysIndirectBindlessCountNVCommand,
    cwcglMultiDrawArraysIndirectBindlessNVCommand,
    cwcglMultiDrawArraysIndirectCountCommand,
    cwcglMultiDrawArraysIndirectCountARBCommand,
    cwcglMultiDrawArraysIndirectEXTCommand,
    cwcglMultiDrawElementArrayAPPLECommand,
    cwcglMultiDrawElementsCommand,
    cwcglMultiDrawElementsBaseVertexCommand,
    cwcglMultiDrawElementsBaseVertexEXTCommand,
    cwcglMultiDrawElementsEXTCommand,
    cwcglMultiDrawElementsIndirectCommand,
    cwcglMultiDrawElementsIndirectAMDCommand,
    cwcglMultiDrawElementsIndirectBindlessCountNVCommand,
    cwcglMultiDrawElementsIndirectBindlessNVCommand,
    cwcglMultiDrawElementsIndirectCountCommand,
    cwcglMultiDrawElementsIndirectCountARBCommand,
    cwcglMultiDrawElementsIndirectEXTCommand,
    cwcglMultiDrawMeshTasksIndirectNVCommand,
    cwcglMultiDrawMeshTasksIndirectCountNVCommand,
    cwcglMultiDrawRangeElementArrayAPPLECommand,
    cwcglMultiModeDrawArraysIBMCommand,
    cwcglMultiModeDrawElementsIBMCommand,
    cwcglMultiTexBufferEXTCommand,
    cwcglMultiTexCoord1bOESCommand,
    cwcglMultiTexCoord1bvOESCommand,
    cwcglMultiTexCoord1dCommand,
    cwcglMultiTexCoord1dARBCommand,
    cwcglMultiTexCoord1dvCommand,
    cwcglMultiTexCoord1dvARBCommand,
    cwcglMultiTexCoord1fCommand,
    cwcglMultiTexCoord1fARBCommand,
    cwcglMultiTexCoord1fvCommand,
    cwcglMultiTexCoord1fvARBCommand,
    cwcglMultiTexCoord1hNVCommand,
    cwcglMultiTexCoord1hvNVCommand,
    cwcglMultiTexCoord1iCommand,
    cwcglMultiTexCoord1iARBCommand,
    cwcglMultiTexCoord1ivCommand,
    cwcglMultiTexCoord1ivARBCommand,
    cwcglMultiTexCoord1sCommand,
    cwcglMultiTexCoord1sARBCommand,
    cwcglMultiTexCoord1svCommand,
    cwcglMultiTexCoord1svARBCommand,
    cwcglMultiTexCoord1xOESCommand,
    cwcglMultiTexCoord1xvOESCommand,
    cwcglMultiTexCoord2bOESCommand,
    cwcglMultiTexCoord2bvOESCommand,
    cwcglMultiTexCoord2dCommand,
    cwcglMultiTexCoord2dARBCommand,
    cwcglMultiTexCoord2dvCommand,
    cwcglMultiTexCoord2dvARBCommand,
    cwcglMultiTexCoord2fCommand,
    cwcglMultiTexCoord2fARBCommand,
    cwcglMultiTexCoord2fvCommand,
    cwcglMultiTexCoord2fvARBCommand,
    cwcglMultiTexCoord2hNVCommand,
    cwcglMultiTexCoord2hvNVCommand,
    cwcglMultiTexCoord2iCommand,
    cwcglMultiTexCoord2iARBCommand,
    cwcglMultiTexCoord2ivCommand,
    cwcglMultiTexCoord2ivARBCommand,
    cwcglMultiTexCoord2sCommand,
    cwcglMultiTexCoord2sARBCommand,
    cwcglMultiTexCoord2svCommand,
    cwcglMultiTexCoord2svARBCommand,
    cwcglMultiTexCoord2xOESCommand,
    cwcglMultiTexCoord2xvOESCommand,
    cwcglMultiTexCoord3bOESCommand,
    cwcglMultiTexCoord3bvOESCommand,
    cwcglMultiTexCoord3dCommand,
    cwcglMultiTexCoord3dARBCommand,
    cwcglMultiTexCoord3dvCommand,
    cwcglMultiTexCoord3dvARBCommand,
    cwcglMultiTexCoord3fCommand,
    cwcglMultiTexCoord3fARBCommand,
    cwcglMultiTexCoord3fvCommand,
    cwcglMultiTexCoord3fvARBCommand,
    cwcglMultiTexCoord3hNVCommand,
    cwcglMultiTexCoord3hvNVCommand,
    cwcglMultiTexCoord3iCommand,
    cwcglMultiTexCoord3iARBCommand,
    cwcglMultiTexCoord3ivCommand,
    cwcglMultiTexCoord3ivARBCommand,
    cwcglMultiTexCoord3sCommand,
    cwcglMultiTexCoord3sARBCommand,
    cwcglMultiTexCoord3svCommand,
    cwcglMultiTexCoord3svARBCommand,
    cwcglMultiTexCoord3xOESCommand,
    cwcglMultiTexCoord3xvOESCommand,
    cwcglMultiTexCoord4bOESCommand,
    cwcglMultiTexCoord4bvOESCommand,
    cwcglMultiTexCoord4dCommand,
    cwcglMultiTexCoord4dARBCommand,
    cwcglMultiTexCoord4dvCommand,
    cwcglMultiTexCoord4dvARBCommand,
    cwcglMultiTexCoord4fCommand,
    cwcglMultiTexCoord4fARBCommand,
    cwcglMultiTexCoord4fvCommand,
    cwcglMultiTexCoord4fvARBCommand,
    cwcglMultiTexCoord4hNVCommand,
    cwcglMultiTexCoord4hvNVCommand,
    cwcglMultiTexCoord4iCommand,
    cwcglMultiTexCoord4iARBCommand,
    cwcglMultiTexCoord4ivCommand,
    cwcglMultiTexCoord4ivARBCommand,
    cwcglMultiTexCoord4sCommand,
    cwcglMultiTexCoord4sARBCommand,
    cwcglMultiTexCoord4svCommand,
    cwcglMultiTexCoord4svARBCommand,
    cwcglMultiTexCoord4xCommand,
    cwcglMultiTexCoord4xOESCommand,
    cwcglMultiTexCoord4xvOESCommand,
    cwcglMultiTexCoordP1uiCommand,
    cwcglMultiTexCoordP1uivCommand,
    cwcglMultiTexCoordP2uiCommand,
    cwcglMultiTexCoordP2uivCommand,
    cwcglMultiTexCoordP3uiCommand,
    cwcglMultiTexCoordP3uivCommand,
    cwcglMultiTexCoordP4uiCommand,
    cwcglMultiTexCoordP4uivCommand,
    cwcglMultiTexCoordPointerEXTCommand,
    cwcglMultiTexEnvfEXTCommand,
    cwcglMultiTexEnvfvEXTCommand,
    cwcglMultiTexEnviEXTCommand,
    cwcglMultiTexEnvivEXTCommand,
    cwcglMultiTexGendEXTCommand,
    cwcglMultiTexGendvEXTCommand,
    cwcglMultiTexGenfEXTCommand,
    cwcglMultiTexGenfvEXTCommand,
    cwcglMultiTexGeniEXTCommand,
    cwcglMultiTexGenivEXTCommand,
    cwcglMultiTexImage1DEXTCommand,
    cwcglMultiTexImage2DEXTCommand,
    cwcglMultiTexImage3DEXTCommand,
    cwcglMultiTexParameterIivEXTCommand,
    cwcglMultiTexParameterIuivEXTCommand,
    cwcglMultiTexParameterfEXTCommand,
    cwcglMultiTexParameterfvEXTCommand,
    cwcglMultiTexParameteriEXTCommand,
    cwcglMultiTexParameterivEXTCommand,
    cwcglMultiTexRenderbufferEXTCommand,
    cwcglMultiTexSubImage1DEXTCommand,
    cwcglMultiTexSubImage2DEXTCommand,
    cwcglMultiTexSubImage3DEXTCommand,
    cwcglMulticastBarrierNVCommand,
    cwcglMulticastBlitFramebufferNVCommand,
    cwcglMulticastBufferSubDataNVCommand,
    cwcglMulticastCopyBufferSubDataNVCommand,
    cwcglMulticastCopyImageSubDataNVCommand,
    cwcglMulticastFramebufferSampleLocationsfvNVCommand,
    cwcglMulticastGetQueryObjecti64vNVCommand,
    cwcglMulticastGetQueryObjectivNVCommand,
    cwcglMulticastGetQueryObjectui64vNVCommand,
    cwcglMulticastGetQueryObjectuivNVCommand,
    cwcglMulticastScissorArrayvNVXCommand,
    cwcglMulticastViewportArrayvNVXCommand,
    cwcglMulticastViewportPositionWScaleNVXCommand,
    cwcglMulticastWaitSyncNVCommand,
    cwcglNamedBufferAttachMemoryNVCommand,
    cwcglNamedBufferDataCommand,
    cwcglNamedBufferDataEXTCommand,
    cwcglNamedBufferPageCommitmentARBCommand,
    cwcglNamedBufferPageCommitmentEXTCommand,
    cwcglNamedBufferPageCommitmentMemNVCommand,
    cwcglNamedBufferStorageCommand,
    cwcglNamedBufferStorageExternalEXTCommand,
    cwcglNamedBufferStorageEXTCommand,
    cwcglNamedBufferStorageMemEXTCommand,
    cwcglNamedBufferSubDataCommand,
    cwcglNamedBufferSubDataEXTCommand,
    cwcglNamedCopyBufferSubDataEXTCommand,
    cwcglNamedFramebufferDrawBufferCommand,
    cwcglNamedFramebufferDrawBuffersCommand,
    cwcglNamedFramebufferParameteriCommand,
    cwcglNamedFramebufferParameteriEXTCommand,
    cwcglNamedFramebufferReadBufferCommand,
    cwcglNamedFramebufferRenderbufferCommand,
    cwcglNamedFramebufferRenderbufferEXTCommand,
    cwcglNamedFramebufferSampleLocationsfvARBCommand,
    cwcglNamedFramebufferSampleLocationsfvNVCommand,
    cwcglNamedFramebufferTextureCommand,
    cwcglNamedFramebufferSamplePositionsfvAMDCommand,
    cwcglNamedFramebufferTexture1DEXTCommand,
    cwcglNamedFramebufferTexture2DEXTCommand,
    cwcglNamedFramebufferTexture3DEXTCommand,
    cwcglNamedFramebufferTextureEXTCommand,
    cwcglNamedFramebufferTextureFaceEXTCommand,
    cwcglNamedFramebufferTextureLayerCommand,
    cwcglNamedFramebufferTextureLayerEXTCommand,
    cwcglNamedProgramLocalParameter4dEXTCommand,
    cwcglNamedProgramLocalParameter4dvEXTCommand,
    cwcglNamedProgramLocalParameter4fEXTCommand,
    cwcglNamedProgramLocalParameter4fvEXTCommand,
    cwcglNamedProgramLocalParameterI4iEXTCommand,
    cwcglNamedProgramLocalParameterI4ivEXTCommand,
    cwcglNamedProgramLocalParameterI4uiEXTCommand,
    cwcglNamedProgramLocalParameterI4uivEXTCommand,
    cwcglNamedProgramLocalParameters4fvEXTCommand,
    cwcglNamedProgramLocalParametersI4ivEXTCommand,
    cwcglNamedProgramLocalParametersI4uivEXTCommand,
    cwcglNamedProgramStringEXTCommand,
    cwcglNamedRenderbufferStorageCommand,
    cwcglNamedRenderbufferStorageEXTCommand,
    cwcglNamedRenderbufferStorageMultisampleCommand,
    cwcglNamedRenderbufferStorageMultisampleAdvancedAMDCommand,
    cwcglNamedRenderbufferStorageMultisampleCoverageEXTCommand,
    cwcglNamedRenderbufferStorageMultisampleEXTCommand,
    cwcglNamedStringARBCommand,
    cwcglNewListCommand,
    cwcglNewObjectBufferATICommand,
    cwcglNormal3bCommand,
    cwcglNormal3bvCommand,
    cwcglNormal3dCommand,
    cwcglNormal3dvCommand,
    cwcglNormal3fCommand,
    cwcglNormal3fVertex3fSUNCommand,
    cwcglNormal3fVertex3fvSUNCommand,
    cwcglNormal3fvCommand,
    cwcglNormal3hNVCommand,
    cwcglNormal3hvNVCommand,
    cwcglNormal3iCommand,
    cwcglNormal3ivCommand,
    cwcglNormal3sCommand,
    cwcglNormal3svCommand,
    cwcglNormal3xCommand,
    cwcglNormal3xOESCommand,
    cwcglNormal3xvOESCommand,
    cwcglNormalFormatNVCommand,
    cwcglNormalP3uiCommand,
    cwcglNormalP3uivCommand,
    cwcglNormalPointerCommand,
    cwcglNormalPointerEXTCommand,
    cwcglNormalPointerListIBMCommand,
    cwcglNormalPointervINTELCommand,
    cwcglNormalStream3bATICommand,
    cwcglNormalStream3bvATICommand,
    cwcglNormalStream3dATICommand,
    cwcglNormalStream3dvATICommand,
    cwcglNormalStream3fATICommand,
    cwcglNormalStream3fvATICommand,
    cwcglNormalStream3iATICommand,
    cwcglNormalStream3ivATICommand,
    cwcglNormalStream3sATICommand,
    cwcglNormalStream3svATICommand,
    cwcglObjectLabelCommand,
    cwcglObjectLabelKHRCommand,
    cwcglObjectPtrLabelCommand,
    cwcglObjectPtrLabelKHRCommand,
    cwcglObjectPurgeableAPPLECommand,
    cwcglObjectUnpurgeableAPPLECommand,
    cwcglOrthoCommand,
    cwcglOrthofCommand,
    cwcglOrthofOESCommand,
    cwcglOrthoxCommand,
    cwcglOrthoxOESCommand,
    cwcglPNTrianglesfATICommand,
    cwcglPNTrianglesiATICommand,
    cwcglPassTexCoordATICommand,
    cwcglPassThroughCommand,
    cwcglPassThroughxOESCommand,
    cwcglPatchParameterfvCommand,
    cwcglPatchParameteriCommand,
    cwcglPatchParameteriEXTCommand,
    cwcglPatchParameteriOESCommand,
    cwcglPathColorGenNVCommand,
    cwcglPathCommandsNVCommand,
    cwcglPathCoordsNVCommand,
    cwcglPathCoverDepthFuncNVCommand,
    cwcglPathDashArrayNVCommand,
    cwcglPathFogGenNVCommand,
    cwcglPathGlyphIndexArrayNVCommand,
    cwcglPathGlyphIndexRangeNVCommand,
    cwcglPathGlyphRangeNVCommand,
    cwcglPathGlyphsNVCommand,
    cwcglPathMemoryGlyphIndexArrayNVCommand,
    cwcglPathParameterfNVCommand,
    cwcglPathParameterfvNVCommand,
    cwcglPathParameteriNVCommand,
    cwcglPathParameterivNVCommand,
    cwcglPathStencilDepthOffsetNVCommand,
    cwcglPathStencilFuncNVCommand,
    cwcglPathStringNVCommand,
    cwcglPathSubCommandsNVCommand,
    cwcglPathSubCoordsNVCommand,
    cwcglPathTexGenNVCommand,
    cwcglPauseTransformFeedbackCommand,
    cwcglPauseTransformFeedbackNVCommand,
    cwcglPixelDataRangeNVCommand,
    cwcglPixelMapfvCommand,
    cwcglPixelMapuivCommand,
    cwcglPixelMapusvCommand,
    cwcglPixelMapxCommand,
    cwcglPixelStorefCommand,
    cwcglPixelStoreiCommand,
    cwcglPixelStorexCommand,
    cwcglPixelTexGenParameterfSGISCommand,
    cwcglPixelTexGenParameterfvSGISCommand,
    cwcglPixelTexGenParameteriSGISCommand,
    cwcglPixelTexGenParameterivSGISCommand,
    cwcglPixelTexGenSGIXCommand,
    cwcglPixelTransferfCommand,
    cwcglPixelTransferiCommand,
    cwcglPixelTransferxOESCommand,
    cwcglPixelTransformParameterfEXTCommand,
    cwcglPixelTransformParameterfvEXTCommand,
    cwcglPixelTransformParameteriEXTCommand,
    cwcglPixelTransformParameterivEXTCommand,
    cwcglPixelZoomCommand,
    cwcglPixelZoomxOESCommand,
    cwcglPointAlongPathNVCommand,
    cwcglPointParameterfCommand,
    cwcglPointParameterfARBCommand,
    cwcglPointParameterfEXTCommand,
    cwcglPointParameterfSGISCommand,
    cwcglPointParameterfvCommand,
    cwcglPointParameterfvARBCommand,
    cwcglPointParameterfvEXTCommand,
    cwcglPointParameterfvSGISCommand,
    cwcglPointParameteriCommand,
    cwcglPointParameteriNVCommand,
    cwcglPointParameterivCommand,
    cwcglPointParameterivNVCommand,
    cwcglPointParameterxCommand,
    cwcglPointParameterxOESCommand,
    cwcglPointParameterxvCommand,
    cwcglPointParameterxvOESCommand,
    cwcglPointSizeCommand,
    cwcglPointSizePointerOESCommand,
    cwcglPointSizexCommand,
    cwcglPointSizexOESCommand,
    cwcglPollAsyncSGIXCommand,
    cwcglPollInstrumentsSGIXCommand,
    cwcglPolygonModeCommand,
    cwcglPolygonModeNVCommand,
    cwcglPolygonOffsetCommand,
    cwcglPolygonOffsetClampCommand,
    cwcglPolygonOffsetClampEXTCommand,
    cwcglPolygonOffsetEXTCommand,
    cwcglPolygonOffsetxCommand,
    cwcglPolygonOffsetxOESCommand,
    cwcglPolygonStippleCommand,
    cwcglPopAttribCommand,
    cwcglPopClientAttribCommand,
    cwcglPopDebugGroupCommand,
    cwcglPopDebugGroupKHRCommand,
    cwcglPopGroupMarkerEXTCommand,
    cwcglPopMatrixCommand,
    cwcglPopNameCommand,
    cwcglPresentFrameDualFillNVCommand,
    cwcglPresentFrameKeyedNVCommand,
    cwcglPrimitiveBoundingBoxCommand,
    cwcglPrimitiveBoundingBoxARBCommand,
    cwcglPrimitiveBoundingBoxEXTCommand,
    cwcglPrimitiveBoundingBoxOESCommand,
    cwcglPrimitiveRestartIndexCommand,
    cwcglPrimitiveRestartIndexNVCommand,
    cwcglPrimitiveRestartNVCommand,
    cwcglPrioritizeTexturesCommand,
    cwcglPrioritizeTexturesEXTCommand,
    cwcglPrioritizeTexturesxOESCommand,
    cwcglProgramBinaryCommand,
    cwcglProgramBinaryOESCommand,
    cwcglProgramBufferParametersIivNVCommand,
    cwcglProgramBufferParametersIuivNVCommand,
    cwcglProgramBufferParametersfvNVCommand,
    cwcglProgramEnvParameter4dARBCommand,
    cwcglProgramEnvParameter4dvARBCommand,
    cwcglProgramEnvParameter4fARBCommand,
    cwcglProgramEnvParameter4fvARBCommand,
    cwcglProgramEnvParameterI4iNVCommand,
    cwcglProgramEnvParameterI4ivNVCommand,
    cwcglProgramEnvParameterI4uiNVCommand,
    cwcglProgramEnvParameterI4uivNVCommand,
    cwcglProgramEnvParameters4fvEXTCommand,
    cwcglProgramEnvParametersI4ivNVCommand,
    cwcglProgramEnvParametersI4uivNVCommand,
    cwcglProgramLocalParameter4dARBCommand,
    cwcglProgramLocalParameter4dvARBCommand,
    cwcglProgramLocalParameter4fARBCommand,
    cwcglProgramLocalParameter4fvARBCommand,
    cwcglProgramLocalParameterI4iNVCommand,
    cwcglProgramLocalParameterI4ivNVCommand,
    cwcglProgramLocalParameterI4uiNVCommand,
    cwcglProgramLocalParameterI4uivNVCommand,
    cwcglProgramLocalParameters4fvEXTCommand,
    cwcglProgramLocalParametersI4ivNVCommand,
    cwcglProgramLocalParametersI4uivNVCommand,
    cwcglProgramNamedParameter4dNVCommand,
    cwcglProgramNamedParameter4dvNVCommand,
    cwcglProgramNamedParameter4fNVCommand,
    cwcglProgramNamedParameter4fvNVCommand,
    cwcglProgramParameter4dNVCommand,
    cwcglProgramParameter4dvNVCommand,
    cwcglProgramParameter4fNVCommand,
    cwcglProgramParameter4fvNVCommand,
    cwcglProgramParameteriCommand,
    cwcglProgramParameteriARBCommand,
    cwcglProgramParameteriEXTCommand,
    cwcglProgramParameters4dvNVCommand,
    cwcglProgramParameters4fvNVCommand,
    cwcglProgramPathFragmentInputGenNVCommand,
    cwcglProgramStringARBCommand,
    cwcglProgramSubroutineParametersuivNVCommand,
    cwcglProgramUniform1dCommand,
    cwcglProgramUniform1dEXTCommand,
    cwcglProgramUniform1dvCommand,
    cwcglProgramUniform1dvEXTCommand,
    cwcglProgramUniform1fCommand,
    cwcglProgramUniform1fEXTCommand,
    cwcglProgramUniform1fvCommand,
    cwcglProgramUniform1fvEXTCommand,
    cwcglProgramUniform1iCommand,
    cwcglProgramUniform1i64ARBCommand,
    cwcglProgramUniform1i64NVCommand,
    cwcglProgramUniform1i64vARBCommand,
    cwcglProgramUniform1i64vNVCommand,
    cwcglProgramUniform1iEXTCommand,
    cwcglProgramUniform1ivCommand,
    cwcglProgramUniform1ivEXTCommand,
    cwcglProgramUniform1uiCommand,
    cwcglProgramUniform1ui64ARBCommand,
    cwcglProgramUniform1ui64NVCommand,
    cwcglProgramUniform1ui64vARBCommand,
    cwcglProgramUniform1ui64vNVCommand,
    cwcglProgramUniform1uiEXTCommand,
    cwcglProgramUniform1uivCommand,
    cwcglProgramUniform1uivEXTCommand,
    cwcglProgramUniform2dCommand,
    cwcglProgramUniform2dEXTCommand,
    cwcglProgramUniform2dvCommand,
    cwcglProgramUniform2dvEXTCommand,
    cwcglProgramUniform2fCommand,
    cwcglProgramUniform2fEXTCommand,
    cwcglProgramUniform2fvCommand,
    cwcglProgramUniform2fvEXTCommand,
    cwcglProgramUniform2iCommand,
    cwcglProgramUniform2i64ARBCommand,
    cwcglProgramUniform2i64NVCommand,
    cwcglProgramUniform2i64vARBCommand,
    cwcglProgramUniform2i64vNVCommand,
    cwcglProgramUniform2iEXTCommand,
    cwcglProgramUniform2ivCommand,
    cwcglProgramUniform2ivEXTCommand,
    cwcglProgramUniform2uiCommand,
    cwcglProgramUniform2ui64ARBCommand,
    cwcglProgramUniform2ui64NVCommand,
    cwcglProgramUniform2ui64vARBCommand,
    cwcglProgramUniform2ui64vNVCommand,
    cwcglProgramUniform2uiEXTCommand,
    cwcglProgramUniform2uivCommand,
    cwcglProgramUniform2uivEXTCommand,
    cwcglProgramUniform3dCommand,
    cwcglProgramUniform3dEXTCommand,
    cwcglProgramUniform3dvCommand,
    cwcglProgramUniform3dvEXTCommand,
    cwcglProgramUniform3fCommand,
    cwcglProgramUniform3fEXTCommand,
    cwcglProgramUniform3fvCommand,
    cwcglProgramUniform3fvEXTCommand,
    cwcglProgramUniform3iCommand,
    cwcglProgramUniform3i64ARBCommand,
    cwcglProgramUniform3i64NVCommand,
    cwcglProgramUniform3i64vARBCommand,
    cwcglProgramUniform3i64vNVCommand,
    cwcglProgramUniform3iEXTCommand,
    cwcglProgramUniform3ivCommand,
    cwcglProgramUniform3ivEXTCommand,
    cwcglProgramUniform3uiCommand,
    cwcglProgramUniform3ui64ARBCommand,
    cwcglProgramUniform3ui64NVCommand,
    cwcglProgramUniform3ui64vARBCommand,
    cwcglProgramUniform3ui64vNVCommand,
    cwcglProgramUniform3uiEXTCommand,
    cwcglProgramUniform3uivCommand,
    cwcglProgramUniform3uivEXTCommand,
    cwcglProgramUniform4dCommand,
    cwcglProgramUniform4dEXTCommand,
    cwcglProgramUniform4dvCommand,
    cwcglProgramUniform4dvEXTCommand,
    cwcglProgramUniform4fCommand,
    cwcglProgramUniform4fEXTCommand,
    cwcglProgramUniform4fvCommand,
    cwcglProgramUniform4fvEXTCommand,
    cwcglProgramUniform4iCommand,
    cwcglProgramUniform4i64ARBCommand,
    cwcglProgramUniform4i64NVCommand,
    cwcglProgramUniform4i64vARBCommand,
    cwcglProgramUniform4i64vNVCommand,
    cwcglProgramUniform4iEXTCommand,
    cwcglProgramUniform4ivCommand,
    cwcglProgramUniform4ivEXTCommand,
    cwcglProgramUniform4uiCommand,
    cwcglProgramUniform4ui64ARBCommand,
    cwcglProgramUniform4ui64NVCommand,
    cwcglProgramUniform4ui64vARBCommand,
    cwcglProgramUniform4ui64vNVCommand,
    cwcglProgramUniform4uiEXTCommand,
    cwcglProgramUniform4uivCommand,
    cwcglProgramUniform4uivEXTCommand,
    cwcglProgramUniformHandleui64ARBCommand,
    cwcglProgramUniformHandleui64IMGCommand,
    cwcglProgramUniformHandleui64NVCommand,
    cwcglProgramUniformHandleui64vARBCommand,
    cwcglProgramUniformHandleui64vIMGCommand,
    cwcglProgramUniformHandleui64vNVCommand,
    cwcglProgramUniformMatrix2dvCommand,
    cwcglProgramUniformMatrix2dvEXTCommand,
    cwcglProgramUniformMatrix2fvCommand,
    cwcglProgramUniformMatrix2fvEXTCommand,
    cwcglProgramUniformMatrix2x3dvCommand,
    cwcglProgramUniformMatrix2x3dvEXTCommand,
    cwcglProgramUniformMatrix2x3fvCommand,
    cwcglProgramUniformMatrix2x3fvEXTCommand,
    cwcglProgramUniformMatrix2x4dvCommand,
    cwcglProgramUniformMatrix2x4dvEXTCommand,
    cwcglProgramUniformMatrix2x4fvCommand,
    cwcglProgramUniformMatrix2x4fvEXTCommand,
    cwcglProgramUniformMatrix3dvCommand,
    cwcglProgramUniformMatrix3dvEXTCommand,
    cwcglProgramUniformMatrix3fvCommand,
    cwcglProgramUniformMatrix3fvEXTCommand,
    cwcglProgramUniformMatrix3x2dvCommand,
    cwcglProgramUniformMatrix3x2dvEXTCommand,
    cwcglProgramUniformMatrix3x2fvCommand,
    cwcglProgramUniformMatrix3x2fvEXTCommand,
    cwcglProgramUniformMatrix3x4dvCommand,
    cwcglProgramUniformMatrix3x4dvEXTCommand,
    cwcglProgramUniformMatrix3x4fvCommand,
    cwcglProgramUniformMatrix3x4fvEXTCommand,
    cwcglProgramUniformMatrix4dvCommand,
    cwcglProgramUniformMatrix4dvEXTCommand,
    cwcglProgramUniformMatrix4fvCommand,
    cwcglProgramUniformMatrix4fvEXTCommand,
    cwcglProgramUniformMatrix4x2dvCommand,
    cwcglProgramUniformMatrix4x2dvEXTCommand,
    cwcglProgramUniformMatrix4x2fvCommand,
    cwcglProgramUniformMatrix4x2fvEXTCommand,
    cwcglProgramUniformMatrix4x3dvCommand,
    cwcglProgramUniformMatrix4x3dvEXTCommand,
    cwcglProgramUniformMatrix4x3fvCommand,
    cwcglProgramUniformMatrix4x3fvEXTCommand,
    cwcglProgramUniformui64NVCommand,
    cwcglProgramUniformui64vNVCommand,
    cwcglProgramVertexLimitNVCommand,
    cwcglProvokingVertexCommand,
    cwcglProvokingVertexEXTCommand,
    cwcglPushAttribCommand,
    cwcglPushClientAttribCommand,
    cwcglPushClientAttribDefaultEXTCommand,
    cwcglPushDebugGroupCommand,
    cwcglPushDebugGroupKHRCommand,
    cwcglPushGroupMarkerEXTCommand,
    cwcglPushMatrixCommand,
    cwcglPushNameCommand,
    cwcglQueryCounterCommand,
    cwcglQueryCounterEXTCommand,
    cwcglQueryMatrixxOESCommand,
    cwcglQueryObjectParameteruiAMDCommand,
    cwcglQueryResourceNVCommand,
    cwcglQueryResourceTagNVCommand,
    cwcglRasterPos2dCommand,
    cwcglRasterPos2dvCommand,
    cwcglRasterPos2fCommand,
    cwcglRasterPos2fvCommand,
    cwcglRasterPos2iCommand,
    cwcglRasterPos2ivCommand,
    cwcglRasterPos2sCommand,
    cwcglRasterPos2svCommand,
    cwcglRasterPos2xOESCommand,
    cwcglRasterPos2xvOESCommand,
    cwcglRasterPos3dCommand,
    cwcglRasterPos3dvCommand,
    cwcglRasterPos3fCommand,
    cwcglRasterPos3fvCommand,
    cwcglRasterPos3iCommand,
    cwcglRasterPos3ivCommand,
    cwcglRasterPos3sCommand,
    cwcglRasterPos3svCommand,
    cwcglRasterPos3xOESCommand,
    cwcglRasterPos3xvOESCommand,
    cwcglRasterPos4dCommand,
    cwcglRasterPos4dvCommand,
    cwcglRasterPos4fCommand,
    cwcglRasterPos4fvCommand,
    cwcglRasterPos4iCommand,
    cwcglRasterPos4ivCommand,
    cwcglRasterPos4sCommand,
    cwcglRasterPos4svCommand,
    cwcglRasterPos4xOESCommand,
    cwcglRasterPos4xvOESCommand,
    cwcglRasterSamplesEXTCommand,
    cwcglReadBufferCommand,
    cwcglReadBufferIndexedEXTCommand,
    cwcglReadBufferNVCommand,
    cwcglReadInstrumentsSGIXCommand,
    cwcglReadPixelsCommand,
    cwcglReadnPixelsCommand,
    cwcglReadnPixelsARBCommand,
    cwcglReadnPixelsEXTCommand,
    cwcglReadnPixelsKHRCommand,
    cwcglReleaseKeyedMutexWin32EXTCommand,
    cwcglRectdCommand,
    cwcglRectdvCommand,
    cwcglRectfCommand,
    cwcglRectfvCommand,
    cwcglRectiCommand,
    cwcglRectivCommand,
    cwcglRectsCommand,
    cwcglRectsvCommand,
    cwcglRectxOESCommand,
    cwcglRectxvOESCommand,
    cwcglReferencePlaneSGIXCommand,
    cwcglReleaseShaderCompilerCommand,
    cwcglRenderGpuMaskNVCommand,
    cwcglRenderModeCommand,
    cwcglRenderbufferStorageCommand,
    cwcglRenderbufferStorageEXTCommand,
    cwcglRenderbufferStorageMultisampleCommand,
    cwcglRenderbufferStorageMultisampleANGLECommand,
    cwcglRenderbufferStorageMultisampleAPPLECommand,
    cwcglRenderbufferStorageMultisampleAdvancedAMDCommand,
    cwcglRenderbufferStorageMultisampleCoverageNVCommand,
    cwcglRenderbufferStorageMultisampleEXTCommand,
    cwcglRenderbufferStorageMultisampleIMGCommand,
    cwcglRenderbufferStorageMultisampleNVCommand,
    cwcglRenderbufferStorageOESCommand,
    cwcglReplacementCodePointerSUNCommand,
    cwcglReplacementCodeubSUNCommand,
    cwcglReplacementCodeubvSUNCommand,
    cwcglReplacementCodeuiColor3fVertex3fSUNCommand,
    cwcglReplacementCodeuiColor3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiColor4fNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiColor4fNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiColor4ubVertex3fSUNCommand,
    cwcglReplacementCodeuiColor4ubVertex3fvSUNCommand,
    cwcglReplacementCodeuiNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiSUNCommand,
    cwcglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiTexCoord2fNormal3fVertex3fSUNCommand,
    cwcglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUNCommand,
    cwcglReplacementCodeuiTexCoord2fVertex3fSUNCommand,
    cwcglReplacementCodeuiTexCoord2fVertex3fvSUNCommand,
    cwcglReplacementCodeuiVertex3fSUNCommand,
    cwcglReplacementCodeuiVertex3fvSUNCommand,
    cwcglReplacementCodeuivSUNCommand,
    cwcglReplacementCodeusSUNCommand,
    cwcglReplacementCodeusvSUNCommand,
    cwcglRequestResidentProgramsNVCommand,
    cwcglResetHistogramCommand,
    cwcglResetHistogramEXTCommand,
    cwcglResetMemoryObjectParameterNVCommand,
    cwcglResetMinmaxCommand,
    cwcglResetMinmaxEXTCommand,
    cwcglResizeBuffersMESACommand,
    cwcglResolveDepthValuesNVCommand,
    cwcglResolveMultisampleFramebufferAPPLECommand,
    cwcglResumeTransformFeedbackCommand,
    cwcglResumeTransformFeedbackNVCommand,
    cwcglRotatedCommand,
    cwcglRotatefCommand,
    cwcglRotatexCommand,
    cwcglRotatexOESCommand,
    cwcglSampleCoverageCommand,
    cwcglSampleCoverageARBCommand,
    cwcglSampleCoveragexCommand,
    cwcglSampleCoveragexOESCommand,
    cwcglSampleMapATICommand,
    cwcglSampleMaskEXTCommand,
    cwcglSampleMaskIndexedNVCommand,
    cwcglSampleMaskSGISCommand,
    cwcglSampleMaskiCommand,
    cwcglSamplePatternEXTCommand,
    cwcglSamplePatternSGISCommand,
    cwcglSamplerParameterIivCommand,
    cwcglSamplerParameterIivEXTCommand,
    cwcglSamplerParameterIivOESCommand,
    cwcglSamplerParameterIuivCommand,
    cwcglSamplerParameterIuivEXTCommand,
    cwcglSamplerParameterIuivOESCommand,
    cwcglSamplerParameterfCommand,
    cwcglSamplerParameterfvCommand,
    cwcglSamplerParameteriCommand,
    cwcglSamplerParameterivCommand,
    cwcglScaledCommand,
    cwcglScalefCommand,
    cwcglScalexCommand,
    cwcglScalexOESCommand,
    cwcglScissorCommand,
    cwcglScissorArrayvCommand,
    cwcglScissorArrayvNVCommand,
    cwcglScissorArrayvOESCommand,
    cwcglScissorExclusiveArrayvNVCommand,
    cwcglScissorExclusiveNVCommand,
    cwcglScissorIndexedCommand,
    cwcglScissorIndexedNVCommand,
    cwcglScissorIndexedOESCommand,
    cwcglScissorIndexedvCommand,
    cwcglScissorIndexedvNVCommand,
    cwcglScissorIndexedvOESCommand,
    cwcglSecondaryColor3bCommand,
    cwcglSecondaryColor3bEXTCommand,
    cwcglSecondaryColor3bvCommand,
    cwcglSecondaryColor3bvEXTCommand,
    cwcglSecondaryColor3dCommand,
    cwcglSecondaryColor3dEXTCommand,
    cwcglSecondaryColor3dvCommand,
    cwcglSecondaryColor3dvEXTCommand,
    cwcglSecondaryColor3fCommand,
    cwcglSecondaryColor3fEXTCommand,
    cwcglSecondaryColor3fvCommand,
    cwcglSecondaryColor3fvEXTCommand,
    cwcglSecondaryColor3hNVCommand,
    cwcglSecondaryColor3hvNVCommand,
    cwcglSecondaryColor3iCommand,
    cwcglSecondaryColor3iEXTCommand,
    cwcglSecondaryColor3ivCommand,
    cwcglSecondaryColor3ivEXTCommand,
    cwcglSecondaryColor3sCommand,
    cwcglSecondaryColor3sEXTCommand,
    cwcglSecondaryColor3svCommand,
    cwcglSecondaryColor3svEXTCommand,
    cwcglSecondaryColor3ubCommand,
    cwcglSecondaryColor3ubEXTCommand,
    cwcglSecondaryColor3ubvCommand,
    cwcglSecondaryColor3ubvEXTCommand,
    cwcglSecondaryColor3uiCommand,
    cwcglSecondaryColor3uiEXTCommand,
    cwcglSecondaryColor3uivCommand,
    cwcglSecondaryColor3uivEXTCommand,
    cwcglSecondaryColor3usCommand,
    cwcglSecondaryColor3usEXTCommand,
    cwcglSecondaryColor3usvCommand,
    cwcglSecondaryColor3usvEXTCommand,
    cwcglSecondaryColorFormatNVCommand,
    cwcglSecondaryColorP3uiCommand,
    cwcglSecondaryColorP3uivCommand,
    cwcglSecondaryColorPointerCommand,
    cwcglSecondaryColorPointerEXTCommand,
    cwcglSecondaryColorPointerListIBMCommand,
    cwcglSelectBufferCommand,
    cwcglSelectPerfMonitorCountersAMDCommand,
    cwcglSemaphoreParameterivNVCommand,
    cwcglSemaphoreParameterui64vEXTCommand,
    cwcglSeparableFilter2DCommand,
    cwcglSeparableFilter2DEXTCommand,
    cwcglSetFenceAPPLECommand,
    cwcglSetFenceNVCommand,
    cwcglSetFragmentShaderConstantATICommand,
    cwcglSetInvariantEXTCommand,
    cwcglSetLocalConstantEXTCommand,
    cwcglSetMultisamplefvAMDCommand,
    cwcglShadeModelCommand,
    cwcglShaderBinaryCommand,
    cwcglShaderOp1EXTCommand,
    cwcglShaderOp2EXTCommand,
    cwcglShaderOp3EXTCommand,
    cwcglShaderSourceCommand,
    cwcglShaderSourceARBCommand,
    cwcglShaderStorageBlockBindingCommand,
    cwcglShadingRateEXTCommand,
    cwcglShadingRateCombinerOpsEXTCommand,
    cwcglShadingRateImageBarrierNVCommand,
    cwcglShadingRateQCOMCommand,
    cwcglShadingRateImagePaletteNVCommand,
    cwcglShadingRateSampleOrderNVCommand,
    cwcglShadingRateSampleOrderCustomNVCommand,
    cwcglSharpenTexFuncSGISCommand,
    cwcglSignalSemaphoreEXTCommand,
    cwcglSignalSemaphoreui64NVXCommand,
    cwcglSpecializeShaderCommand,
    cwcglSpecializeShaderARBCommand,
    cwcglSpriteParameterfSGIXCommand,
    cwcglSpriteParameterfvSGIXCommand,
    cwcglSpriteParameteriSGIXCommand,
    cwcglSpriteParameterivSGIXCommand,
    cwcglStartInstrumentsSGIXCommand,
    cwcglStartTilingQCOMCommand,
    cwcglStateCaptureNVCommand,
    cwcglStencilClearTagEXTCommand,
    cwcglStencilFillPathInstancedNVCommand,
    cwcglStencilFillPathNVCommand,
    cwcglStencilFuncCommand,
    cwcglStencilFuncSeparateCommand,
    cwcglStencilFuncSeparateATICommand,
    cwcglStencilMaskCommand,
    cwcglStencilMaskSeparateCommand,
    cwcglStencilOpCommand,
    cwcglStencilOpSeparateCommand,
    cwcglStencilOpSeparateATICommand,
    cwcglStencilOpValueAMDCommand,
    cwcglStencilStrokePathInstancedNVCommand,
    cwcglStencilStrokePathNVCommand,
    cwcglStencilThenCoverFillPathInstancedNVCommand,
    cwcglStencilThenCoverFillPathNVCommand,
    cwcglStencilThenCoverStrokePathInstancedNVCommand,
    cwcglStencilThenCoverStrokePathNVCommand,
    cwcglStopInstrumentsSGIXCommand,
    cwcglStringMarkerGREMEDYCommand,
    cwcglSubpixelPrecisionBiasNVCommand,
    cwcglSwizzleEXTCommand,
    cwcglSyncTextureINTELCommand,
    cwcglTagSampleBufferSGIXCommand,
    cwcglTangent3bEXTCommand,
    cwcglTangent3bvEXTCommand,
    cwcglTangent3dEXTCommand,
    cwcglTangent3dvEXTCommand,
    cwcglTangent3fEXTCommand,
    cwcglTangent3fvEXTCommand,
    cwcglTangent3iEXTCommand,
    cwcglTangent3ivEXTCommand,
    cwcglTangent3sEXTCommand,
    cwcglTangent3svEXTCommand,
    cwcglTangentPointerEXTCommand,
    cwcglTbufferMask3DFXCommand,
    cwcglTessellationFactorAMDCommand,
    cwcglTessellationModeAMDCommand,
    cwcglTestFenceAPPLECommand,
    cwcglTestFenceNVCommand,
    cwcglTestObjectAPPLECommand,
    cwcglTexAttachMemoryNVCommand,
    cwcglTexBufferCommand,
    cwcglTexBufferARBCommand,
    cwcglTexBufferEXTCommand,
    cwcglTexBufferOESCommand,
    cwcglTexBufferRangeCommand,
    cwcglTexBufferRangeEXTCommand,
    cwcglTexBufferRangeOESCommand,
    cwcglTexBumpParameterfvATICommand,
    cwcglTexBumpParameterivATICommand,
    cwcglTexCoord1bOESCommand,
    cwcglTexCoord1bvOESCommand,
    cwcglTexCoord1dCommand,
    cwcglTexCoord1dvCommand,
    cwcglTexCoord1fCommand,
    cwcglTexCoord1fvCommand,
    cwcglTexCoord1hNVCommand,
    cwcglTexCoord1hvNVCommand,
    cwcglTexCoord1iCommand,
    cwcglTexCoord1ivCommand,
    cwcglTexCoord1sCommand,
    cwcglTexCoord1svCommand,
    cwcglTexCoord1xOESCommand,
    cwcglTexCoord1xvOESCommand,
    cwcglTexCoord2bOESCommand,
    cwcglTexCoord2bvOESCommand,
    cwcglTexCoord2dCommand,
    cwcglTexCoord2dvCommand,
    cwcglTexCoord2fCommand,
    cwcglTexCoord2fColor3fVertex3fSUNCommand,
    cwcglTexCoord2fColor3fVertex3fvSUNCommand,
    cwcglTexCoord2fColor4fNormal3fVertex3fSUNCommand,
    cwcglTexCoord2fColor4fNormal3fVertex3fvSUNCommand,
    cwcglTexCoord2fColor4ubVertex3fSUNCommand,
    cwcglTexCoord2fColor4ubVertex3fvSUNCommand,
    cwcglTexCoord2fNormal3fVertex3fSUNCommand,
    cwcglTexCoord2fNormal3fVertex3fvSUNCommand,
    cwcglTexCoord2fVertex3fSUNCommand,
    cwcglTexCoord2fVertex3fvSUNCommand,
    cwcglTexCoord2fvCommand,
    cwcglTexCoord2hNVCommand,
    cwcglTexCoord2hvNVCommand,
    cwcglTexCoord2iCommand,
    cwcglTexCoord2ivCommand,
    cwcglTexCoord2sCommand,
    cwcglTexCoord2svCommand,
    cwcglTexCoord2xOESCommand,
    cwcglTexCoord2xvOESCommand,
    cwcglTexCoord3bOESCommand,
    cwcglTexCoord3bvOESCommand,
    cwcglTexCoord3dCommand,
    cwcglTexCoord3dvCommand,
    cwcglTexCoord3fCommand,
    cwcglTexCoord3fvCommand,
    cwcglTexCoord3hNVCommand,
    cwcglTexCoord3hvNVCommand,
    cwcglTexCoord3iCommand,
    cwcglTexCoord3ivCommand,
    cwcglTexCoord3sCommand,
    cwcglTexCoord3svCommand,
    cwcglTexCoord3xOESCommand,
    cwcglTexCoord3xvOESCommand,
    cwcglTexCoord4bOESCommand,
    cwcglTexCoord4bvOESCommand,
    cwcglTexCoord4dCommand,
    cwcglTexCoord4dvCommand,
    cwcglTexCoord4fCommand,
    cwcglTexCoord4fColor4fNormal3fVertex4fSUNCommand,
    cwcglTexCoord4fColor4fNormal3fVertex4fvSUNCommand,
    cwcglTexCoord4fVertex4fSUNCommand,
    cwcglTexCoord4fVertex4fvSUNCommand,
    cwcglTexCoord4fvCommand,
    cwcglTexCoord4hNVCommand,
    cwcglTexCoord4hvNVCommand,
    cwcglTexCoord4iCommand,
    cwcglTexCoord4ivCommand,
    cwcglTexCoord4sCommand,
    cwcglTexCoord4svCommand,
    cwcglTexCoord4xOESCommand,
    cwcglTexCoord4xvOESCommand,
    cwcglTexCoordFormatNVCommand,
    cwcglTexCoordP1uiCommand,
    cwcglTexCoordP1uivCommand,
    cwcglTexCoordP2uiCommand,
    cwcglTexCoordP2uivCommand,
    cwcglTexCoordP3uiCommand,
    cwcglTexCoordP3uivCommand,
    cwcglTexCoordP4uiCommand,
    cwcglTexCoordP4uivCommand,
    cwcglTexCoordPointerCommand,
    cwcglTexCoordPointerEXTCommand,
    cwcglTexCoordPointerListIBMCommand,
    cwcglTexCoordPointervINTELCommand,
    cwcglTexEnvfCommand,
    cwcglTexEnvfvCommand,
    cwcglTexEnviCommand,
    cwcglTexEnvivCommand,
    cwcglTexEnvxCommand,
    cwcglTexEnvxOESCommand,
    cwcglTexEnvxvCommand,
    cwcglTexEnvxvOESCommand,
    cwcglTexEstimateMotionQCOMCommand,
    cwcglTexEstimateMotionRegionsQCOMCommand,
    cwcglExtrapolateTex2DQCOMCommand,
    cwcglTexFilterFuncSGISCommand,
    cwcglTexGendCommand,
    cwcglTexGendvCommand,
    cwcglTexGenfCommand,
    cwcglTexGenfOESCommand,
    cwcglTexGenfvCommand,
    cwcglTexGenfvOESCommand,
    cwcglTexGeniCommand,
    cwcglTexGeniOESCommand,
    cwcglTexGenivCommand,
    cwcglTexGenivOESCommand,
    cwcglTexGenxOESCommand,
    cwcglTexGenxvOESCommand,
    cwcglTexImage1DCommand,
    cwcglTexImage2DCommand,
    cwcglTexImage2DMultisampleCommand,
    cwcglTexImage2DMultisampleCoverageNVCommand,
    cwcglTexImage3DCommand,
    cwcglTexImage3DEXTCommand,
    cwcglTexImage3DMultisampleCommand,
    cwcglTexImage3DMultisampleCoverageNVCommand,
    cwcglTexImage3DOESCommand,
    cwcglTexImage4DSGISCommand,
    cwcglTexPageCommitmentARBCommand,
    cwcglTexPageCommitmentEXTCommand,
    cwcglTexPageCommitmentMemNVCommand,
    cwcglTexParameterIivCommand,
    cwcglTexParameterIivEXTCommand,
    cwcglTexParameterIivOESCommand,
    cwcglTexParameterIuivCommand,
    cwcglTexParameterIuivEXTCommand,
    cwcglTexParameterIuivOESCommand,
    cwcglTexParameterfCommand,
    cwcglTexParameterfvCommand,
    cwcglTexParameteriCommand,
    cwcglTexParameterivCommand,
    cwcglTexParameterxCommand,
    cwcglTexParameterxOESCommand,
    cwcglTexParameterxvCommand,
    cwcglTexParameterxvOESCommand,
    cwcglTexRenderbufferNVCommand,
    cwcglTexStorage1DCommand,
    cwcglTexStorage1DEXTCommand,
    cwcglTexStorage2DCommand,
    cwcglTexStorage2DEXTCommand,
    cwcglTexStorage2DMultisampleCommand,
    cwcglTexStorage3DCommand,
    cwcglTexStorage3DEXTCommand,
    cwcglTexStorage3DMultisampleCommand,
    cwcglTexStorage3DMultisampleOESCommand,
    cwcglTexStorageAttribs2DEXTCommand,
    cwcglTexStorageAttribs3DEXTCommand,
    cwcglTexStorageMem1DEXTCommand,
    cwcglTexStorageMem2DEXTCommand,
    cwcglTexStorageMem2DMultisampleEXTCommand,
    cwcglTexStorageMem3DEXTCommand,
    cwcglTexStorageMem3DMultisampleEXTCommand,
    cwcglTexStorageSparseAMDCommand,
    cwcglTexSubImage1DCommand,
    cwcglTexSubImage1DEXTCommand,
    cwcglTexSubImage2DCommand,
    cwcglTexSubImage2DEXTCommand,
    cwcglTexSubImage3DCommand,
    cwcglTexSubImage3DEXTCommand,
    cwcglTexSubImage3DOESCommand,
    cwcglTexSubImage4DSGISCommand,
    cwcglTextureAttachMemoryNVCommand,
    cwcglTextureBarrierCommand,
    cwcglTextureBarrierNVCommand,
    cwcglTextureBufferCommand,
    cwcglTextureBufferEXTCommand,
    cwcglTextureBufferRangeCommand,
    cwcglTextureBufferRangeEXTCommand,
    cwcglTextureColorMaskSGISCommand,
    cwcglTextureFoveationParametersQCOMCommand,
    cwcglTextureImage1DEXTCommand,
    cwcglTextureImage2DEXTCommand,
    cwcglTextureImage2DMultisampleCoverageNVCommand,
    cwcglTextureImage2DMultisampleNVCommand,
    cwcglTextureImage3DEXTCommand,
    cwcglTextureImage3DMultisampleCoverageNVCommand,
    cwcglTextureImage3DMultisampleNVCommand,
    cwcglTextureLightEXTCommand,
    cwcglTextureMaterialEXTCommand,
    cwcglTextureNormalEXTCommand,
    cwcglTexturePageCommitmentEXTCommand,
    cwcglTexturePageCommitmentMemNVCommand,
    cwcglTextureParameterIivCommand,
    cwcglTextureParameterIivEXTCommand,
    cwcglTextureParameterIuivCommand,
    cwcglTextureParameterIuivEXTCommand,
    cwcglTextureParameterfCommand,
    cwcglTextureParameterfEXTCommand,
    cwcglTextureParameterfvCommand,
    cwcglTextureParameterfvEXTCommand,
    cwcglTextureParameteriCommand,
    cwcglTextureParameteriEXTCommand,
    cwcglTextureParameterivCommand,
    cwcglTextureParameterivEXTCommand,
    cwcglTextureRangeAPPLECommand,
    cwcglTextureRenderbufferEXTCommand,
    cwcglTextureStorage1DCommand,
    cwcglTextureStorage1DEXTCommand,
    cwcglTextureStorage2DCommand,
    cwcglTextureStorage2DEXTCommand,
    cwcglTextureStorage2DMultisampleCommand,
    cwcglTextureStorage2DMultisampleEXTCommand,
    cwcglTextureStorage3DCommand,
    cwcglTextureStorage3DEXTCommand,
    cwcglTextureStorage3DMultisampleCommand,
    cwcglTextureStorage3DMultisampleEXTCommand,
    cwcglTextureStorageMem1DEXTCommand,
    cwcglTextureStorageMem2DEXTCommand,
    cwcglTextureStorageMem2DMultisampleEXTCommand,
    cwcglTextureStorageMem3DEXTCommand,
    cwcglTextureStorageMem3DMultisampleEXTCommand,
    cwcglTextureStorageSparseAMDCommand,
    cwcglTextureSubImage1DCommand,
    cwcglTextureSubImage1DEXTCommand,
    cwcglTextureSubImage2DCommand,
    cwcglTextureSubImage2DEXTCommand,
    cwcglTextureSubImage3DCommand,
    cwcglTextureSubImage3DEXTCommand,
    cwcglTextureViewCommand,
    cwcglTextureViewEXTCommand,
    cwcglTextureViewOESCommand,
    cwcglTrackMatrixNVCommand,
    cwcglTransformFeedbackAttribsNVCommand,
    cwcglTransformFeedbackBufferBaseCommand,
    cwcglTransformFeedbackBufferRangeCommand,
    cwcglTransformFeedbackStreamAttribsNVCommand,
    cwcglTransformFeedbackVaryingsCommand,
    cwcglTransformFeedbackVaryingsEXTCommand,
    cwcglTransformFeedbackVaryingsNVCommand,
    cwcglTransformPathNVCommand,
    cwcglTranslatedCommand,
    cwcglTranslatefCommand,
    cwcglTranslatexCommand,
    cwcglTranslatexOESCommand,
    cwcglUniform1dCommand,
    cwcglUniform1dvCommand,
    cwcglUniform1fCommand,
    cwcglUniform1fARBCommand,
    cwcglUniform1fvCommand,
    cwcglUniform1fvARBCommand,
    cwcglUniform1iCommand,
    cwcglUniform1i64ARBCommand,
    cwcglUniform1i64NVCommand,
    cwcglUniform1i64vARBCommand,
    cwcglUniform1i64vNVCommand,
    cwcglUniform1iARBCommand,
    cwcglUniform1ivCommand,
    cwcglUniform1ivARBCommand,
    cwcglUniform1uiCommand,
    cwcglUniform1ui64ARBCommand,
    cwcglUniform1ui64NVCommand,
    cwcglUniform1ui64vARBCommand,
    cwcglUniform1ui64vNVCommand,
    cwcglUniform1uiEXTCommand,
    cwcglUniform1uivCommand,
    cwcglUniform1uivEXTCommand,
    cwcglUniform2dCommand,
    cwcglUniform2dvCommand,
    cwcglUniform2fCommand,
    cwcglUniform2fARBCommand,
    cwcglUniform2fvCommand,
    cwcglUniform2fvARBCommand,
    cwcglUniform2iCommand,
    cwcglUniform2i64ARBCommand,
    cwcglUniform2i64NVCommand,
    cwcglUniform2i64vARBCommand,
    cwcglUniform2i64vNVCommand,
    cwcglUniform2iARBCommand,
    cwcglUniform2ivCommand,
    cwcglUniform2ivARBCommand,
    cwcglUniform2uiCommand,
    cwcglUniform2ui64ARBCommand,
    cwcglUniform2ui64NVCommand,
    cwcglUniform2ui64vARBCommand,
    cwcglUniform2ui64vNVCommand,
    cwcglUniform2uiEXTCommand,
    cwcglUniform2uivCommand,
    cwcglUniform2uivEXTCommand,
    cwcglUniform3dCommand,
    cwcglUniform3dvCommand,
    cwcglUniform3fCommand,
    cwcglUniform3fARBCommand,
    cwcglUniform3fvCommand,
    cwcglUniform3fvARBCommand,
    cwcglUniform3iCommand,
    cwcglUniform3i64ARBCommand,
    cwcglUniform3i64NVCommand,
    cwcglUniform3i64vARBCommand,
    cwcglUniform3i64vNVCommand,
    cwcglUniform3iARBCommand,
    cwcglUniform3ivCommand,
    cwcglUniform3ivARBCommand,
    cwcglUniform3uiCommand,
    cwcglUniform3ui64ARBCommand,
    cwcglUniform3ui64NVCommand,
    cwcglUniform3ui64vARBCommand,
    cwcglUniform3ui64vNVCommand,
    cwcglUniform3uiEXTCommand,
    cwcglUniform3uivCommand,
    cwcglUniform3uivEXTCommand,
    cwcglUniform4dCommand,
    cwcglUniform4dvCommand,
    cwcglUniform4fCommand,
    cwcglUniform4fARBCommand,
    cwcglUniform4fvCommand,
    cwcglUniform4fvARBCommand,
    cwcglUniform4iCommand,
    cwcglUniform4i64ARBCommand,
    cwcglUniform4i64NVCommand,
    cwcglUniform4i64vARBCommand,
    cwcglUniform4i64vNVCommand,
    cwcglUniform4iARBCommand,
    cwcglUniform4ivCommand,
    cwcglUniform4ivARBCommand,
    cwcglUniform4uiCommand,
    cwcglUniform4ui64ARBCommand,
    cwcglUniform4ui64NVCommand,
    cwcglUniform4ui64vARBCommand,
    cwcglUniform4ui64vNVCommand,
    cwcglUniform4uiEXTCommand,
    cwcglUniform4uivCommand,
    cwcglUniform4uivEXTCommand,
    cwcglUniformBlockBindingCommand,
    cwcglUniformBufferEXTCommand,
    cwcglUniformHandleui64ARBCommand,
    cwcglUniformHandleui64IMGCommand,
    cwcglUniformHandleui64NVCommand,
    cwcglUniformHandleui64vARBCommand,
    cwcglUniformHandleui64vIMGCommand,
    cwcglUniformHandleui64vNVCommand,
    cwcglUniformMatrix2dvCommand,
    cwcglUniformMatrix2fvCommand,
    cwcglUniformMatrix2fvARBCommand,
    cwcglUniformMatrix2x3dvCommand,
    cwcglUniformMatrix2x3fvCommand,
    cwcglUniformMatrix2x3fvNVCommand,
    cwcglUniformMatrix2x4dvCommand,
    cwcglUniformMatrix2x4fvCommand,
    cwcglUniformMatrix2x4fvNVCommand,
    cwcglUniformMatrix3dvCommand,
    cwcglUniformMatrix3fvCommand,
    cwcglUniformMatrix3fvARBCommand,
    cwcglUniformMatrix3x2dvCommand,
    cwcglUniformMatrix3x2fvCommand,
    cwcglUniformMatrix3x2fvNVCommand,
    cwcglUniformMatrix3x4dvCommand,
    cwcglUniformMatrix3x4fvCommand,
    cwcglUniformMatrix3x4fvNVCommand,
    cwcglUniformMatrix4dvCommand,
    cwcglUniformMatrix4fvCommand,
    cwcglUniformMatrix4fvARBCommand,
    cwcglUniformMatrix4x2dvCommand,
    cwcglUniformMatrix4x2fvCommand,
    cwcglUniformMatrix4x2fvNVCommand,
    cwcglUniformMatrix4x3dvCommand,
    cwcglUniformMatrix4x3fvCommand,
    cwcglUniformMatrix4x3fvNVCommand,
    cwcglUniformSubroutinesuivCommand,
    cwcglUniformui64NVCommand,
    cwcglUniformui64vNVCommand,
    cwcglUnlockArraysEXTCommand,
    cwcglUnmapBufferCommand,
    cwcglUnmapBufferARBCommand,
    cwcglUnmapBufferOESCommand,
    cwcglUnmapNamedBufferCommand,
    cwcglUnmapNamedBufferEXTCommand,
    cwcglUnmapObjectBufferATICommand,
    cwcglUnmapTexture2DINTELCommand,
    cwcglUpdateObjectBufferATICommand,
    cwcglUploadGpuMaskNVXCommand,
    cwcglUseProgramCommand,
    cwcglUseProgramObjectARBCommand,
    cwcglUseProgramStagesCommand,
    cwcglUseProgramStagesEXTCommand,
    cwcglUseShaderProgramEXTCommand,
    cwcglVDPAUFiniNVCommand,
    cwcglVDPAUGetSurfaceivNVCommand,
    cwcglVDPAUInitNVCommand,
    cwcglVDPAUIsSurfaceNVCommand,
    cwcglVDPAUMapSurfacesNVCommand,
    cwcglVDPAURegisterOutputSurfaceNVCommand,
    cwcglVDPAURegisterVideoSurfaceNVCommand,
    cwcglVDPAURegisterVideoSurfaceWithPictureStructureNVCommand,
    cwcglVDPAUSurfaceAccessNVCommand,
    cwcglVDPAUUnmapSurfacesNVCommand,
    cwcglVDPAUUnregisterSurfaceNVCommand,
    cwcglValidateProgramCommand,
    cwcglValidateProgramARBCommand,
    cwcglValidateProgramPipelineCommand,
    cwcglValidateProgramPipelineEXTCommand,
    cwcglVariantArrayObjectATICommand,
    cwcglVariantPointerEXTCommand,
    cwcglVariantbvEXTCommand,
    cwcglVariantdvEXTCommand,
    cwcglVariantfvEXTCommand,
    cwcglVariantivEXTCommand,
    cwcglVariantsvEXTCommand,
    cwcglVariantubvEXTCommand,
    cwcglVariantuivEXTCommand,
    cwcglVariantusvEXTCommand,
    cwcglVertex2bOESCommand,
    cwcglVertex2bvOESCommand,
    cwcglVertex2dCommand,
    cwcglVertex2dvCommand,
    cwcglVertex2fCommand,
    cwcglVertex2fvCommand,
    cwcglVertex2hNVCommand,
    cwcglVertex2hvNVCommand,
    cwcglVertex2iCommand,
    cwcglVertex2ivCommand,
    cwcglVertex2sCommand,
    cwcglVertex2svCommand,
    cwcglVertex2xOESCommand,
    cwcglVertex2xvOESCommand,
    cwcglVertex3bOESCommand,
    cwcglVertex3bvOESCommand,
    cwcglVertex3dCommand,
    cwcglVertex3dvCommand,
    cwcglVertex3fCommand,
    cwcglVertex3fvCommand,
    cwcglVertex3hNVCommand,
    cwcglVertex3hvNVCommand,
    cwcglVertex3iCommand,
    cwcglVertex3ivCommand,
    cwcglVertex3sCommand,
    cwcglVertex3svCommand,
    cwcglVertex3xOESCommand,
    cwcglVertex3xvOESCommand,
    cwcglVertex4bOESCommand,
    cwcglVertex4bvOESCommand,
    cwcglVertex4dCommand,
    cwcglVertex4dvCommand,
    cwcglVertex4fCommand,
    cwcglVertex4fvCommand,
    cwcglVertex4hNVCommand,
    cwcglVertex4hvNVCommand,
    cwcglVertex4iCommand,
    cwcglVertex4ivCommand,
    cwcglVertex4sCommand,
    cwcglVertex4svCommand,
    cwcglVertex4xOESCommand,
    cwcglVertex4xvOESCommand,
    cwcglVertexArrayAttribBindingCommand,
    cwcglVertexArrayAttribFormatCommand,
    cwcglVertexArrayAttribIFormatCommand,
    cwcglVertexArrayAttribLFormatCommand,
    cwcglVertexArrayBindVertexBufferEXTCommand,
    cwcglVertexArrayBindingDivisorCommand,
    cwcglVertexArrayColorOffsetEXTCommand,
    cwcglVertexArrayEdgeFlagOffsetEXTCommand,
    cwcglVertexArrayElementBufferCommand,
    cwcglVertexArrayFogCoordOffsetEXTCommand,
    cwcglVertexArrayIndexOffsetEXTCommand,
    cwcglVertexArrayMultiTexCoordOffsetEXTCommand,
    cwcglVertexArrayNormalOffsetEXTCommand,
    cwcglVertexArrayParameteriAPPLECommand,
    cwcglVertexArrayRangeAPPLECommand,
    cwcglVertexArrayRangeNVCommand,
    cwcglVertexArraySecondaryColorOffsetEXTCommand,
    cwcglVertexArrayTexCoordOffsetEXTCommand,
    cwcglVertexArrayVertexAttribBindingEXTCommand,
    cwcglVertexArrayVertexAttribDivisorEXTCommand,
    cwcglVertexArrayVertexAttribFormatEXTCommand,
    cwcglVertexArrayVertexAttribIFormatEXTCommand,
    cwcglVertexArrayVertexAttribIOffsetEXTCommand,
    cwcglVertexArrayVertexAttribLFormatEXTCommand,
    cwcglVertexArrayVertexAttribLOffsetEXTCommand,
    cwcglVertexArrayVertexAttribOffsetEXTCommand,
    cwcglVertexArrayVertexBindingDivisorEXTCommand,
    cwcglVertexArrayVertexBufferCommand,
    cwcglVertexArrayVertexBuffersCommand,
    cwcglVertexArrayVertexOffsetEXTCommand,
    cwcglVertexAttrib1dCommand,
    cwcglVertexAttrib1dARBCommand,
    cwcglVertexAttrib1dNVCommand,
    cwcglVertexAttrib1dvCommand,
    cwcglVertexAttrib1dvARBCommand,
    cwcglVertexAttrib1dvNVCommand,
    cwcglVertexAttrib1fCommand,
    cwcglVertexAttrib1fARBCommand,
    cwcglVertexAttrib1fNVCommand,
    cwcglVertexAttrib1fvCommand,
    cwcglVertexAttrib1fvARBCommand,
    cwcglVertexAttrib1fvNVCommand,
    cwcglVertexAttrib1hNVCommand,
    cwcglVertexAttrib1hvNVCommand,
    cwcglVertexAttrib1sCommand,
    cwcglVertexAttrib1sARBCommand,
    cwcglVertexAttrib1sNVCommand,
    cwcglVertexAttrib1svCommand,
    cwcglVertexAttrib1svARBCommand,
    cwcglVertexAttrib1svNVCommand,
    cwcglVertexAttrib2dCommand,
    cwcglVertexAttrib2dARBCommand,
    cwcglVertexAttrib2dNVCommand,
    cwcglVertexAttrib2dvCommand,
    cwcglVertexAttrib2dvARBCommand,
    cwcglVertexAttrib2dvNVCommand,
    cwcglVertexAttrib2fCommand,
    cwcglVertexAttrib2fARBCommand,
    cwcglVertexAttrib2fNVCommand,
    cwcglVertexAttrib2fvCommand,
    cwcglVertexAttrib2fvARBCommand,
    cwcglVertexAttrib2fvNVCommand,
    cwcglVertexAttrib2hNVCommand,
    cwcglVertexAttrib2hvNVCommand,
    cwcglVertexAttrib2sCommand,
    cwcglVertexAttrib2sARBCommand,
    cwcglVertexAttrib2sNVCommand,
    cwcglVertexAttrib2svCommand,
    cwcglVertexAttrib2svARBCommand,
    cwcglVertexAttrib2svNVCommand,
    cwcglVertexAttrib3dCommand,
    cwcglVertexAttrib3dARBCommand,
    cwcglVertexAttrib3dNVCommand,
    cwcglVertexAttrib3dvCommand,
    cwcglVertexAttrib3dvARBCommand,
    cwcglVertexAttrib3dvNVCommand,
    cwcglVertexAttrib3fCommand,
    cwcglVertexAttrib3fARBCommand,
    cwcglVertexAttrib3fNVCommand,
    cwcglVertexAttrib3fvCommand,
    cwcglVertexAttrib3fvARBCommand,
    cwcglVertexAttrib3fvNVCommand,
    cwcglVertexAttrib3hNVCommand,
    cwcglVertexAttrib3hvNVCommand,
    cwcglVertexAttrib3sCommand,
    cwcglVertexAttrib3sARBCommand,
    cwcglVertexAttrib3sNVCommand,
    cwcglVertexAttrib3svCommand,
    cwcglVertexAttrib3svARBCommand,
    cwcglVertexAttrib3svNVCommand,
    cwcglVertexAttrib4NbvCommand,
    cwcglVertexAttrib4NbvARBCommand,
    cwcglVertexAttrib4NivCommand,
    cwcglVertexAttrib4NivARBCommand,
    cwcglVertexAttrib4NsvCommand,
    cwcglVertexAttrib4NsvARBCommand,
    cwcglVertexAttrib4NubCommand,
    cwcglVertexAttrib4NubARBCommand,
    cwcglVertexAttrib4NubvCommand,
    cwcglVertexAttrib4NubvARBCommand,
    cwcglVertexAttrib4NuivCommand,
    cwcglVertexAttrib4NuivARBCommand,
    cwcglVertexAttrib4NusvCommand,
    cwcglVertexAttrib4NusvARBCommand,
    cwcglVertexAttrib4bvCommand,
    cwcglVertexAttrib4bvARBCommand,
    cwcglVertexAttrib4dCommand,
    cwcglVertexAttrib4dARBCommand,
    cwcglVertexAttrib4dNVCommand,
    cwcglVertexAttrib4dvCommand,
    cwcglVertexAttrib4dvARBCommand,
    cwcglVertexAttrib4dvNVCommand,
    cwcglVertexAttrib4fCommand,
    cwcglVertexAttrib4fARBCommand,
    cwcglVertexAttrib4fNVCommand,
    cwcglVertexAttrib4fvCommand,
    cwcglVertexAttrib4fvARBCommand,
    cwcglVertexAttrib4fvNVCommand,
    cwcglVertexAttrib4hNVCommand,
    cwcglVertexAttrib4hvNVCommand,
    cwcglVertexAttrib4ivCommand,
    cwcglVertexAttrib4ivARBCommand,
    cwcglVertexAttrib4sCommand,
    cwcglVertexAttrib4sARBCommand,
    cwcglVertexAttrib4sNVCommand,
    cwcglVertexAttrib4svCommand,
    cwcglVertexAttrib4svARBCommand,
    cwcglVertexAttrib4svNVCommand,
    cwcglVertexAttrib4ubNVCommand,
    cwcglVertexAttrib4ubvCommand,
    cwcglVertexAttrib4ubvARBCommand,
    cwcglVertexAttrib4ubvNVCommand,
    cwcglVertexAttrib4uivCommand,
    cwcglVertexAttrib4uivARBCommand,
    cwcglVertexAttrib4usvCommand,
    cwcglVertexAttrib4usvARBCommand,
    cwcglVertexAttribArrayObjectATICommand,
    cwcglVertexAttribBindingCommand,
    cwcglVertexAttribDivisorCommand,
    cwcglVertexAttribDivisorANGLECommand,
    cwcglVertexAttribDivisorARBCommand,
    cwcglVertexAttribDivisorEXTCommand,
    cwcglVertexAttribDivisorNVCommand,
    cwcglVertexAttribFormatCommand,
    cwcglVertexAttribFormatNVCommand,
    cwcglVertexAttribI1iCommand,
    cwcglVertexAttribI1iEXTCommand,
    cwcglVertexAttribI1ivCommand,
    cwcglVertexAttribI1ivEXTCommand,
    cwcglVertexAttribI1uiCommand,
    cwcglVertexAttribI1uiEXTCommand,
    cwcglVertexAttribI1uivCommand,
    cwcglVertexAttribI1uivEXTCommand,
    cwcglVertexAttribI2iCommand,
    cwcglVertexAttribI2iEXTCommand,
    cwcglVertexAttribI2ivCommand,
    cwcglVertexAttribI2ivEXTCommand,
    cwcglVertexAttribI2uiCommand,
    cwcglVertexAttribI2uiEXTCommand,
    cwcglVertexAttribI2uivCommand,
    cwcglVertexAttribI2uivEXTCommand,
    cwcglVertexAttribI3iCommand,
    cwcglVertexAttribI3iEXTCommand,
    cwcglVertexAttribI3ivCommand,
    cwcglVertexAttribI3ivEXTCommand,
    cwcglVertexAttribI3uiCommand,
    cwcglVertexAttribI3uiEXTCommand,
    cwcglVertexAttribI3uivCommand,
    cwcglVertexAttribI3uivEXTCommand,
    cwcglVertexAttribI4bvCommand,
    cwcglVertexAttribI4bvEXTCommand,
    cwcglVertexAttribI4iCommand,
    cwcglVertexAttribI4iEXTCommand,
    cwcglVertexAttribI4ivCommand,
    cwcglVertexAttribI4ivEXTCommand,
    cwcglVertexAttribI4svCommand,
    cwcglVertexAttribI4svEXTCommand,
    cwcglVertexAttribI4ubvCommand,
    cwcglVertexAttribI4ubvEXTCommand,
    cwcglVertexAttribI4uiCommand,
    cwcglVertexAttribI4uiEXTCommand,
    cwcglVertexAttribI4uivCommand,
    cwcglVertexAttribI4uivEXTCommand,
    cwcglVertexAttribI4usvCommand,
    cwcglVertexAttribI4usvEXTCommand,
    cwcglVertexAttribIFormatCommand,
    cwcglVertexAttribIFormatNVCommand,
    cwcglVertexAttribIPointerCommand,
    cwcglVertexAttribIPointerEXTCommand,
    cwcglVertexAttribL1dCommand,
    cwcglVertexAttribL1dEXTCommand,
    cwcglVertexAttribL1dvCommand,
    cwcglVertexAttribL1dvEXTCommand,
    cwcglVertexAttribL1i64NVCommand,
    cwcglVertexAttribL1i64vNVCommand,
    cwcglVertexAttribL1ui64ARBCommand,
    cwcglVertexAttribL1ui64NVCommand,
    cwcglVertexAttribL1ui64vARBCommand,
    cwcglVertexAttribL1ui64vNVCommand,
    cwcglVertexAttribL2dCommand,
    cwcglVertexAttribL2dEXTCommand,
    cwcglVertexAttribL2dvCommand,
    cwcglVertexAttribL2dvEXTCommand,
    cwcglVertexAttribL2i64NVCommand,
    cwcglVertexAttribL2i64vNVCommand,
    cwcglVertexAttribL2ui64NVCommand,
    cwcglVertexAttribL2ui64vNVCommand,
    cwcglVertexAttribL3dCommand,
    cwcglVertexAttribL3dEXTCommand,
    cwcglVertexAttribL3dvCommand,
    cwcglVertexAttribL3dvEXTCommand,
    cwcglVertexAttribL3i64NVCommand,
    cwcglVertexAttribL3i64vNVCommand,
    cwcglVertexAttribL3ui64NVCommand,
    cwcglVertexAttribL3ui64vNVCommand,
    cwcglVertexAttribL4dCommand,
    cwcglVertexAttribL4dEXTCommand,
    cwcglVertexAttribL4dvCommand,
    cwcglVertexAttribL4dvEXTCommand,
    cwcglVertexAttribL4i64NVCommand,
    cwcglVertexAttribL4i64vNVCommand,
    cwcglVertexAttribL4ui64NVCommand,
    cwcglVertexAttribL4ui64vNVCommand,
    cwcglVertexAttribLFormatCommand,
    cwcglVertexAttribLFormatNVCommand,
    cwcglVertexAttribLPointerCommand,
    cwcglVertexAttribLPointerEXTCommand,
    cwcglVertexAttribP1uiCommand,
    cwcglVertexAttribP1uivCommand,
    cwcglVertexAttribP2uiCommand,
    cwcglVertexAttribP2uivCommand,
    cwcglVertexAttribP3uiCommand,
    cwcglVertexAttribP3uivCommand,
    cwcglVertexAttribP4uiCommand,
    cwcglVertexAttribP4uivCommand,
    cwcglVertexAttribParameteriAMDCommand,
    cwcglVertexAttribPointerCommand,
    cwcglVertexAttribPointerARBCommand,
    cwcglVertexAttribPointerNVCommand,
    cwcglVertexAttribs1dvNVCommand,
    cwcglVertexAttribs1fvNVCommand,
    cwcglVertexAttribs1hvNVCommand,
    cwcglVertexAttribs1svNVCommand,
    cwcglVertexAttribs2dvNVCommand,
    cwcglVertexAttribs2fvNVCommand,
    cwcglVertexAttribs2hvNVCommand,
    cwcglVertexAttribs2svNVCommand,
    cwcglVertexAttribs3dvNVCommand,
    cwcglVertexAttribs3fvNVCommand,
    cwcglVertexAttribs3hvNVCommand,
    cwcglVertexAttribs3svNVCommand,
    cwcglVertexAttribs4dvNVCommand,
    cwcglVertexAttribs4fvNVCommand,
    cwcglVertexAttribs4hvNVCommand,
    cwcglVertexAttribs4svNVCommand,
    cwcglVertexAttribs4ubvNVCommand,
    cwcglVertexBindingDivisorCommand,
    cwcglVertexBlendARBCommand,
    cwcglVertexBlendEnvfATICommand,
    cwcglVertexBlendEnviATICommand,
    cwcglVertexFormatNVCommand,
    cwcglVertexP2uiCommand,
    cwcglVertexP2uivCommand,
    cwcglVertexP3uiCommand,
    cwcglVertexP3uivCommand,
    cwcglVertexP4uiCommand,
    cwcglVertexP4uivCommand,
    cwcglVertexPointerCommand,
    cwcglVertexPointerEXTCommand,
    cwcglVertexPointerListIBMCommand,
    cwcglVertexPointervINTELCommand,
    cwcglVertexStream1dATICommand,
    cwcglVertexStream1dvATICommand,
    cwcglVertexStream1fATICommand,
    cwcglVertexStream1fvATICommand,
    cwcglVertexStream1iATICommand,
    cwcglVertexStream1ivATICommand,
    cwcglVertexStream1sATICommand,
    cwcglVertexStream1svATICommand,
    cwcglVertexStream2dATICommand,
    cwcglVertexStream2dvATICommand,
    cwcglVertexStream2fATICommand,
    cwcglVertexStream2fvATICommand,
    cwcglVertexStream2iATICommand,
    cwcglVertexStream2ivATICommand,
    cwcglVertexStream2sATICommand,
    cwcglVertexStream2svATICommand,
    cwcglVertexStream3dATICommand,
    cwcglVertexStream3dvATICommand,
    cwcglVertexStream3fATICommand,
    cwcglVertexStream3fvATICommand,
    cwcglVertexStream3iATICommand,
    cwcglVertexStream3ivATICommand,
    cwcglVertexStream3sATICommand,
    cwcglVertexStream3svATICommand,
    cwcglVertexStream4dATICommand,
    cwcglVertexStream4dvATICommand,
    cwcglVertexStream4fATICommand,
    cwcglVertexStream4fvATICommand,
    cwcglVertexStream4iATICommand,
    cwcglVertexStream4ivATICommand,
    cwcglVertexStream4sATICommand,
    cwcglVertexStream4svATICommand,
    cwcglVertexWeightPointerEXTCommand,
    cwcglVertexWeightfEXTCommand,
    cwcglVertexWeightfvEXTCommand,
    cwcglVertexWeighthNVCommand,
    cwcglVertexWeighthvNVCommand,
    cwcglVideoCaptureNVCommand,
    cwcglVideoCaptureStreamParameterdvNVCommand,
    cwcglVideoCaptureStreamParameterfvNVCommand,
    cwcglVideoCaptureStreamParameterivNVCommand,
    cwcglViewportCommand,
    cwcglViewportArrayvCommand,
    cwcglViewportArrayvNVCommand,
    cwcglViewportArrayvOESCommand,
    cwcglViewportIndexedfCommand,
    cwcglViewportIndexedfOESCommand,
    cwcglViewportIndexedfNVCommand,
    cwcglViewportIndexedfvCommand,
    cwcglViewportIndexedfvOESCommand,
    cwcglViewportIndexedfvNVCommand,
    cwcglViewportPositionWScaleNVCommand,
    cwcglViewportSwizzleNVCommand,
    cwcglWaitSemaphoreEXTCommand,
    cwcglWaitSemaphoreui64NVXCommand,
    cwcglWaitSyncCommand,
    cwcglWaitSyncAPPLECommand,
    cwcglWeightPathsNVCommand,
    cwcglWeightPointerARBCommand,
    cwcglWeightPointerOESCommand,
    cwcglWeightbvARBCommand,
    cwcglWeightdvARBCommand,
    cwcglWeightfvARBCommand,
    cwcglWeightivARBCommand,
    cwcglWeightsvARBCommand,
    cwcglWeightubvARBCommand,
    cwcglWeightuivARBCommand,
    cwcglWeightusvARBCommand,
    cwcglWindowPos2dCommand,
    cwcglWindowPos2dARBCommand,
    cwcglWindowPos2dMESACommand,
    cwcglWindowPos2dvCommand,
    cwcglWindowPos2dvARBCommand,
    cwcglWindowPos2dvMESACommand,
    cwcglWindowPos2fCommand,
    cwcglWindowPos2fARBCommand,
    cwcglWindowPos2fMESACommand,
    cwcglWindowPos2fvCommand,
    cwcglWindowPos2fvARBCommand,
    cwcglWindowPos2fvMESACommand,
    cwcglWindowPos2iCommand,
    cwcglWindowPos2iARBCommand,
    cwcglWindowPos2iMESACommand,
    cwcglWindowPos2ivCommand,
    cwcglWindowPos2ivARBCommand,
    cwcglWindowPos2ivMESACommand,
    cwcglWindowPos2sCommand,
    cwcglWindowPos2sARBCommand,
    cwcglWindowPos2sMESACommand,
    cwcglWindowPos2svCommand,
    cwcglWindowPos2svARBCommand,
    cwcglWindowPos2svMESACommand,
    cwcglWindowPos3dCommand,
    cwcglWindowPos3dARBCommand,
    cwcglWindowPos3dMESACommand,
    cwcglWindowPos3dvCommand,
    cwcglWindowPos3dvARBCommand,
    cwcglWindowPos3dvMESACommand,
    cwcglWindowPos3fCommand,
    cwcglWindowPos3fARBCommand,
    cwcglWindowPos3fMESACommand,
    cwcglWindowPos3fvCommand,
    cwcglWindowPos3fvARBCommand,
    cwcglWindowPos3fvMESACommand,
    cwcglWindowPos3iCommand,
    cwcglWindowPos3iARBCommand,
    cwcglWindowPos3iMESACommand,
    cwcglWindowPos3ivCommand,
    cwcglWindowPos3ivARBCommand,
    cwcglWindowPos3ivMESACommand,
    cwcglWindowPos3sCommand,
    cwcglWindowPos3sARBCommand,
    cwcglWindowPos3sMESACommand,
    cwcglWindowPos3svCommand,
    cwcglWindowPos3svARBCommand,
    cwcglWindowPos3svMESACommand,
    cwcglWindowPos4dMESACommand,
    cwcglWindowPos4dvMESACommand,
    cwcglWindowPos4fMESACommand,
    cwcglWindowPos4fvMESACommand,
    cwcglWindowPos4iMESACommand,
    cwcglWindowPos4ivMESACommand,
    cwcglWindowPos4sMESACommand,
    cwcglWindowPos4svMESACommand,
    cwcglWindowRectanglesEXTCommand,
    cwcglWriteMaskEXTCommand,
    cwcglDrawVkImageNVCommand,
    cwcglGetVkProcAddrNVCommand,
    cwcglWaitVkSemaphoreNVCommand,
    cwcglSignalVkSemaphoreNVCommand,
    cwcglSignalVkFenceNVCommand,
    cwcglFramebufferParameteriMESACommand,
    cwcglGetFramebufferParameterivMESACommand,
} GLcommandType;

typedef struct GLcommand {
    GLcommandType type;
    void *data;
    struct GLcommand *next, *prev;
} GLcommand;

typedef struct {
    GLcommand *front, *back;
} GLcontext;

#if CWCGL_VERSION >= GL_VERSION_1_0
EXPORT void cwcglCullFace(GLcontext *context, GLenum mode);
EXPORT void cwcglFrontFace(GLcontext *context, GLenum mode);
EXPORT void cwcglHint(GLcontext *context, GLenum target, GLenum mode);
EXPORT void cwcglLineWidth(GLcontext *context, GLfloat width);
EXPORT void cwcglPointSize(GLcontext *context, GLfloat size);
EXPORT void cwcglPolygonMode(GLcontext *context, GLenum face, GLenum mode);
EXPORT void cwcglScissor(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglTexParameterf(GLcontext *context, GLenum target, GLenum pname, GLfloat param);
EXPORT void cwcglTexParameterfv(GLcontext *context, GLenum target, GLenum pname, const GLfloat * params);
EXPORT void cwcglTexParameteri(GLcontext *context, GLenum target, GLenum pname, GLint param);
EXPORT void cwcglTexParameteriv(GLcontext *context, GLenum target, GLenum pname, const GLint * params);
EXPORT void cwcglTexImage1D(GLcontext *context, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTexImage2D(GLcontext *context, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglDrawBuffer(GLcontext *context, GLenum buf);
EXPORT void cwcglClear(GLcontext *context, GLbitfield mask);
EXPORT void cwcglClearColor(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglClearStencil(GLcontext *context, GLint s);
EXPORT void cwcglClearDepth(GLcontext *context, GLdouble depth);
EXPORT void cwcglStencilMask(GLcontext *context, GLuint mask);
EXPORT void cwcglColorMask(GLcontext *context, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
EXPORT void cwcglDepthMask(GLcontext *context, GLboolean flag);
EXPORT void cwcglDisable(GLcontext *context, GLenum cap);
EXPORT void cwcglEnable(GLcontext *context, GLenum cap);
EXPORT void cwcglFinish(GLcontext *context);
EXPORT void cwcglFlush(GLcontext *context);
EXPORT void cwcglBlendFunc(GLcontext *context, GLenum sfactor, GLenum dfactor);
EXPORT void cwcglLogicOp(GLcontext *context, GLenum opcode);
EXPORT void cwcglStencilFunc(GLcontext *context, GLenum func, GLint ref, GLuint mask);
EXPORT void cwcglStencilOp(GLcontext *context, GLenum fail, GLenum zfail, GLenum zpass);
EXPORT void cwcglDepthFunc(GLcontext *context, GLenum func);
EXPORT void cwcglPixelStoref(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglPixelStorei(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglReadBuffer(GLcontext *context, GLenum src);
EXPORT void cwcglReadPixels(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
EXPORT void cwcglGetBooleanv(GLcontext *context, GLenum pname, GLboolean * data);
EXPORT void cwcglGetDoublev(GLcontext *context, GLenum pname, GLdouble * data);
EXPORT void cwcglGetError(GLcontext *context, GLenum* return_value);
EXPORT void cwcglGetFloatv(GLcontext *context, GLenum pname, GLfloat * data);
EXPORT void cwcglGetIntegerv(GLcontext *context, GLenum pname, GLint * data);
EXPORT void cwcglGetString(GLcontext *context, GLenum name, const GLubyte ** return_value);
EXPORT void cwcglGetTexImage(GLcontext *context, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
EXPORT void cwcglGetTexParameterfv(GLcontext *context, GLenum target, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetTexLevelParameterfv(GLcontext *context, GLenum target, GLint level, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexLevelParameteriv(GLcontext *context, GLenum target, GLint level, GLenum pname, GLint * params);
EXPORT void cwcglIsEnabled(GLcontext *context, GLenum cap, GLboolean* return_value);
EXPORT void cwcglDepthRange(GLcontext *context, GLdouble n, GLdouble f);
EXPORT void cwcglViewport(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglNewList(GLcontext *context, GLuint list, GLenum mode);
EXPORT void cwcglEndList(GLcontext *context);
EXPORT void cwcglCallList(GLcontext *context, GLuint list);
EXPORT void cwcglCallLists(GLcontext *context, GLsizei n, GLenum type, const void * lists);
EXPORT void cwcglDeleteLists(GLcontext *context, GLuint list, GLsizei range);
EXPORT void cwcglGenLists(GLcontext *context, GLsizei range, GLuint* return_value);
EXPORT void cwcglListBase(GLcontext *context, GLuint base);
EXPORT void cwcglBegin(GLcontext *context, GLenum mode);
EXPORT void cwcglBitmap(GLcontext *context, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
EXPORT void cwcglColor3b(GLcontext *context, GLbyte red, GLbyte green, GLbyte blue);
EXPORT void cwcglColor3bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglColor3d(GLcontext *context, GLdouble red, GLdouble green, GLdouble blue);
EXPORT void cwcglColor3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglColor3f(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue);
EXPORT void cwcglColor3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglColor3i(GLcontext *context, GLint red, GLint green, GLint blue);
EXPORT void cwcglColor3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglColor3s(GLcontext *context, GLshort red, GLshort green, GLshort blue);
EXPORT void cwcglColor3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglColor3ub(GLcontext *context, GLubyte red, GLubyte green, GLubyte blue);
EXPORT void cwcglColor3ubv(GLcontext *context, const GLubyte * v);
EXPORT void cwcglColor3ui(GLcontext *context, GLuint red, GLuint green, GLuint blue);
EXPORT void cwcglColor3uiv(GLcontext *context, const GLuint * v);
EXPORT void cwcglColor3us(GLcontext *context, GLushort red, GLushort green, GLushort blue);
EXPORT void cwcglColor3usv(GLcontext *context, const GLushort * v);
EXPORT void cwcglColor4b(GLcontext *context, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
EXPORT void cwcglColor4bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglColor4d(GLcontext *context, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
EXPORT void cwcglColor4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglColor4f(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglColor4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglColor4i(GLcontext *context, GLint red, GLint green, GLint blue, GLint alpha);
EXPORT void cwcglColor4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglColor4s(GLcontext *context, GLshort red, GLshort green, GLshort blue, GLshort alpha);
EXPORT void cwcglColor4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglColor4ub(GLcontext *context, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
EXPORT void cwcglColor4ubv(GLcontext *context, const GLubyte * v);
EXPORT void cwcglColor4ui(GLcontext *context, GLuint red, GLuint green, GLuint blue, GLuint alpha);
EXPORT void cwcglColor4uiv(GLcontext *context, const GLuint * v);
EXPORT void cwcglColor4us(GLcontext *context, GLushort red, GLushort green, GLushort blue, GLushort alpha);
EXPORT void cwcglColor4usv(GLcontext *context, const GLushort * v);
EXPORT void cwcglEdgeFlag(GLcontext *context, GLboolean flag);
EXPORT void cwcglEdgeFlagv(GLcontext *context, const GLboolean * flag);
EXPORT void cwcglEnd(GLcontext *context);
EXPORT void cwcglIndexd(GLcontext *context, GLdouble c);
EXPORT void cwcglIndexdv(GLcontext *context, const GLdouble * c);
EXPORT void cwcglIndexf(GLcontext *context, GLfloat c);
EXPORT void cwcglIndexfv(GLcontext *context, const GLfloat * c);
EXPORT void cwcglIndexi(GLcontext *context, GLint c);
EXPORT void cwcglIndexiv(GLcontext *context, const GLint * c);
EXPORT void cwcglIndexs(GLcontext *context, GLshort c);
EXPORT void cwcglIndexsv(GLcontext *context, const GLshort * c);
EXPORT void cwcglNormal3b(GLcontext *context, GLbyte nx, GLbyte ny, GLbyte nz);
EXPORT void cwcglNormal3bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglNormal3d(GLcontext *context, GLdouble nx, GLdouble ny, GLdouble nz);
EXPORT void cwcglNormal3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglNormal3f(GLcontext *context, GLfloat nx, GLfloat ny, GLfloat nz);
EXPORT void cwcglNormal3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglNormal3i(GLcontext *context, GLint nx, GLint ny, GLint nz);
EXPORT void cwcglNormal3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglNormal3s(GLcontext *context, GLshort nx, GLshort ny, GLshort nz);
EXPORT void cwcglNormal3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRasterPos2d(GLcontext *context, GLdouble x, GLdouble y);
EXPORT void cwcglRasterPos2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglRasterPos2f(GLcontext *context, GLfloat x, GLfloat y);
EXPORT void cwcglRasterPos2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglRasterPos2i(GLcontext *context, GLint x, GLint y);
EXPORT void cwcglRasterPos2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglRasterPos2s(GLcontext *context, GLshort x, GLshort y);
EXPORT void cwcglRasterPos2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRasterPos3d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglRasterPos3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglRasterPos3f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglRasterPos3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglRasterPos3i(GLcontext *context, GLint x, GLint y, GLint z);
EXPORT void cwcglRasterPos3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglRasterPos3s(GLcontext *context, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglRasterPos3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRasterPos4d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglRasterPos4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglRasterPos4f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
EXPORT void cwcglRasterPos4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglRasterPos4i(GLcontext *context, GLint x, GLint y, GLint z, GLint w);
EXPORT void cwcglRasterPos4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglRasterPos4s(GLcontext *context, GLshort x, GLshort y, GLshort z, GLshort w);
EXPORT void cwcglRasterPos4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglRectd(GLcontext *context, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
EXPORT void cwcglRectdv(GLcontext *context, const GLdouble * v1, const GLdouble * v2);
EXPORT void cwcglRectf(GLcontext *context, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
EXPORT void cwcglRectfv(GLcontext *context, const GLfloat * v1, const GLfloat * v2);
EXPORT void cwcglRecti(GLcontext *context, GLint x1, GLint y1, GLint x2, GLint y2);
EXPORT void cwcglRectiv(GLcontext *context, const GLint * v1, const GLint * v2);
EXPORT void cwcglRects(GLcontext *context, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
EXPORT void cwcglRectsv(GLcontext *context, const GLshort * v1, const GLshort * v2);
EXPORT void cwcglTexCoord1d(GLcontext *context, GLdouble s);
EXPORT void cwcglTexCoord1dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord1f(GLcontext *context, GLfloat s);
EXPORT void cwcglTexCoord1fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord1i(GLcontext *context, GLint s);
EXPORT void cwcglTexCoord1iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord1s(GLcontext *context, GLshort s);
EXPORT void cwcglTexCoord1sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglTexCoord2d(GLcontext *context, GLdouble s, GLdouble t);
EXPORT void cwcglTexCoord2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord2f(GLcontext *context, GLfloat s, GLfloat t);
EXPORT void cwcglTexCoord2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord2i(GLcontext *context, GLint s, GLint t);
EXPORT void cwcglTexCoord2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord2s(GLcontext *context, GLshort s, GLshort t);
EXPORT void cwcglTexCoord2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglTexCoord3d(GLcontext *context, GLdouble s, GLdouble t, GLdouble r);
EXPORT void cwcglTexCoord3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord3f(GLcontext *context, GLfloat s, GLfloat t, GLfloat r);
EXPORT void cwcglTexCoord3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord3i(GLcontext *context, GLint s, GLint t, GLint r);
EXPORT void cwcglTexCoord3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord3s(GLcontext *context, GLshort s, GLshort t, GLshort r);
EXPORT void cwcglTexCoord3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglTexCoord4d(GLcontext *context, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
EXPORT void cwcglTexCoord4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglTexCoord4f(GLcontext *context, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
EXPORT void cwcglTexCoord4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglTexCoord4i(GLcontext *context, GLint s, GLint t, GLint r, GLint q);
EXPORT void cwcglTexCoord4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglTexCoord4s(GLcontext *context, GLshort s, GLshort t, GLshort r, GLshort q);
EXPORT void cwcglTexCoord4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglVertex2d(GLcontext *context, GLdouble x, GLdouble y);
EXPORT void cwcglVertex2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglVertex2f(GLcontext *context, GLfloat x, GLfloat y);
EXPORT void cwcglVertex2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglVertex2i(GLcontext *context, GLint x, GLint y);
EXPORT void cwcglVertex2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglVertex2s(GLcontext *context, GLshort x, GLshort y);
EXPORT void cwcglVertex2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglVertex3d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglVertex3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglVertex3f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglVertex3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglVertex3i(GLcontext *context, GLint x, GLint y, GLint z);
EXPORT void cwcglVertex3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglVertex3s(GLcontext *context, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglVertex3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglVertex4d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglVertex4dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglVertex4f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
EXPORT void cwcglVertex4fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglVertex4i(GLcontext *context, GLint x, GLint y, GLint z, GLint w);
EXPORT void cwcglVertex4iv(GLcontext *context, const GLint * v);
EXPORT void cwcglVertex4s(GLcontext *context, GLshort x, GLshort y, GLshort z, GLshort w);
EXPORT void cwcglVertex4sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglClipPlane(GLcontext *context, GLenum plane, const GLdouble * equation);
EXPORT void cwcglColorMaterial(GLcontext *context, GLenum face, GLenum mode);
EXPORT void cwcglFogf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglFogfv(GLcontext *context, GLenum pname, const GLfloat * params);
EXPORT void cwcglFogi(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglFogiv(GLcontext *context, GLenum pname, const GLint * params);
EXPORT void cwcglLightf(GLcontext *context, GLenum light, GLenum pname, GLfloat param);
EXPORT void cwcglLightfv(GLcontext *context, GLenum light, GLenum pname, const GLfloat * params);
EXPORT void cwcglLighti(GLcontext *context, GLenum light, GLenum pname, GLint param);
EXPORT void cwcglLightiv(GLcontext *context, GLenum light, GLenum pname, const GLint * params);
EXPORT void cwcglLightModelf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglLightModelfv(GLcontext *context, GLenum pname, const GLfloat * params);
EXPORT void cwcglLightModeli(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglLightModeliv(GLcontext *context, GLenum pname, const GLint * params);
EXPORT void cwcglLineStipple(GLcontext *context, GLint factor, GLushort pattern);
EXPORT void cwcglMaterialf(GLcontext *context, GLenum face, GLenum pname, GLfloat param);
EXPORT void cwcglMaterialfv(GLcontext *context, GLenum face, GLenum pname, const GLfloat * params);
EXPORT void cwcglMateriali(GLcontext *context, GLenum face, GLenum pname, GLint param);
EXPORT void cwcglMaterialiv(GLcontext *context, GLenum face, GLenum pname, const GLint * params);
EXPORT void cwcglPolygonStipple(GLcontext *context, const GLubyte * mask);
EXPORT void cwcglShadeModel(GLcontext *context, GLenum mode);
EXPORT void cwcglTexEnvf(GLcontext *context, GLenum target, GLenum pname, GLfloat param);
EXPORT void cwcglTexEnvfv(GLcontext *context, GLenum target, GLenum pname, const GLfloat * params);
EXPORT void cwcglTexEnvi(GLcontext *context, GLenum target, GLenum pname, GLint param);
EXPORT void cwcglTexEnviv(GLcontext *context, GLenum target, GLenum pname, const GLint * params);
EXPORT void cwcglTexGend(GLcontext *context, GLenum coord, GLenum pname, GLdouble param);
EXPORT void cwcglTexGendv(GLcontext *context, GLenum coord, GLenum pname, const GLdouble * params);
EXPORT void cwcglTexGenf(GLcontext *context, GLenum coord, GLenum pname, GLfloat param);
EXPORT void cwcglTexGenfv(GLcontext *context, GLenum coord, GLenum pname, const GLfloat * params);
EXPORT void cwcglTexGeni(GLcontext *context, GLenum coord, GLenum pname, GLint param);
EXPORT void cwcglTexGeniv(GLcontext *context, GLenum coord, GLenum pname, const GLint * params);
EXPORT void cwcglFeedbackBuffer(GLcontext *context, GLsizei size, GLenum type, GLfloat * buffer);
EXPORT void cwcglSelectBuffer(GLcontext *context, GLsizei size, GLuint * buffer);
EXPORT void cwcglRenderMode(GLcontext *context, GLenum mode, GLint* return_value);
EXPORT void cwcglInitNames(GLcontext *context);
EXPORT void cwcglLoadName(GLcontext *context, GLuint name);
EXPORT void cwcglPassThrough(GLcontext *context, GLfloat token);
EXPORT void cwcglPopName(GLcontext *context);
EXPORT void cwcglPushName(GLcontext *context, GLuint name);
EXPORT void cwcglClearAccum(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglClearIndex(GLcontext *context, GLfloat c);
EXPORT void cwcglIndexMask(GLcontext *context, GLuint mask);
EXPORT void cwcglAccum(GLcontext *context, GLenum op, GLfloat value);
EXPORT void cwcglPopAttrib(GLcontext *context);
EXPORT void cwcglPushAttrib(GLcontext *context, GLbitfield mask);
EXPORT void cwcglMap1d(GLcontext *context, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
EXPORT void cwcglMap1f(GLcontext *context, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
EXPORT void cwcglMap2d(GLcontext *context, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
EXPORT void cwcglMap2f(GLcontext *context, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
EXPORT void cwcglMapGrid1d(GLcontext *context, GLint un, GLdouble u1, GLdouble u2);
EXPORT void cwcglMapGrid1f(GLcontext *context, GLint un, GLfloat u1, GLfloat u2);
EXPORT void cwcglMapGrid2d(GLcontext *context, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
EXPORT void cwcglMapGrid2f(GLcontext *context, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
EXPORT void cwcglEvalCoord1d(GLcontext *context, GLdouble u);
EXPORT void cwcglEvalCoord1dv(GLcontext *context, const GLdouble * u);
EXPORT void cwcglEvalCoord1f(GLcontext *context, GLfloat u);
EXPORT void cwcglEvalCoord1fv(GLcontext *context, const GLfloat * u);
EXPORT void cwcglEvalCoord2d(GLcontext *context, GLdouble u, GLdouble v);
EXPORT void cwcglEvalCoord2dv(GLcontext *context, const GLdouble * u);
EXPORT void cwcglEvalCoord2f(GLcontext *context, GLfloat u, GLfloat v);
EXPORT void cwcglEvalCoord2fv(GLcontext *context, const GLfloat * u);
EXPORT void cwcglEvalMesh1(GLcontext *context, GLenum mode, GLint i1, GLint i2);
EXPORT void cwcglEvalPoint1(GLcontext *context, GLint i);
EXPORT void cwcglEvalMesh2(GLcontext *context, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
EXPORT void cwcglEvalPoint2(GLcontext *context, GLint i, GLint j);
EXPORT void cwcglAlphaFunc(GLcontext *context, GLenum func, GLfloat ref);
EXPORT void cwcglPixelZoom(GLcontext *context, GLfloat xfactor, GLfloat yfactor);
EXPORT void cwcglPixelTransferf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglPixelTransferi(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglPixelMapfv(GLcontext *context, GLenum map, GLsizei mapsize, const GLfloat * values);
EXPORT void cwcglPixelMapuiv(GLcontext *context, GLenum map, GLsizei mapsize, const GLuint * values);
EXPORT void cwcglPixelMapusv(GLcontext *context, GLenum map, GLsizei mapsize, const GLushort * values);
EXPORT void cwcglCopyPixels(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
EXPORT void cwcglDrawPixels(GLcontext *context, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglGetClipPlane(GLcontext *context, GLenum plane, GLdouble * equation);
EXPORT void cwcglGetLightfv(GLcontext *context, GLenum light, GLenum pname, GLfloat * params);
EXPORT void cwcglGetLightiv(GLcontext *context, GLenum light, GLenum pname, GLint * params);
EXPORT void cwcglGetMapdv(GLcontext *context, GLenum target, GLenum query, GLdouble * v);
EXPORT void cwcglGetMapfv(GLcontext *context, GLenum target, GLenum query, GLfloat * v);
EXPORT void cwcglGetMapiv(GLcontext *context, GLenum target, GLenum query, GLint * v);
EXPORT void cwcglGetMaterialfv(GLcontext *context, GLenum face, GLenum pname, GLfloat * params);
EXPORT void cwcglGetMaterialiv(GLcontext *context, GLenum face, GLenum pname, GLint * params);
EXPORT void cwcglGetPixelMapfv(GLcontext *context, GLenum map, GLfloat * values);
EXPORT void cwcglGetPixelMapuiv(GLcontext *context, GLenum map, GLuint * values);
EXPORT void cwcglGetPixelMapusv(GLcontext *context, GLenum map, GLushort * values);
EXPORT void cwcglGetPolygonStipple(GLcontext *context, GLubyte * mask);
EXPORT void cwcglGetTexEnvfv(GLcontext *context, GLenum target, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexEnviv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetTexGendv(GLcontext *context, GLenum coord, GLenum pname, GLdouble * params);
EXPORT void cwcglGetTexGenfv(GLcontext *context, GLenum coord, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTexGeniv(GLcontext *context, GLenum coord, GLenum pname, GLint * params);
EXPORT void cwcglIsList(GLcontext *context, GLuint list, GLboolean* return_value);
EXPORT void cwcglFrustum(GLcontext *context, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
EXPORT void cwcglLoadIdentity(GLcontext *context);
EXPORT void cwcglLoadMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglLoadMatrixd(GLcontext *context, const GLdouble * m);
EXPORT void cwcglMatrixMode(GLcontext *context, GLenum mode);
EXPORT void cwcglMultMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglMultMatrixd(GLcontext *context, const GLdouble * m);
EXPORT void cwcglOrtho(GLcontext *context, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
EXPORT void cwcglPopMatrix(GLcontext *context);
EXPORT void cwcglPushMatrix(GLcontext *context);
EXPORT void cwcglRotated(GLcontext *context, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglRotatef(GLcontext *context, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglScaled(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglScalef(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglTranslated(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglTranslatef(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_1
EXPORT void cwcglDrawArrays(GLcontext *context, GLenum mode, GLint first, GLsizei count);
EXPORT void cwcglDrawElements(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices);
EXPORT void cwcglGetPointerv(GLcontext *context, GLenum pname, void ** params);
EXPORT void cwcglPolygonOffset(GLcontext *context, GLfloat factor, GLfloat units);
EXPORT void cwcglCopyTexImage1D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
EXPORT void cwcglCopyTexImage2D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
EXPORT void cwcglCopyTexSubImage1D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
EXPORT void cwcglCopyTexSubImage2D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglTexSubImage1D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTexSubImage2D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglBindTexture(GLcontext *context, GLenum target, GLuint texture);
EXPORT void cwcglDeleteTextures(GLcontext *context, GLsizei n, const GLuint * textures);
EXPORT void cwcglGenTextures(GLcontext *context, GLsizei n, GLuint * textures);
EXPORT void cwcglIsTexture(GLcontext *context, GLuint texture, GLboolean* return_value);
EXPORT void cwcglArrayElement(GLcontext *context, GLint i);
EXPORT void cwcglColorPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglDisableClientState(GLcontext *context, GLenum array);
EXPORT void cwcglEdgeFlagPointer(GLcontext *context, GLsizei stride, const void * pointer);
EXPORT void cwcglEnableClientState(GLcontext *context, GLenum array);
EXPORT void cwcglIndexPointer(GLcontext *context, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglInterleavedArrays(GLcontext *context, GLenum format, GLsizei stride, const void * pointer);
EXPORT void cwcglNormalPointer(GLcontext *context, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglTexCoordPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglVertexPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglAreTexturesResident(GLcontext *context, GLsizei n, const GLuint * textures, GLboolean * residences, GLboolean* return_value);
EXPORT void cwcglPrioritizeTextures(GLcontext *context, GLsizei n, const GLuint * textures, const GLfloat * priorities);
EXPORT void cwcglIndexub(GLcontext *context, GLubyte c);
EXPORT void cwcglIndexubv(GLcontext *context, const GLubyte * c);
EXPORT void cwcglPopClientAttrib(GLcontext *context);
EXPORT void cwcglPushClientAttrib(GLcontext *context, GLbitfield mask);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_2
EXPORT void cwcglDrawRangeElements(GLcontext *context, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
EXPORT void cwcglTexImage3D(GLcontext *context, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTexSubImage3D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglCopyTexSubImage3D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_3
EXPORT void cwcglActiveTexture(GLcontext *context, GLenum texture);
EXPORT void cwcglSampleCoverage(GLcontext *context, GLfloat value, GLboolean invert);
EXPORT void cwcglCompressedTexImage3D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexImage2D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexImage1D(GLcontext *context, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexSubImage3D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexSubImage2D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTexSubImage1D(GLcontext *context, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglGetCompressedTexImage(GLcontext *context, GLenum target, GLint level, void * img);
EXPORT void cwcglClientActiveTexture(GLcontext *context, GLenum texture);
EXPORT void cwcglMultiTexCoord1d(GLcontext *context, GLenum target, GLdouble s);
EXPORT void cwcglMultiTexCoord1dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord1f(GLcontext *context, GLenum target, GLfloat s);
EXPORT void cwcglMultiTexCoord1fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord1i(GLcontext *context, GLenum target, GLint s);
EXPORT void cwcglMultiTexCoord1iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord1s(GLcontext *context, GLenum target, GLshort s);
EXPORT void cwcglMultiTexCoord1sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglMultiTexCoord2d(GLcontext *context, GLenum target, GLdouble s, GLdouble t);
EXPORT void cwcglMultiTexCoord2dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord2f(GLcontext *context, GLenum target, GLfloat s, GLfloat t);
EXPORT void cwcglMultiTexCoord2fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord2i(GLcontext *context, GLenum target, GLint s, GLint t);
EXPORT void cwcglMultiTexCoord2iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord2s(GLcontext *context, GLenum target, GLshort s, GLshort t);
EXPORT void cwcglMultiTexCoord2sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglMultiTexCoord3d(GLcontext *context, GLenum target, GLdouble s, GLdouble t, GLdouble r);
EXPORT void cwcglMultiTexCoord3dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord3f(GLcontext *context, GLenum target, GLfloat s, GLfloat t, GLfloat r);
EXPORT void cwcglMultiTexCoord3fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord3i(GLcontext *context, GLenum target, GLint s, GLint t, GLint r);
EXPORT void cwcglMultiTexCoord3iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord3s(GLcontext *context, GLenum target, GLshort s, GLshort t, GLshort r);
EXPORT void cwcglMultiTexCoord3sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglMultiTexCoord4d(GLcontext *context, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
EXPORT void cwcglMultiTexCoord4dv(GLcontext *context, GLenum target, const GLdouble * v);
EXPORT void cwcglMultiTexCoord4f(GLcontext *context, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
EXPORT void cwcglMultiTexCoord4fv(GLcontext *context, GLenum target, const GLfloat * v);
EXPORT void cwcglMultiTexCoord4i(GLcontext *context, GLenum target, GLint s, GLint t, GLint r, GLint q);
EXPORT void cwcglMultiTexCoord4iv(GLcontext *context, GLenum target, const GLint * v);
EXPORT void cwcglMultiTexCoord4s(GLcontext *context, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
EXPORT void cwcglMultiTexCoord4sv(GLcontext *context, GLenum target, const GLshort * v);
EXPORT void cwcglLoadTransposeMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglLoadTransposeMatrixd(GLcontext *context, const GLdouble * m);
EXPORT void cwcglMultTransposeMatrixf(GLcontext *context, const GLfloat * m);
EXPORT void cwcglMultTransposeMatrixd(GLcontext *context, const GLdouble * m);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_4
EXPORT void cwcglBlendFuncSeparate(GLcontext *context, GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
EXPORT void cwcglMultiDrawArrays(GLcontext *context, GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
EXPORT void cwcglMultiDrawElements(GLcontext *context, GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
EXPORT void cwcglPointParameterf(GLcontext *context, GLenum pname, GLfloat param);
EXPORT void cwcglPointParameterfv(GLcontext *context, GLenum pname, const GLfloat * params);
EXPORT void cwcglPointParameteri(GLcontext *context, GLenum pname, GLint param);
EXPORT void cwcglPointParameteriv(GLcontext *context, GLenum pname, const GLint * params);
EXPORT void cwcglFogCoordf(GLcontext *context, GLfloat coord);
EXPORT void cwcglFogCoordfv(GLcontext *context, const GLfloat * coord);
EXPORT void cwcglFogCoordd(GLcontext *context, GLdouble coord);
EXPORT void cwcglFogCoorddv(GLcontext *context, const GLdouble * coord);
EXPORT void cwcglFogCoordPointer(GLcontext *context, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglSecondaryColor3b(GLcontext *context, GLbyte red, GLbyte green, GLbyte blue);
EXPORT void cwcglSecondaryColor3bv(GLcontext *context, const GLbyte * v);
EXPORT void cwcglSecondaryColor3d(GLcontext *context, GLdouble red, GLdouble green, GLdouble blue);
EXPORT void cwcglSecondaryColor3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglSecondaryColor3f(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue);
EXPORT void cwcglSecondaryColor3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglSecondaryColor3i(GLcontext *context, GLint red, GLint green, GLint blue);
EXPORT void cwcglSecondaryColor3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglSecondaryColor3s(GLcontext *context, GLshort red, GLshort green, GLshort blue);
EXPORT void cwcglSecondaryColor3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglSecondaryColor3ub(GLcontext *context, GLubyte red, GLubyte green, GLubyte blue);
EXPORT void cwcglSecondaryColor3ubv(GLcontext *context, const GLubyte * v);
EXPORT void cwcglSecondaryColor3ui(GLcontext *context, GLuint red, GLuint green, GLuint blue);
EXPORT void cwcglSecondaryColor3uiv(GLcontext *context, const GLuint * v);
EXPORT void cwcglSecondaryColor3us(GLcontext *context, GLushort red, GLushort green, GLushort blue);
EXPORT void cwcglSecondaryColor3usv(GLcontext *context, const GLushort * v);
EXPORT void cwcglSecondaryColorPointer(GLcontext *context, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglWindowPos2d(GLcontext *context, GLdouble x, GLdouble y);
EXPORT void cwcglWindowPos2dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglWindowPos2f(GLcontext *context, GLfloat x, GLfloat y);
EXPORT void cwcglWindowPos2fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglWindowPos2i(GLcontext *context, GLint x, GLint y);
EXPORT void cwcglWindowPos2iv(GLcontext *context, const GLint * v);
EXPORT void cwcglWindowPos2s(GLcontext *context, GLshort x, GLshort y);
EXPORT void cwcglWindowPos2sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglWindowPos3d(GLcontext *context, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglWindowPos3dv(GLcontext *context, const GLdouble * v);
EXPORT void cwcglWindowPos3f(GLcontext *context, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglWindowPos3fv(GLcontext *context, const GLfloat * v);
EXPORT void cwcglWindowPos3i(GLcontext *context, GLint x, GLint y, GLint z);
EXPORT void cwcglWindowPos3iv(GLcontext *context, const GLint * v);
EXPORT void cwcglWindowPos3s(GLcontext *context, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglWindowPos3sv(GLcontext *context, const GLshort * v);
EXPORT void cwcglBlendColor(GLcontext *context, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
EXPORT void cwcglBlendEquation(GLcontext *context, GLenum mode);
#endif
#if CWCGL_VERSION >= GL_VERSION_1_5
EXPORT void cwcglGenQueries(GLcontext *context, GLsizei n, GLuint * ids);
EXPORT void cwcglDeleteQueries(GLcontext *context, GLsizei n, const GLuint * ids);
EXPORT void cwcglIsQuery(GLcontext *context, GLuint id, GLboolean* return_value);
EXPORT void cwcglBeginQuery(GLcontext *context, GLenum target, GLuint id);
EXPORT void cwcglEndQuery(GLcontext *context, GLenum target);
EXPORT void cwcglGetQueryiv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetQueryObjectiv(GLcontext *context, GLuint id, GLenum pname, GLint * params);
EXPORT void cwcglGetQueryObjectuiv(GLcontext *context, GLuint id, GLenum pname, GLuint * params);
EXPORT void cwcglBindBuffer(GLcontext *context, GLenum target, GLuint buffer);
EXPORT void cwcglDeleteBuffers(GLcontext *context, GLsizei n, const GLuint * buffers);
EXPORT void cwcglGenBuffers(GLcontext *context, GLsizei n, GLuint * buffers);
EXPORT void cwcglIsBuffer(GLcontext *context, GLuint buffer, GLboolean* return_value);
EXPORT void cwcglBufferData(GLcontext *context, GLenum target, GLsizeiptr size, const void * data, GLenum usage);
EXPORT void cwcglBufferSubData(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
EXPORT void cwcglGetBufferSubData(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr size, void * data);
EXPORT void cwcglMapBuffer(GLcontext *context, GLenum target, GLenum access, void ** return_value);
EXPORT void cwcglUnmapBuffer(GLcontext *context, GLenum target, GLboolean* return_value);
EXPORT void cwcglGetBufferParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetBufferPointerv(GLcontext *context, GLenum target, GLenum pname, void ** params);
#endif
#if CWCGL_VERSION >= GL_VERSION_2_0
EXPORT void cwcglBlendEquationSeparate(GLcontext *context, GLenum modeRGB, GLenum modeAlpha);
EXPORT void cwcglDrawBuffers(GLcontext *context, GLsizei n, const GLenum * bufs);
EXPORT void cwcglStencilOpSeparate(GLcontext *context, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
EXPORT void cwcglStencilFuncSeparate(GLcontext *context, GLenum face, GLenum func, GLint ref, GLuint mask);
EXPORT void cwcglStencilMaskSeparate(GLcontext *context, GLenum face, GLuint mask);
EXPORT void cwcglAttachShader(GLcontext *context, GLuint program, GLuint shader);
EXPORT void cwcglBindAttribLocation(GLcontext *context, GLuint program, GLuint index, const GLchar * name);
EXPORT void cwcglCompileShader(GLcontext *context, GLuint shader);
EXPORT void cwcglCreateProgram(GLcontext *context, GLuint* return_value);
EXPORT void cwcglCreateShader(GLcontext *context, GLenum type, GLuint* return_value);
EXPORT void cwcglDeleteProgram(GLcontext *context, GLuint program);
EXPORT void cwcglDeleteShader(GLcontext *context, GLuint shader);
EXPORT void cwcglDetachShader(GLcontext *context, GLuint program, GLuint shader);
EXPORT void cwcglDisableVertexAttribArray(GLcontext *context, GLuint index);
EXPORT void cwcglEnableVertexAttribArray(GLcontext *context, GLuint index);
EXPORT void cwcglGetActiveAttrib(GLcontext *context, GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
EXPORT void cwcglGetActiveUniform(GLcontext *context, GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
EXPORT void cwcglGetAttachedShaders(GLcontext *context, GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
EXPORT void cwcglGetAttribLocation(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetProgramiv(GLcontext *context, GLuint program, GLenum pname, GLint * params);
EXPORT void cwcglGetProgramInfoLog(GLcontext *context, GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
EXPORT void cwcglGetShaderiv(GLcontext *context, GLuint shader, GLenum pname, GLint * params);
EXPORT void cwcglGetShaderInfoLog(GLcontext *context, GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
EXPORT void cwcglGetShaderSource(GLcontext *context, GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
EXPORT void cwcglGetUniformLocation(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetUniformfv(GLcontext *context, GLuint program, GLint location, GLfloat * params);
EXPORT void cwcglGetUniformiv(GLcontext *context, GLuint program, GLint location, GLint * params);
EXPORT void cwcglGetVertexAttribdv(GLcontext *context, GLuint index, GLenum pname, GLdouble * params);
EXPORT void cwcglGetVertexAttribfv(GLcontext *context, GLuint index, GLenum pname, GLfloat * params);
EXPORT void cwcglGetVertexAttribiv(GLcontext *context, GLuint index, GLenum pname, GLint * params);
EXPORT void cwcglGetVertexAttribPointerv(GLcontext *context, GLuint index, GLenum pname, void ** pointer);
EXPORT void cwcglIsProgram(GLcontext *context, GLuint program, GLboolean* return_value);
EXPORT void cwcglIsShader(GLcontext *context, GLuint shader, GLboolean* return_value);
EXPORT void cwcglLinkProgram(GLcontext *context, GLuint program);
EXPORT void cwcglShaderSource(GLcontext *context, GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
EXPORT void cwcglUseProgram(GLcontext *context, GLuint program);
EXPORT void cwcglUniform1f(GLcontext *context, GLint location, GLfloat v0);
EXPORT void cwcglUniform2f(GLcontext *context, GLint location, GLfloat v0, GLfloat v1);
EXPORT void cwcglUniform3f(GLcontext *context, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
EXPORT void cwcglUniform4f(GLcontext *context, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
EXPORT void cwcglUniform1i(GLcontext *context, GLint location, GLint v0);
EXPORT void cwcglUniform2i(GLcontext *context, GLint location, GLint v0, GLint v1);
EXPORT void cwcglUniform3i(GLcontext *context, GLint location, GLint v0, GLint v1, GLint v2);
EXPORT void cwcglUniform4i(GLcontext *context, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
EXPORT void cwcglUniform1fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform2fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform3fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform4fv(GLcontext *context, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglUniform1iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniform2iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniform3iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniform4iv(GLcontext *context, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglUniformMatrix2fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix3fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix4fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglValidateProgram(GLcontext *context, GLuint program);
EXPORT void cwcglVertexAttrib1d(GLcontext *context, GLuint index, GLdouble x);
EXPORT void cwcglVertexAttrib1dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib1f(GLcontext *context, GLuint index, GLfloat x);
EXPORT void cwcglVertexAttrib1fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib1s(GLcontext *context, GLuint index, GLshort x);
EXPORT void cwcglVertexAttrib1sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib2d(GLcontext *context, GLuint index, GLdouble x, GLdouble y);
EXPORT void cwcglVertexAttrib2dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib2f(GLcontext *context, GLuint index, GLfloat x, GLfloat y);
EXPORT void cwcglVertexAttrib2fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib2s(GLcontext *context, GLuint index, GLshort x, GLshort y);
EXPORT void cwcglVertexAttrib2sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib3d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglVertexAttrib3dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib3f(GLcontext *context, GLuint index, GLfloat x, GLfloat y, GLfloat z);
EXPORT void cwcglVertexAttrib3fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib3s(GLcontext *context, GLuint index, GLshort x, GLshort y, GLshort z);
EXPORT void cwcglVertexAttrib3sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib4Nbv(GLcontext *context, GLuint index, const GLbyte * v);
EXPORT void cwcglVertexAttrib4Niv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttrib4Nsv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib4Nub(GLcontext *context, GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
EXPORT void cwcglVertexAttrib4Nubv(GLcontext *context, GLuint index, const GLubyte * v);
EXPORT void cwcglVertexAttrib4Nuiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttrib4Nusv(GLcontext *context, GLuint index, const GLushort * v);
EXPORT void cwcglVertexAttrib4bv(GLcontext *context, GLuint index, const GLbyte * v);
EXPORT void cwcglVertexAttrib4d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglVertexAttrib4dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttrib4f(GLcontext *context, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
EXPORT void cwcglVertexAttrib4fv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglVertexAttrib4iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttrib4s(GLcontext *context, GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
EXPORT void cwcglVertexAttrib4sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttrib4ubv(GLcontext *context, GLuint index, const GLubyte * v);
EXPORT void cwcglVertexAttrib4uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttrib4usv(GLcontext *context, GLuint index, const GLushort * v);
EXPORT void cwcglVertexAttribPointer(GLcontext *context, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
#endif
#if CWCGL_VERSION >= GL_VERSION_2_1
EXPORT void cwcglUniformMatrix2x3fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix3x2fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix2x4fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix4x2fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix3x4fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglUniformMatrix4x3fv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_0
EXPORT void cwcglColorMaski(GLcontext *context, GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
EXPORT void cwcglGetBooleani_v(GLcontext *context, GLenum target, GLuint index, GLboolean * data);
EXPORT void cwcglGetIntegeri_v(GLcontext *context, GLenum target, GLuint index, GLint * data);
EXPORT void cwcglEnablei(GLcontext *context, GLenum target, GLuint index);
EXPORT void cwcglDisablei(GLcontext *context, GLenum target, GLuint index);
EXPORT void cwcglIsEnabledi(GLcontext *context, GLenum target, GLuint index, GLboolean* return_value);
EXPORT void cwcglBeginTransformFeedback(GLcontext *context, GLenum primitiveMode);
EXPORT void cwcglEndTransformFeedback(GLcontext *context);
EXPORT void cwcglBindBufferRange(GLcontext *context, GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglBindBufferBase(GLcontext *context, GLenum target, GLuint index, GLuint buffer);
EXPORT void cwcglTransformFeedbackVaryings(GLcontext *context, GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
EXPORT void cwcglGetTransformFeedbackVarying(GLcontext *context, GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
EXPORT void cwcglClampColor(GLcontext *context, GLenum target, GLenum clamp);
EXPORT void cwcglBeginConditionalRender(GLcontext *context, GLuint id, GLenum mode);
EXPORT void cwcglEndConditionalRender(GLcontext *context);
EXPORT void cwcglVertexAttribIPointer(GLcontext *context, GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglGetVertexAttribIiv(GLcontext *context, GLuint index, GLenum pname, GLint * params);
EXPORT void cwcglGetVertexAttribIuiv(GLcontext *context, GLuint index, GLenum pname, GLuint * params);
EXPORT void cwcglVertexAttribI1i(GLcontext *context, GLuint index, GLint x);
EXPORT void cwcglVertexAttribI2i(GLcontext *context, GLuint index, GLint x, GLint y);
EXPORT void cwcglVertexAttribI3i(GLcontext *context, GLuint index, GLint x, GLint y, GLint z);
EXPORT void cwcglVertexAttribI4i(GLcontext *context, GLuint index, GLint x, GLint y, GLint z, GLint w);
EXPORT void cwcglVertexAttribI1ui(GLcontext *context, GLuint index, GLuint x);
EXPORT void cwcglVertexAttribI2ui(GLcontext *context, GLuint index, GLuint x, GLuint y);
EXPORT void cwcglVertexAttribI3ui(GLcontext *context, GLuint index, GLuint x, GLuint y, GLuint z);
EXPORT void cwcglVertexAttribI4ui(GLcontext *context, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
EXPORT void cwcglVertexAttribI1iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI2iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI3iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI4iv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglVertexAttribI1uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI2uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI3uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI4uiv(GLcontext *context, GLuint index, const GLuint * v);
EXPORT void cwcglVertexAttribI4bv(GLcontext *context, GLuint index, const GLbyte * v);
EXPORT void cwcglVertexAttribI4sv(GLcontext *context, GLuint index, const GLshort * v);
EXPORT void cwcglVertexAttribI4ubv(GLcontext *context, GLuint index, const GLubyte * v);
EXPORT void cwcglVertexAttribI4usv(GLcontext *context, GLuint index, const GLushort * v);
EXPORT void cwcglGetUniformuiv(GLcontext *context, GLuint program, GLint location, GLuint * params);
EXPORT void cwcglBindFragDataLocation(GLcontext *context, GLuint program, GLuint color, const GLchar * name);
EXPORT void cwcglGetFragDataLocation(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglUniform1ui(GLcontext *context, GLint location, GLuint v0);
EXPORT void cwcglUniform2ui(GLcontext *context, GLint location, GLuint v0, GLuint v1);
EXPORT void cwcglUniform3ui(GLcontext *context, GLint location, GLuint v0, GLuint v1, GLuint v2);
EXPORT void cwcglUniform4ui(GLcontext *context, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
EXPORT void cwcglUniform1uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglUniform2uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglUniform3uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglUniform4uiv(GLcontext *context, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglTexParameterIiv(GLcontext *context, GLenum target, GLenum pname, const GLint * params);
EXPORT void cwcglTexParameterIuiv(GLcontext *context, GLenum target, GLenum pname, const GLuint * params);
EXPORT void cwcglGetTexParameterIiv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetTexParameterIuiv(GLcontext *context, GLenum target, GLenum pname, GLuint * params);
EXPORT void cwcglClearBufferiv(GLcontext *context, GLenum buffer, GLint drawbuffer, const GLint * value);
EXPORT void cwcglClearBufferuiv(GLcontext *context, GLenum buffer, GLint drawbuffer, const GLuint * value);
EXPORT void cwcglClearBufferfv(GLcontext *context, GLenum buffer, GLint drawbuffer, const GLfloat * value);
EXPORT void cwcglClearBufferfi(GLcontext *context, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
EXPORT void cwcglGetStringi(GLcontext *context, GLenum name, GLuint index, const GLubyte ** return_value);
EXPORT void cwcglIsRenderbuffer(GLcontext *context, GLuint renderbuffer, GLboolean* return_value);
EXPORT void cwcglBindRenderbuffer(GLcontext *context, GLenum target, GLuint renderbuffer);
EXPORT void cwcglDeleteRenderbuffers(GLcontext *context, GLsizei n, const GLuint * renderbuffers);
EXPORT void cwcglGenRenderbuffers(GLcontext *context, GLsizei n, GLuint * renderbuffers);
EXPORT void cwcglRenderbufferStorage(GLcontext *context, GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglGetRenderbufferParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglIsFramebuffer(GLcontext *context, GLuint framebuffer, GLboolean* return_value);
EXPORT void cwcglBindFramebuffer(GLcontext *context, GLenum target, GLuint framebuffer);
EXPORT void cwcglDeleteFramebuffers(GLcontext *context, GLsizei n, const GLuint * framebuffers);
EXPORT void cwcglGenFramebuffers(GLcontext *context, GLsizei n, GLuint * framebuffers);
EXPORT void cwcglCheckFramebufferStatus(GLcontext *context, GLenum target, GLenum* return_value);
EXPORT void cwcglFramebufferTexture1D(GLcontext *context, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
EXPORT void cwcglFramebufferTexture2D(GLcontext *context, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
EXPORT void cwcglFramebufferTexture3D(GLcontext *context, GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
EXPORT void cwcglFramebufferRenderbuffer(GLcontext *context, GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
EXPORT void cwcglGetFramebufferAttachmentParameteriv(GLcontext *context, GLenum target, GLenum attachment, GLenum pname, GLint * params);
EXPORT void cwcglGenerateMipmap(GLcontext *context, GLenum target);
EXPORT void cwcglBlitFramebuffer(GLcontext *context, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
EXPORT void cwcglRenderbufferStorageMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglFramebufferTextureLayer(GLcontext *context, GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
EXPORT void cwcglMapBufferRange(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access, void ** return_value);
EXPORT void cwcglFlushMappedBufferRange(GLcontext *context, GLenum target, GLintptr offset, GLsizeiptr length);
EXPORT void cwcglBindVertexArray(GLcontext *context, GLuint array);
EXPORT void cwcglDeleteVertexArrays(GLcontext *context, GLsizei n, const GLuint * arrays);
EXPORT void cwcglGenVertexArrays(GLcontext *context, GLsizei n, GLuint * arrays);
EXPORT void cwcglIsVertexArray(GLcontext *context, GLuint array, GLboolean* return_value);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_1
EXPORT void cwcglDrawArraysInstanced(GLcontext *context, GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
EXPORT void cwcglDrawElementsInstanced(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
EXPORT void cwcglTexBuffer(GLcontext *context, GLenum target, GLenum internalformat, GLuint buffer);
EXPORT void cwcglPrimitiveRestartIndex(GLcontext *context, GLuint index);
EXPORT void cwcglCopyBufferSubData(GLcontext *context, GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
EXPORT void cwcglGetUniformIndices(GLcontext *context, GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
EXPORT void cwcglGetActiveUniformsiv(GLcontext *context, GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
EXPORT void cwcglGetActiveUniformName(GLcontext *context, GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
EXPORT void cwcglGetUniformBlockIndex(GLcontext *context, GLuint program, const GLchar * uniformBlockName, GLuint* return_value);
EXPORT void cwcglGetActiveUniformBlockiv(GLcontext *context, GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
EXPORT void cwcglGetActiveUniformBlockName(GLcontext *context, GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
EXPORT void cwcglUniformBlockBinding(GLcontext *context, GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_2
EXPORT void cwcglDrawElementsBaseVertex(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
EXPORT void cwcglDrawRangeElementsBaseVertex(GLcontext *context, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
EXPORT void cwcglDrawElementsInstancedBaseVertex(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
EXPORT void cwcglMultiDrawElementsBaseVertex(GLcontext *context, GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
EXPORT void cwcglProvokingVertex(GLcontext *context, GLenum mode);
EXPORT void cwcglFenceSync(GLcontext *context, GLenum condition, GLbitfield flags, GLsync* return_value);
EXPORT void cwcglIsSync(GLcontext *context, GLsync sync, GLboolean* return_value);
EXPORT void cwcglDeleteSync(GLcontext *context, GLsync sync);
EXPORT void cwcglClientWaitSync(GLcontext *context, GLsync sync, GLbitfield flags, GLuint64 timeout, GLenum* return_value);
EXPORT void cwcglWaitSync(GLcontext *context, GLsync sync, GLbitfield flags, GLuint64 timeout);
EXPORT void cwcglGetInteger64v(GLcontext *context, GLenum pname, GLint64 * data);
EXPORT void cwcglGetSynciv(GLcontext *context, GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
EXPORT void cwcglGetInteger64i_v(GLcontext *context, GLenum target, GLuint index, GLint64 * data);
EXPORT void cwcglGetBufferParameteri64v(GLcontext *context, GLenum target, GLenum pname, GLint64 * params);
EXPORT void cwcglFramebufferTexture(GLcontext *context, GLenum target, GLenum attachment, GLuint texture, GLint level);
EXPORT void cwcglTexImage2DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
EXPORT void cwcglTexImage3DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
EXPORT void cwcglGetMultisamplefv(GLcontext *context, GLenum pname, GLuint index, GLfloat * val);
EXPORT void cwcglSampleMaski(GLcontext *context, GLuint maskNumber, GLbitfield mask);
#endif
#if CWCGL_VERSION >= GL_VERSION_3_3
EXPORT void cwcglBindFragDataLocationIndexed(GLcontext *context, GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
EXPORT void cwcglGetFragDataIndex(GLcontext *context, GLuint program, const GLchar * name, GLint* return_value);
EXPORT void cwcglGenSamplers(GLcontext *context, GLsizei count, GLuint * samplers);
EXPORT void cwcglDeleteSamplers(GLcontext *context, GLsizei count, const GLuint * samplers);
EXPORT void cwcglIsSampler(GLcontext *context, GLuint sampler, GLboolean* return_value);
EXPORT void cwcglBindSampler(GLcontext *context, GLuint unit, GLuint sampler);
EXPORT void cwcglSamplerParameteri(GLcontext *context, GLuint sampler, GLenum pname, GLint param);
EXPORT void cwcglSamplerParameteriv(GLcontext *context, GLuint sampler, GLenum pname, const GLint * param);
EXPORT void cwcglSamplerParameterf(GLcontext *context, GLuint sampler, GLenum pname, GLfloat param);
EXPORT void cwcglSamplerParameterfv(GLcontext *context, GLuint sampler, GLenum pname, const GLfloat * param);
EXPORT void cwcglSamplerParameterIiv(GLcontext *context, GLuint sampler, GLenum pname, const GLint * param);
EXPORT void cwcglSamplerParameterIuiv(GLcontext *context, GLuint sampler, GLenum pname, const GLuint * param);
EXPORT void cwcglGetSamplerParameteriv(GLcontext *context, GLuint sampler, GLenum pname, GLint * params);
EXPORT void cwcglGetSamplerParameterIiv(GLcontext *context, GLuint sampler, GLenum pname, GLint * params);
EXPORT void cwcglGetSamplerParameterfv(GLcontext *context, GLuint sampler, GLenum pname, GLfloat * params);
EXPORT void cwcglGetSamplerParameterIuiv(GLcontext *context, GLuint sampler, GLenum pname, GLuint * params);
EXPORT void cwcglQueryCounter(GLcontext *context, GLuint id, GLenum target);
EXPORT void cwcglGetQueryObjecti64v(GLcontext *context, GLuint id, GLenum pname, GLint64 * params);
EXPORT void cwcglGetQueryObjectui64v(GLcontext *context, GLuint id, GLenum pname, GLuint64 * params);
EXPORT void cwcglVertexAttribDivisor(GLcontext *context, GLuint index, GLuint divisor);
EXPORT void cwcglVertexAttribP1ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP1uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexAttribP2ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP2uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexAttribP3ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP3uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexAttribP4ui(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, GLuint value);
EXPORT void cwcglVertexAttribP4uiv(GLcontext *context, GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
EXPORT void cwcglVertexP2ui(GLcontext *context, GLenum type, GLuint value);
EXPORT void cwcglVertexP2uiv(GLcontext *context, GLenum type, const GLuint * value);
EXPORT void cwcglVertexP3ui(GLcontext *context, GLenum type, GLuint value);
EXPORT void cwcglVertexP3uiv(GLcontext *context, GLenum type, const GLuint * value);
EXPORT void cwcglVertexP4ui(GLcontext *context, GLenum type, GLuint value);
EXPORT void cwcglVertexP4uiv(GLcontext *context, GLenum type, const GLuint * value);
EXPORT void cwcglTexCoordP1ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP1uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglTexCoordP2ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP2uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglTexCoordP3ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP3uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglTexCoordP4ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglTexCoordP4uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP1ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP1uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP2ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP2uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP3ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP3uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglMultiTexCoordP4ui(GLcontext *context, GLenum texture, GLenum type, GLuint coords);
EXPORT void cwcglMultiTexCoordP4uiv(GLcontext *context, GLenum texture, GLenum type, const GLuint * coords);
EXPORT void cwcglNormalP3ui(GLcontext *context, GLenum type, GLuint coords);
EXPORT void cwcglNormalP3uiv(GLcontext *context, GLenum type, const GLuint * coords);
EXPORT void cwcglColorP3ui(GLcontext *context, GLenum type, GLuint color);
EXPORT void cwcglColorP3uiv(GLcontext *context, GLenum type, const GLuint * color);
EXPORT void cwcglColorP4ui(GLcontext *context, GLenum type, GLuint color);
EXPORT void cwcglColorP4uiv(GLcontext *context, GLenum type, const GLuint * color);
EXPORT void cwcglSecondaryColorP3ui(GLcontext *context, GLenum type, GLuint color);
EXPORT void cwcglSecondaryColorP3uiv(GLcontext *context, GLenum type, const GLuint * color);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_0
EXPORT void cwcglMinSampleShading(GLcontext *context, GLfloat value);
EXPORT void cwcglBlendEquationi(GLcontext *context, GLuint buf, GLenum mode);
EXPORT void cwcglBlendEquationSeparatei(GLcontext *context, GLuint buf, GLenum modeRGB, GLenum modeAlpha);
EXPORT void cwcglBlendFunci(GLcontext *context, GLuint buf, GLenum src, GLenum dst);
EXPORT void cwcglBlendFuncSeparatei(GLcontext *context, GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
EXPORT void cwcglDrawArraysIndirect(GLcontext *context, GLenum mode, const void * indirect);
EXPORT void cwcglDrawElementsIndirect(GLcontext *context, GLenum mode, GLenum type, const void * indirect);
EXPORT void cwcglUniform1d(GLcontext *context, GLint location, GLdouble x);
EXPORT void cwcglUniform2d(GLcontext *context, GLint location, GLdouble x, GLdouble y);
EXPORT void cwcglUniform3d(GLcontext *context, GLint location, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglUniform4d(GLcontext *context, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglUniform1dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniform2dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniform3dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniform4dv(GLcontext *context, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglUniformMatrix2dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix3dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix4dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix2x3dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix2x4dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix3x2dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix3x4dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix4x2dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglUniformMatrix4x3dv(GLcontext *context, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglGetUniformdv(GLcontext *context, GLuint program, GLint location, GLdouble * params);
EXPORT void cwcglGetSubroutineUniformLocation(GLcontext *context, GLuint program, GLenum shadertype, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetSubroutineIndex(GLcontext *context, GLuint program, GLenum shadertype, const GLchar * name, GLuint* return_value);
EXPORT void cwcglGetActiveSubroutineUniformiv(GLcontext *context, GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
EXPORT void cwcglGetActiveSubroutineUniformName(GLcontext *context, GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
EXPORT void cwcglGetActiveSubroutineName(GLcontext *context, GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
EXPORT void cwcglUniformSubroutinesuiv(GLcontext *context, GLenum shadertype, GLsizei count, const GLuint * indices);
EXPORT void cwcglGetUniformSubroutineuiv(GLcontext *context, GLenum shadertype, GLint location, GLuint * params);
EXPORT void cwcglGetProgramStageiv(GLcontext *context, GLuint program, GLenum shadertype, GLenum pname, GLint * values);
EXPORT void cwcglPatchParameteri(GLcontext *context, GLenum pname, GLint value);
EXPORT void cwcglPatchParameterfv(GLcontext *context, GLenum pname, const GLfloat * values);
EXPORT void cwcglBindTransformFeedback(GLcontext *context, GLenum target, GLuint id);
EXPORT void cwcglDeleteTransformFeedbacks(GLcontext *context, GLsizei n, const GLuint * ids);
EXPORT void cwcglGenTransformFeedbacks(GLcontext *context, GLsizei n, GLuint * ids);
EXPORT void cwcglIsTransformFeedback(GLcontext *context, GLuint id, GLboolean* return_value);
EXPORT void cwcglPauseTransformFeedback(GLcontext *context);
EXPORT void cwcglResumeTransformFeedback(GLcontext *context);
EXPORT void cwcglDrawTransformFeedback(GLcontext *context, GLenum mode, GLuint id);
EXPORT void cwcglDrawTransformFeedbackStream(GLcontext *context, GLenum mode, GLuint id, GLuint stream);
EXPORT void cwcglBeginQueryIndexed(GLcontext *context, GLenum target, GLuint index, GLuint id);
EXPORT void cwcglEndQueryIndexed(GLcontext *context, GLenum target, GLuint index);
EXPORT void cwcglGetQueryIndexediv(GLcontext *context, GLenum target, GLuint index, GLenum pname, GLint * params);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_1
EXPORT void cwcglReleaseShaderCompiler(GLcontext *context);
EXPORT void cwcglShaderBinary(GLcontext *context, GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
EXPORT void cwcglGetShaderPrecisionFormat(GLcontext *context, GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
EXPORT void cwcglDepthRangef(GLcontext *context, GLfloat n, GLfloat f);
EXPORT void cwcglClearDepthf(GLcontext *context, GLfloat d);
EXPORT void cwcglGetProgramBinary(GLcontext *context, GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
EXPORT void cwcglProgramBinary(GLcontext *context, GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
EXPORT void cwcglProgramParameteri(GLcontext *context, GLuint program, GLenum pname, GLint value);
EXPORT void cwcglUseProgramStages(GLcontext *context, GLuint pipeline, GLbitfield stages, GLuint program);
EXPORT void cwcglActiveShaderProgram(GLcontext *context, GLuint pipeline, GLuint program);
EXPORT void cwcglCreateShaderProgramv(GLcontext *context, GLenum type, GLsizei count, const GLchar *const* strings, GLuint* return_value);
EXPORT void cwcglBindProgramPipeline(GLcontext *context, GLuint pipeline);
EXPORT void cwcglDeleteProgramPipelines(GLcontext *context, GLsizei n, const GLuint * pipelines);
EXPORT void cwcglGenProgramPipelines(GLcontext *context, GLsizei n, GLuint * pipelines);
EXPORT void cwcglIsProgramPipeline(GLcontext *context, GLuint pipeline, GLboolean* return_value);
EXPORT void cwcglGetProgramPipelineiv(GLcontext *context, GLuint pipeline, GLenum pname, GLint * params);
EXPORT void cwcglProgramUniform1i(GLcontext *context, GLuint program, GLint location, GLint v0);
EXPORT void cwcglProgramUniform1iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform1f(GLcontext *context, GLuint program, GLint location, GLfloat v0);
EXPORT void cwcglProgramUniform1fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform1d(GLcontext *context, GLuint program, GLint location, GLdouble v0);
EXPORT void cwcglProgramUniform1dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform1ui(GLcontext *context, GLuint program, GLint location, GLuint v0);
EXPORT void cwcglProgramUniform1uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniform2i(GLcontext *context, GLuint program, GLint location, GLint v0, GLint v1);
EXPORT void cwcglProgramUniform2iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform2f(GLcontext *context, GLuint program, GLint location, GLfloat v0, GLfloat v1);
EXPORT void cwcglProgramUniform2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform2d(GLcontext *context, GLuint program, GLint location, GLdouble v0, GLdouble v1);
EXPORT void cwcglProgramUniform2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform2ui(GLcontext *context, GLuint program, GLint location, GLuint v0, GLuint v1);
EXPORT void cwcglProgramUniform2uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniform3i(GLcontext *context, GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
EXPORT void cwcglProgramUniform3iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform3f(GLcontext *context, GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
EXPORT void cwcglProgramUniform3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform3d(GLcontext *context, GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
EXPORT void cwcglProgramUniform3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform3ui(GLcontext *context, GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
EXPORT void cwcglProgramUniform3uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniform4i(GLcontext *context, GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
EXPORT void cwcglProgramUniform4iv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLint * value);
EXPORT void cwcglProgramUniform4f(GLcontext *context, GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
EXPORT void cwcglProgramUniform4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLfloat * value);
EXPORT void cwcglProgramUniform4d(GLcontext *context, GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
EXPORT void cwcglProgramUniform4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLdouble * value);
EXPORT void cwcglProgramUniform4ui(GLcontext *context, GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
EXPORT void cwcglProgramUniform4uiv(GLcontext *context, GLuint program, GLint location, GLsizei count, const GLuint * value);
EXPORT void cwcglProgramUniformMatrix2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix2x3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix3x2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix2x4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix4x2fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix3x4fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix4x3fv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
EXPORT void cwcglProgramUniformMatrix2x3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix3x2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix2x4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix4x2dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix3x4dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglProgramUniformMatrix4x3dv(GLcontext *context, GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
EXPORT void cwcglValidateProgramPipeline(GLcontext *context, GLuint pipeline);
EXPORT void cwcglGetProgramPipelineInfoLog(GLcontext *context, GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
EXPORT void cwcglVertexAttribL1d(GLcontext *context, GLuint index, GLdouble x);
EXPORT void cwcglVertexAttribL2d(GLcontext *context, GLuint index, GLdouble x, GLdouble y);
EXPORT void cwcglVertexAttribL3d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z);
EXPORT void cwcglVertexAttribL4d(GLcontext *context, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
EXPORT void cwcglVertexAttribL1dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribL2dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribL3dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribL4dv(GLcontext *context, GLuint index, const GLdouble * v);
EXPORT void cwcglVertexAttribLPointer(GLcontext *context, GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
EXPORT void cwcglGetVertexAttribLdv(GLcontext *context, GLuint index, GLenum pname, GLdouble * params);
EXPORT void cwcglViewportArrayv(GLcontext *context, GLuint first, GLsizei count, const GLfloat * v);
EXPORT void cwcglViewportIndexedf(GLcontext *context, GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
EXPORT void cwcglViewportIndexedfv(GLcontext *context, GLuint index, const GLfloat * v);
EXPORT void cwcglScissorArrayv(GLcontext *context, GLuint first, GLsizei count, const GLint * v);
EXPORT void cwcglScissorIndexed(GLcontext *context, GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
EXPORT void cwcglScissorIndexedv(GLcontext *context, GLuint index, const GLint * v);
EXPORT void cwcglDepthRangeArrayv(GLcontext *context, GLuint first, GLsizei count, const GLdouble * v);
EXPORT void cwcglDepthRangeIndexed(GLcontext *context, GLuint index, GLdouble n, GLdouble f);
EXPORT void cwcglGetFloati_v(GLcontext *context, GLenum target, GLuint index, GLfloat * data);
EXPORT void cwcglGetDoublei_v(GLcontext *context, GLenum target, GLuint index, GLdouble * data);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_2
EXPORT void cwcglDrawArraysInstancedBaseInstance(GLcontext *context, GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
EXPORT void cwcglDrawElementsInstancedBaseInstance(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
EXPORT void cwcglDrawElementsInstancedBaseVertexBaseInstance(GLcontext *context, GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
EXPORT void cwcglGetInternalformativ(GLcontext *context, GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
EXPORT void cwcglGetActiveAtomicCounterBufferiv(GLcontext *context, GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
EXPORT void cwcglBindImageTexture(GLcontext *context, GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
EXPORT void cwcglMemoryBarrier(GLcontext *context, GLbitfield barriers);
EXPORT void cwcglTexStorage1D(GLcontext *context, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
EXPORT void cwcglTexStorage2D(GLcontext *context, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglTexStorage3D(GLcontext *context, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
EXPORT void cwcglDrawTransformFeedbackInstanced(GLcontext *context, GLenum mode, GLuint id, GLsizei instancecount);
EXPORT void cwcglDrawTransformFeedbackStreamInstanced(GLcontext *context, GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_3
EXPORT void cwcglClearBufferData(GLcontext *context, GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
EXPORT void cwcglClearBufferSubData(GLcontext *context, GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
EXPORT void cwcglDispatchCompute(GLcontext *context, GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
EXPORT void cwcglDispatchComputeIndirect(GLcontext *context, GLintptr indirect);
EXPORT void cwcglCopyImageSubData(GLcontext *context, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
EXPORT void cwcglFramebufferParameteri(GLcontext *context, GLenum target, GLenum pname, GLint param);
EXPORT void cwcglGetFramebufferParameteriv(GLcontext *context, GLenum target, GLenum pname, GLint * params);
EXPORT void cwcglGetInternalformati64v(GLcontext *context, GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
EXPORT void cwcglInvalidateTexSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
EXPORT void cwcglInvalidateTexImage(GLcontext *context, GLuint texture, GLint level);
EXPORT void cwcglInvalidateBufferSubData(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr length);
EXPORT void cwcglInvalidateBufferData(GLcontext *context, GLuint buffer);
EXPORT void cwcglInvalidateFramebuffer(GLcontext *context, GLenum target, GLsizei numAttachments, const GLenum * attachments);
EXPORT void cwcglInvalidateSubFramebuffer(GLcontext *context, GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglMultiDrawArraysIndirect(GLcontext *context, GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
EXPORT void cwcglMultiDrawElementsIndirect(GLcontext *context, GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
EXPORT void cwcglGetProgramInterfaceiv(GLcontext *context, GLuint program, GLenum programInterface, GLenum pname, GLint * params);
EXPORT void cwcglGetProgramResourceIndex(GLcontext *context, GLuint program, GLenum programInterface, const GLchar * name, GLuint* return_value);
EXPORT void cwcglGetProgramResourceName(GLcontext *context, GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
EXPORT void cwcglGetProgramResourceiv(GLcontext *context, GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
EXPORT void cwcglGetProgramResourceLocation(GLcontext *context, GLuint program, GLenum programInterface, const GLchar * name, GLint* return_value);
EXPORT void cwcglGetProgramResourceLocationIndex(GLcontext *context, GLuint program, GLenum programInterface, const GLchar * name, GLint* return_value);
EXPORT void cwcglShaderStorageBlockBinding(GLcontext *context, GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
EXPORT void cwcglTexBufferRange(GLcontext *context, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglTexStorage2DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
EXPORT void cwcglTexStorage3DMultisample(GLcontext *context, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
EXPORT void cwcglTextureView(GLcontext *context, GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
EXPORT void cwcglBindVertexBuffer(GLcontext *context, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
EXPORT void cwcglVertexAttribFormat(GLcontext *context, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
EXPORT void cwcglVertexAttribIFormat(GLcontext *context, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexAttribLFormat(GLcontext *context, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexAttribBinding(GLcontext *context, GLuint attribindex, GLuint bindingindex);
EXPORT void cwcglVertexBindingDivisor(GLcontext *context, GLuint bindingindex, GLuint divisor);
EXPORT void cwcglDebugMessageControl(GLcontext *context, GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
EXPORT void cwcglDebugMessageInsert(GLcontext *context, GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
EXPORT void cwcglDebugMessageCallback(GLcontext *context, GLDEBUGPROC callback, const void * userParam);
EXPORT void cwcglGetDebugMessageLog(GLcontext *context, GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog, GLuint* return_value);
EXPORT void cwcglPushDebugGroup(GLcontext *context, GLenum source, GLuint id, GLsizei length, const GLchar * message);
EXPORT void cwcglPopDebugGroup(GLcontext *context);
EXPORT void cwcglObjectLabel(GLcontext *context, GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
EXPORT void cwcglGetObjectLabel(GLcontext *context, GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
EXPORT void cwcglObjectPtrLabel(GLcontext *context, const void * ptr, GLsizei length, const GLchar * label);
EXPORT void cwcglGetObjectPtrLabel(GLcontext *context, const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_4
EXPORT void cwcglBufferStorage(GLcontext *context, GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
EXPORT void cwcglClearTexImage(GLcontext *context, GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
EXPORT void cwcglClearTexSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
EXPORT void cwcglBindBuffersBase(GLcontext *context, GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
EXPORT void cwcglBindBuffersRange(GLcontext *context, GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
EXPORT void cwcglBindTextures(GLcontext *context, GLuint first, GLsizei count, const GLuint * textures);
EXPORT void cwcglBindSamplers(GLcontext *context, GLuint first, GLsizei count, const GLuint * samplers);
EXPORT void cwcglBindImageTextures(GLcontext *context, GLuint first, GLsizei count, const GLuint * textures);
EXPORT void cwcglBindVertexBuffers(GLcontext *context, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_5
EXPORT void cwcglClipControl(GLcontext *context, GLenum origin, GLenum depth);
EXPORT void cwcglCreateTransformFeedbacks(GLcontext *context, GLsizei n, GLuint * ids);
EXPORT void cwcglTransformFeedbackBufferBase(GLcontext *context, GLuint xfb, GLuint index, GLuint buffer);
EXPORT void cwcglTransformFeedbackBufferRange(GLcontext *context, GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglGetTransformFeedbackiv(GLcontext *context, GLuint xfb, GLenum pname, GLint * param);
EXPORT void cwcglGetTransformFeedbacki_v(GLcontext *context, GLuint xfb, GLenum pname, GLuint index, GLint * param);
EXPORT void cwcglGetTransformFeedbacki64_v(GLcontext *context, GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
EXPORT void cwcglCreateBuffers(GLcontext *context, GLsizei n, GLuint * buffers);
EXPORT void cwcglNamedBufferStorage(GLcontext *context, GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
EXPORT void cwcglNamedBufferData(GLcontext *context, GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
EXPORT void cwcglNamedBufferSubData(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
EXPORT void cwcglCopyNamedBufferSubData(GLcontext *context, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
EXPORT void cwcglClearNamedBufferData(GLcontext *context, GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
EXPORT void cwcglClearNamedBufferSubData(GLcontext *context, GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
EXPORT void cwcglMapNamedBuffer(GLcontext *context, GLuint buffer, GLenum access, void ** return_value);
EXPORT void cwcglMapNamedBufferRange(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access, void ** return_value);
EXPORT void cwcglUnmapNamedBuffer(GLcontext *context, GLuint buffer, GLboolean* return_value);
EXPORT void cwcglFlushMappedNamedBufferRange(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr length);
EXPORT void cwcglGetNamedBufferParameteriv(GLcontext *context, GLuint buffer, GLenum pname, GLint * params);
EXPORT void cwcglGetNamedBufferParameteri64v(GLcontext *context, GLuint buffer, GLenum pname, GLint64 * params);
EXPORT void cwcglGetNamedBufferPointerv(GLcontext *context, GLuint buffer, GLenum pname, void ** params);
EXPORT void cwcglGetNamedBufferSubData(GLcontext *context, GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
EXPORT void cwcglCreateFramebuffers(GLcontext *context, GLsizei n, GLuint * framebuffers);
EXPORT void cwcglNamedFramebufferRenderbuffer(GLcontext *context, GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
EXPORT void cwcglNamedFramebufferParameteri(GLcontext *context, GLuint framebuffer, GLenum pname, GLint param);
EXPORT void cwcglNamedFramebufferTexture(GLcontext *context, GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
EXPORT void cwcglNamedFramebufferTextureLayer(GLcontext *context, GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
EXPORT void cwcglNamedFramebufferDrawBuffer(GLcontext *context, GLuint framebuffer, GLenum buf);
EXPORT void cwcglNamedFramebufferDrawBuffers(GLcontext *context, GLuint framebuffer, GLsizei n, const GLenum * bufs);
EXPORT void cwcglNamedFramebufferReadBuffer(GLcontext *context, GLuint framebuffer, GLenum src);
EXPORT void cwcglInvalidateNamedFramebufferData(GLcontext *context, GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
EXPORT void cwcglInvalidateNamedFramebufferSubData(GLcontext *context, GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglClearNamedFramebufferiv(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
EXPORT void cwcglClearNamedFramebufferuiv(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
EXPORT void cwcglClearNamedFramebufferfv(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
EXPORT void cwcglClearNamedFramebufferfi(GLcontext *context, GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
EXPORT void cwcglBlitNamedFramebuffer(GLcontext *context, GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
EXPORT void cwcglCheckNamedFramebufferStatus(GLcontext *context, GLuint framebuffer, GLenum target, GLenum* return_value);
EXPORT void cwcglGetNamedFramebufferParameteriv(GLcontext *context, GLuint framebuffer, GLenum pname, GLint * param);
EXPORT void cwcglGetNamedFramebufferAttachmentParameteriv(GLcontext *context, GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
EXPORT void cwcglCreateRenderbuffers(GLcontext *context, GLsizei n, GLuint * renderbuffers);
EXPORT void cwcglNamedRenderbufferStorage(GLcontext *context, GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglNamedRenderbufferStorageMultisample(GLcontext *context, GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglGetNamedRenderbufferParameteriv(GLcontext *context, GLuint renderbuffer, GLenum pname, GLint * params);
EXPORT void cwcglCreateTextures(GLcontext *context, GLenum target, GLsizei n, GLuint * textures);
EXPORT void cwcglTextureBuffer(GLcontext *context, GLuint texture, GLenum internalformat, GLuint buffer);
EXPORT void cwcglTextureBufferRange(GLcontext *context, GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
EXPORT void cwcglTextureStorage1D(GLcontext *context, GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
EXPORT void cwcglTextureStorage2D(GLcontext *context, GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
EXPORT void cwcglTextureStorage3D(GLcontext *context, GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
EXPORT void cwcglTextureStorage2DMultisample(GLcontext *context, GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
EXPORT void cwcglTextureStorage3DMultisample(GLcontext *context, GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
EXPORT void cwcglTextureSubImage1D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTextureSubImage2D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglTextureSubImage3D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
EXPORT void cwcglCompressedTextureSubImage1D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTextureSubImage2D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCompressedTextureSubImage3D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
EXPORT void cwcglCopyTextureSubImage1D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
EXPORT void cwcglCopyTextureSubImage2D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglCopyTextureSubImage3D(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
EXPORT void cwcglTextureParameterf(GLcontext *context, GLuint texture, GLenum pname, GLfloat param);
EXPORT void cwcglTextureParameterfv(GLcontext *context, GLuint texture, GLenum pname, const GLfloat * param);
EXPORT void cwcglTextureParameteri(GLcontext *context, GLuint texture, GLenum pname, GLint param);
EXPORT void cwcglTextureParameterIiv(GLcontext *context, GLuint texture, GLenum pname, const GLint * params);
EXPORT void cwcglTextureParameterIuiv(GLcontext *context, GLuint texture, GLenum pname, const GLuint * params);
EXPORT void cwcglTextureParameteriv(GLcontext *context, GLuint texture, GLenum pname, const GLint * param);
EXPORT void cwcglGenerateTextureMipmap(GLcontext *context, GLuint texture);
EXPORT void cwcglBindTextureUnit(GLcontext *context, GLuint unit, GLuint texture);
EXPORT void cwcglGetTextureImage(GLcontext *context, GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetCompressedTextureImage(GLcontext *context, GLuint texture, GLint level, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetTextureLevelParameterfv(GLcontext *context, GLuint texture, GLint level, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTextureLevelParameteriv(GLcontext *context, GLuint texture, GLint level, GLenum pname, GLint * params);
EXPORT void cwcglGetTextureParameterfv(GLcontext *context, GLuint texture, GLenum pname, GLfloat * params);
EXPORT void cwcglGetTextureParameterIiv(GLcontext *context, GLuint texture, GLenum pname, GLint * params);
EXPORT void cwcglGetTextureParameterIuiv(GLcontext *context, GLuint texture, GLenum pname, GLuint * params);
EXPORT void cwcglGetTextureParameteriv(GLcontext *context, GLuint texture, GLenum pname, GLint * params);
EXPORT void cwcglCreateVertexArrays(GLcontext *context, GLsizei n, GLuint * arrays);
EXPORT void cwcglDisableVertexArrayAttrib(GLcontext *context, GLuint vaobj, GLuint index);
EXPORT void cwcglEnableVertexArrayAttrib(GLcontext *context, GLuint vaobj, GLuint index);
EXPORT void cwcglVertexArrayElementBuffer(GLcontext *context, GLuint vaobj, GLuint buffer);
EXPORT void cwcglVertexArrayVertexBuffer(GLcontext *context, GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
EXPORT void cwcglVertexArrayVertexBuffers(GLcontext *context, GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
EXPORT void cwcglVertexArrayAttribBinding(GLcontext *context, GLuint vaobj, GLuint attribindex, GLuint bindingindex);
EXPORT void cwcglVertexArrayAttribFormat(GLcontext *context, GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
EXPORT void cwcglVertexArrayAttribIFormat(GLcontext *context, GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexArrayAttribLFormat(GLcontext *context, GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
EXPORT void cwcglVertexArrayBindingDivisor(GLcontext *context, GLuint vaobj, GLuint bindingindex, GLuint divisor);
EXPORT void cwcglGetVertexArrayiv(GLcontext *context, GLuint vaobj, GLenum pname, GLint * param);
EXPORT void cwcglGetVertexArrayIndexediv(GLcontext *context, GLuint vaobj, GLuint index, GLenum pname, GLint * param);
EXPORT void cwcglGetVertexArrayIndexed64iv(GLcontext *context, GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
EXPORT void cwcglCreateSamplers(GLcontext *context, GLsizei n, GLuint * samplers);
EXPORT void cwcglCreateProgramPipelines(GLcontext *context, GLsizei n, GLuint * pipelines);
EXPORT void cwcglCreateQueries(GLcontext *context, GLenum target, GLsizei n, GLuint * ids);
EXPORT void cwcglGetQueryBufferObjecti64v(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglGetQueryBufferObjectiv(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglGetQueryBufferObjectui64v(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglGetQueryBufferObjectuiv(GLcontext *context, GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
EXPORT void cwcglMemoryBarrierByRegion(GLcontext *context, GLbitfield barriers);
EXPORT void cwcglGetTextureSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetCompressedTextureSubImage(GLcontext *context, GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetGraphicsResetStatus(GLcontext *context, GLenum* return_value);
EXPORT void cwcglGetnCompressedTexImage(GLcontext *context, GLenum target, GLint lod, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetnTexImage(GLcontext *context, GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
EXPORT void cwcglGetnUniformdv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
EXPORT void cwcglGetnUniformfv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
EXPORT void cwcglGetnUniformiv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLint * params);
EXPORT void cwcglGetnUniformuiv(GLcontext *context, GLuint program, GLint location, GLsizei bufSize, GLuint * params);
EXPORT void cwcglReadnPixels(GLcontext *context, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
EXPORT void cwcglGetnMapdv(GLcontext *context, GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
EXPORT void cwcglGetnMapfv(GLcontext *context, GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
EXPORT void cwcglGetnMapiv(GLcontext *context, GLenum target, GLenum query, GLsizei bufSize, GLint * v);
EXPORT void cwcglGetnPixelMapfv(GLcontext *context, GLenum map, GLsizei bufSize, GLfloat * values);
EXPORT void cwcglGetnPixelMapuiv(GLcontext *context, GLenum map, GLsizei bufSize, GLuint * values);
EXPORT void cwcglGetnPixelMapusv(GLcontext *context, GLenum map, GLsizei bufSize, GLushort * values);
EXPORT void cwcglGetnPolygonStipple(GLcontext *context, GLsizei bufSize, GLubyte * pattern);
EXPORT void cwcglGetnColorTable(GLcontext *context, GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
EXPORT void cwcglGetnConvolutionFilter(GLcontext *context, GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
EXPORT void cwcglGetnSeparableFilter(GLcontext *context, GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
EXPORT void cwcglGetnHistogram(GLcontext *context, GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
EXPORT void cwcglGetnMinmax(GLcontext *context, GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
EXPORT void cwcglTextureBarrier(GLcontext *context);
#endif
#if CWCGL_VERSION >= GL_VERSION_4_6
EXPORT void cwcglSpecializeShader(GLcontext *context, GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
EXPORT void cwcglMultiDrawArraysIndirectCount(GLcontext *context, GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
EXPORT void cwcglMultiDrawElementsIndirectCount(GLcontext *context, GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
EXPORT void cwcglPolygonOffsetClamp(GLcontext *context, GLfloat factor, GLfloat units, GLfloat clamp);
#endif
EXPORT int InitOpenGL(void);

#ifdef __cplusplus
}
#endif
#endif // CWCGL_WRAPPER_HEADER
